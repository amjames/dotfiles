Delivered-To: amjames2@vt.edu
Received: by 10.140.98.167 with SMTP id o36csp63876qge;
        Sat, 4 Oct 2014 13:54:32 -0700 (PDT)
X-Received: by 10.140.102.238 with SMTP id w101mr16142151qge.17.1412456072527;
        Sat, 04 Oct 2014 13:54:32 -0700 (PDT)
Return-Path: <fabijan5@vt.edu>
Received: from mr1.cc.vt.edu (mr1.cc.ipv6.vt.edu. [2001:468:c80:2105:0:277:40de:506c])
        by mx.google.com with ESMTPS id dh2si17630168qcb.1.2014.10.04.13.54.32
        for <amjames2@vt.edu>
        (version=TLSv1.2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Sat, 04 Oct 2014 13:54:32 -0700 (PDT)
Received-SPF: softfail (google.com: domain of transitioning fabijan5@vt.edu does not designate 74.125.82.44 as permitted sender) client-ip=74.125.82.44;
Authentication-Results: mx.google.com;
       spf=softfail (google.com: domain of transitioning fabijan5@vt.edu does not designate 74.125.82.44 as permitted sender) smtp.mail=fabijan5@vt.edu
Received: from mail-wg0-f44.google.com (mail-wg0-f44.google.com [74.125.82.44])
	by mr1.cc.vt.edu (8.14.4/8.14.4) with ESMTP id s94KsQte004850
	for <amjames2@vt.edu>; Sat, 4 Oct 2014 16:54:31 -0400
Received: by mail-wg0-f44.google.com with SMTP id y10so3860841wgg.15
        for <amjames2@vt.edu>; Sat, 04 Oct 2014 13:54:26 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:mime-version:date:message-id:subject:from:to
         :content-type;
        bh=IeGNpjnPglDu0/auDfV4geydTPAX1LABp/gRBXaO+2k=;
        b=Cl0pfQELDNJLV2X/3w6xFqqaT6Nw4kVj+5upt0BZ3zl4mavZLhFzRzrwSfH5UJGJfy
         LoLIn+6zqfkeoz/jbYdsWyIINdI3nOruJ/Hud4C2+NPAlG7nchKyALewcA4nY7LZOxHx
         WmAzczHECB7iLDOUp/Q/B4S9GkqFazIAFjctQ2a4dsXR0r51aUt75IOrW4LKoZpxxagz
         yzzKCZ40yq+H9vtXZLswKr9oWSkBRJ7mpC9uPrDAd3H7JiUzEcaSN7XemzJ2suWny0Hw
         bBYzMmfDEOlbjAqXA+0zFcDinVpgjzMeunKqNd7Ewvz78YmlSYiuu8QSdczYW1r96Kwl
         Rscw==
X-Gm-Message-State: ALoCoQmvrVwmuOnGqVqgnkE26TQ/ZlCTb+zPme1JlZhuueKzTpGqZEfpRflX9mdsQNW5IzJKT+iSunupqAPd4yJA1zv6hs3qVB4s2wdMTOsCuNoHsOqhK2/AbJ7X/puKFMM0TTkUeRJVR0j3o0w5TKebjWqL5t/8RQ==
X-Received: by 10.194.242.33 with SMTP id wn1mr17922554wjc.110.1412456066082;
        Sat, 04 Oct 2014 13:54:26 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.194.242.33 with SMTP id wn1mr17922547wjc.110.1412456065992;
 Sat, 04 Oct 2014 13:54:25 -0700 (PDT)
Received: by 10.27.139.86 with HTTP; Sat, 4 Oct 2014 13:54:25 -0700 (PDT)
Date: Sat, 4 Oct 2014 16:54:25 -0400
Message-ID: <CAGyt7JFjNuGRAbV_7m7Ccdbxxrd5f-n5uDCukmz59noVRY+j+g@mail.gmail.com>
Subject: template
From: Fabijan Pavosevic <fabijan5@vt.edu>
To: amjames2@vt.edu
Content-Type: multipart/mixed; boundary=089e014942a01361b905049f0ead
X-Spam-Status: No, score=-0.7 required=5.0 tests=HTML_MESSAGE,
	RCVD_IN_DNSWL_LOW,TVD_SPACE_RATIO autolearn=disabled version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mr1.cc.vt.edu
X-Gm-Spam: 0
X-Gm-Phishy: 1
X-Gm-Spam: 0
X-Gm-Phishy: 1

--089e014942a01361b905049f0ead
Content-Type: multipart/alternative; boundary=089e014942a01361b505049f0eab

--089e014942a01361b505049f0eab
Content-Type: text/plain; charset=UTF-8



--089e014942a01361b505049f0eab
Content-Type: text/html; charset=UTF-8

<div dir="ltr"><br></div>

--089e014942a01361b505049f0eab--
--089e014942a01361b905049f0ead
Content-Type: application/octet-stream; name="acs-template.bib"
Content-Disposition: attachment; filename="acs-template.bib"
Content-Transfer-Encoding: base64
X-Attachment-Id: f_i0vfv6hn0

VGhpcyBpcyBhbiBhdXhpbGlhcnkgZmlsZSB1c2VkIGJ5IHRoZSBgYWNoZW1zbycgYnVuZGxlLgpU
aGlzIGZpbGUgbWF5IHNhZmVseSBiZSBkZWxldGVkLiBJdCB3aWxsIGJlIHJlY3JlYXRlZCBhcyBy
ZXF1aXJlZC4KIApAQ29udHJvbHthY2hlbXNvLWNvbnRyb2wsCiAgY3RybC11c2UtdGl0bGUgICAg
ID0gICJubyIsCiAgY3RybC1ldGFsLW51bWJlciAgID0gICIxNSIsCiAgY3RybC1ldGFsLWZpcnN0
b25seSA9ICAieWVzIiwKfQoK
--089e014942a01361b905049f0ead
Content-Type: application/octet-stream; name="refs.bib"
Content-Disposition: attachment; filename="refs.bib"
Content-Transfer-Encoding: base64
X-Attachment-Id: f_i0vfv6ii1

JSUgQ3JlYXRlZCB1c2luZyBQYXBlcnMgb24gVGh1LCAwNSBEZWMgMjAxMy4KJSUgaHR0cDovL3Bh
cGVyc2FwcC5jb20vcGFwZXJzLwoKQGFydGljbGV7TmVlc2U6MjAwOWtwLAphdXRob3IgPSB7TmVl
c2UsIEZyYW5rIGFuZCBXZW5ubW9ocywgRnJhbmsgYW5kIEhhbnNlbiwgQW5kcmVhc30sCnRpdGxl
ID0ge3tFZmZpY2llbnQgYW5kIGFjY3VyYXRlIGxvY2FsIGFwcHJveGltYXRpb25zIHRvIGNvdXBs
ZWQtZWxlY3Ryb24gcGFpciBhcHByb2FjaGVzOiBBbiBhdHRlbXB0IHRvIHJldml2ZSB0aGUgcGFp
ciBuYXR1cmFsIG9yYml0YWwgbWV0aG9kLn19LApqb3VybmFsID0ge1RoZSBKb3VybmFsIG9mIENo
ZW1pY2FsIFBoeXNpY3N9LAp5ZWFyID0gezIwMDl9LAp2b2x1bWUgPSB7MTMwfSwKbnVtYmVyID0g
ezExfSwKcGFnZXMgPSB7MTE0MTA4fSwKbW9udGggPSBtYXIKfQoKQGFydGljbGV7WWFuZzoyMDEy
aHksCmF1dGhvciA9IHtZYW5nLCBKdW4gYW5kIENoYW4sIEdhcm5ldCBLaW4tTGljIGFuZCBNYW5i
eSwgRnJlZGVyaWNrIFIgYW5kIFNjaHtcInV9dHosIE1hcnRpbiBhbmQgV2VybmVyLCBIYW5zLUpv
YWNoaW19LAp0aXRsZSA9IHt7VGhlIG9yYml0YWwtc3BlY2lmaWMtdmlydHVhbCBsb2NhbCBjb3Vw
bGVkIGNsdXN0ZXIgc2luZ2xlcyBhbmQgZG91YmxlcyBtZXRob2QufX0sCmpvdXJuYWwgPSB7VGhl
IEpvdXJuYWwgb2YgQ2hlbWljYWwgUGh5c2ljc30sCnllYXIgPSB7MjAxMn0sCnZvbHVtZSA9IHsx
MzZ9LApudW1iZXIgPSB7MTR9LApwYWdlcyA9IHsxNDQxMDV9LAptb250aCA9IGFwcgp9CgpAYXJ0
aWNsZXtDaXplazoxOTcxY3csCmF1dGhvciA9IHt7XHYgQ317XCdcaX17XHYgen1laywgSiBhbmQg
UGFsZHVzLCBKfSwKdGl0bGUgPSB7e0NvcnJlbGF0aW9uIHByb2JsZW1zIGluIGF0b21pYyBhbmQg
bW9sZWN1bGFyIHN5c3RlbXMgSUlJLiBSZWRlcml2YXRpb24gb2YgdGhlIGNvdXBsZWTigJBwYWly
IG1hbnnigJBlbGVjdHJvbiB0aGVvcnkgdXNpbmcgdGhlIHRyYWRpdGlvbmFsIHF1YW50dW0gY2hl
bWljYWwgbWV0aG9kc3R9fSwKam91cm5hbCA9IHtJbnRlcm5hdGlvbmFsIEpvdXJuYWwgb2YgUXVh
bnR1bSBDaGVtaXN0cnl9LAp5ZWFyID0gezE5NzF9LAp2b2x1bWUgPSB7NX0sCm51bWJlciA9IHs0
fSwKcGFnZXMgPSB7MzU5LS0zNzl9Cn0KCkBhcnRpY2xle0xlZToxOTkwdnMsCiAgdGl0bGU9e0Nv
bXBhcmlzb24gb2YgdGhlIHF1YWRyYXRpYyBjb25maWd1cmF0aW9uIGludGVyYWN0aW9uIGFuZCBj
b3VwbGVkLWNsdXN0ZXIgYXBwcm9hY2hlcyB0byBlbGVjdHJvbiBjb3JyZWxhdGlvbiBpbmNsdWRp
bmcgdGhlIGVmZmVjdCBvZiB0cmlwbGUgZXhjaXRhdGlvbnN9LAogIGF1dGhvcj17TGVlLCBUaW1v
dGh5IEogYW5kIFJlbmRlbGwsIEFsaXN0YWlyIFAgYW5kIFRheWxvciwgUGV0ZXIgUn0sCiAgam91
cm5hbD17Sm91cm5hbCBvZiBQaHlzaWNhbCBDaGVtaXN0cnl9LAogIHZvbHVtZT17OTR9LAogIG51
bWJlcj17MTR9LAogIHBhZ2VzPXs1NDYzLS01NDY4fSwKICB5ZWFyPXsxOTkwfSwKICBwdWJsaXNo
ZXI9e0FDUyBQdWJsaWNhdGlvbnN9Cn0KCkBhcnRpY2xle1RldzoyMDEzd2osCmF1dGhvciA9IHtU
ZXcsIERhdmlkIFAgYW5kIEh7XCJhfXR0aWcsIENocmlzdG9mfSwKdGl0bGUgPSB7e1BhaXIgbmF0
dXJhbCBvcmJpdGFscyBpbiBleHBsaWNpdGx5IGNvcnJlbGF0ZWQgc2Vjb25k4oCQb3JkZXIgbXtc
b31sbGVyLS1wbGVzc2V0IHRoZW9yeX19LApqb3VybmFsID0ge0ludGVybmF0aW9uYWwgSm91cm5h
bCBvZiBRdWFudHVtIENoZW1pc3RyeX0sCnllYXIgPSB7MjAxM30sCnZvbHVtZSA9IHsxMTN9LApu
dW1iZXIgPSB7M30sCnBhZ2VzID0gezIyNC0tMjI5fQp9CgpAYXJ0aWNsZXtWb25OaWVzc2VuOjE5
NzJmaiwKYXV0aG9yID0ge1ZvbiBOaWVzc2VuLCBXfSwKdGl0bGUgPSB7e0RlbnNpdHkgbG9jYWxp
emF0aW9uIG9mIGF0b21pYyBhbmQgbW9sZWN1bGFyIG9yYml0YWxzfX0sCmpvdXJuYWwgPSB7VGhl
b3JldGljYSBjaGltaWNhIGFjdGF9LAp5ZWFyID0gezE5NzJ9LAp2b2x1bWUgPSB7Mjd9LApudW1i
ZXIgPSB7MX0sCnBhZ2VzID0gezktLTIzfQp9CgpAYXJ0aWNsZXtXZXJuZXI6MjAwM3doLAphdXRo
b3IgPSB7V2VybmVyLCBIYW5zLUpvYWNoaW0gYW5kIE1hbmJ5LCBGcmVkZXJpY2sgUiBhbmQgS25v
d2xlcywgUGV0ZXIgSn0sCnRpdGxlID0ge3tGYXN0IGxpbmVhciBzY2FsaW5nIHNlY29uZC1vcmRl
ciBNe1xvfWxsZXItUGxlc3NldCBwZXJ0dXJiYXRpb24gdGhlb3J5IChNUDIpIHVzaW5nIGxvY2Fs
IGFuZCBkZW5zaXR5IGZpdHRpbmcgYXBwcm94aW1hdGlvbnN9fSwKam91cm5hbCA9IHtUaGUgSm91
cm5hbCBvZiBDaGVtaWNhbCBQaHlzaWNzfSwKeWVhciA9IHsyMDAzfSwKdm9sdW1lID0gezExOH0s
Cm51bWJlciA9IHsxOH0sCnBhZ2VzID0gezgxNDktLTgxNjB9LAptb250aCA9IG1heQp9CgpAYm9v
a3tBbm9ueW1vdXM6MTk1OHRhLApwdWJsaXNoZXIgPSB7Sm9obiBXaWxleSB7XCZ9IFNvbnMsIElu
Yy59LAp5ZWFyID0gezE5NTh9LAphZGRyZXNzID0ge0hvYm9rZW4sIE5KLCBVU0F9LAptb250aCA9
IGphbgp9CgpAYXJ0aWNsZXtNYW5ieToyMDAzdm0sCmF1dGhvciA9IHtNYW5ieSwgRiBSfSwKdGl0
bGUgPSB7e0RlbnNpdHkgZml0dGluZyBpbiBzZWNvbmQtb3JkZXIgbGluZWFyLXJ+IDF+IDIgTW9s
bGVyLVBsZXNzZXQgcGVydHVyYmF0aW9uIHRoZW9yeX19LApqb3VybmFsID0ge0pvdXJuYWwgb2Yg
Q2hlbWljYWwgUGh5c2ljc30sCnllYXIgPSB7MjAwM30sCnZvbHVtZSA9IHsxMTl9LApudW1iZXIg
PSB7OX0sCnBhZ2VzID0gezQ2MDd9LAptb250aCA9IGphbgp9CgpAYXJ0aWNsZXtTbGF0ZXI6MTky
OWhxLAphdXRob3IgPSB7U2xhdGVyLCBKfSwKdGl0bGUgPSB7e1RoZSBUaGVvcnkgb2YgQ29tcGxl
eCBTcGVjdHJhfX0sCmpvdXJuYWwgPSB7UGh5c2ljYWwgUmV2aWV3fSwKeWVhciA9IHsxOTI5fSwK
dm9sdW1lID0gezM0fSwKbnVtYmVyID0gezEwfSwKcGFnZXMgPSB7MTI5My0tMTMyMn0sCm1vbnRo
ID0gbm92Cn0KCkBhcnRpY2xle0JhcnRsZXR0OjIwMDdrdiwKYXV0aG9yID0ge0JhcnRsZXR0LCBS
b2RuZXkgYW5kIE11c2lhe1xsfSwgTW9uaWthfSwKdGl0bGUgPSB7e0NvdXBsZWQtY2x1c3RlciB0
aGVvcnkgaW4gcXVhbnR1bSBjaGVtaXN0cnl9fSwKam91cm5hbCA9IHtSZXZpZXdzIG9mIE1vZGVy
biBQaHlzaWNzfSwKeWVhciA9IHsyMDA3fSwKdm9sdW1lID0gezc5fSwKbnVtYmVyID0gezF9LApw
YWdlcyA9IHsyOTEtLTM1Mn0sCm1vbnRoID0gZmViCn0KCkBhcnRpY2xle0FsbWxvZjoxOTkxd3Es
CmF1dGhvciA9IHtBbG1se1wib31mLCBKfSwKdGl0bGUgPSB7e0VsaW1pbmF0aW9uIG9mIGVuZXJn
eSBkZW5vbWluYXRvcnMgaW4gTXtcb31sbGVyLS0tUGxlc3NldCBwZXJ0dXJiYXRpb24gdGhlb3J5
IGJ5IGEgTGFwbGFjZSB0cmFuc2Zvcm0gYXBwcm9hY2h9fSwKam91cm5hbCA9IHtDaGVtaWNhbCBw
aHlzaWNzIGxldHRlcnN9LAp5ZWFyID0gezE5OTF9LAp2b2x1bWUgPSB7MTgxfSwKbnVtYmVyID0g
ezR9LApwYWdlcyA9IHszMTktLTMyMH0KfQoKQGFydGljbGV7UG9wbGU6MTk4N3RkLAogIHRpdGxl
PXtRdWFkcmF0aWMgY29uZmlndXJhdGlvbiBpbnRlcmFjdGlvbi4gQSBnZW5lcmFsIHRlY2huaXF1
ZSBmb3IgZGV0ZXJtaW5pbmcgZWxlY3Ryb24gY29ycmVsYXRpb24gZW5lcmdpZXN9LAogIGF1dGhv
cj17UG9wbGUsIEpvaG4gQSBhbmQgSGVhZC1Hb3Jkb24sIE1hcnRpbiBhbmQgUmFnaGF2YWNoYXJp
LCBLcmlzaG5hbn0sCiAgam91cm5hbD17VGhlIEpvdXJuYWwgb2YgY2hlbWljYWwgcGh5c2ljc30s
CiAgdm9sdW1lPXs4N30sCiAgcGFnZXM9ezU5Njh9LAogIHllYXI9ezE5ODd9Cn0KCkBhcnRpY2xl
e0hveXZpazoyMDEzdWIsCmF1dGhvcj17SHtcb315dmlrLCBJZGEtTWFyaWUgYW5kIEphbnNpaywg
QnJhbmlzbGF2IGFuZCBKe1xvfXJnZW5zZW4sIFBvdWx9LAp0aXRsZSA9IHt7UGlwZWstLU1lemV5
IGxvY2FsaXphdGlvbiBvZiBvY2N1cGllZCBhbmQgdmlydHVhbCBvcmJpdGFsc319LApqb3VybmFs
ID0ge0pvdXJuYWwgb2YgQ29tcHV0YXRpb25hbCBDaGVtaXN0cnl9LAp5ZWFyID0gezIwMTN9LAp2
b2x1bWUgPSB7MzR9LApudW1iZXIgPSB7MTd9LApwYWdlcyA9IHsxNDU2LS0xNDYyfQp9CgpAYXJ0
aWNsZXtIYXR0aWc6MjAxMXZlLAogIHRpdGxlPXtFeHBsaWNpdGx5IGNvcnJlbGF0ZWQgZWxlY3Ry
b25zIGluIG1vbGVjdWxlc30sCiAgYXV0aG9yPXtIe1wiYX10dGlnLCBDaHJpc3RvZiBhbmQgS2xv
cHBlciwgV2ltIGFuZCBLe1wib31obiwgQW5kcmVhcyBhbmQgVGV3LCBEYXZpZCBQfSwKICBqb3Vy
bmFsPXtDaGVtaWNhbCByZXZpZXdzfSwKICB2b2x1bWU9ezExMn0sCiAgbnVtYmVyPXsxfSwKICBw
YWdlcz17NC0tNzR9LAogIHllYXI9ezIwMTF9LAogIHB1Ymxpc2hlcj17QUNTIFB1YmxpY2F0aW9u
c30KfQoKQGJvb2t7QW5vbnltb3VzOjIwMDB0YSwKcHVibGlzaGVyID0ge0pvaG4gV2lsZXkge1wm
fSBTb25zLCBJbmMufSwKeWVhciA9IHsyMDAwfSwKYWRkcmVzcyA9IHtIb2Jva2VuLCBOSiwgVVNB
fSwKbW9udGggPSBqYW4KfQoKQGFydGljbGV7R3JpbW1lOjIwMDZkeSwKYXV0aG9yID0ge0dyaW1t
ZSwgU3RlZmFufSwKdGl0bGUgPSB7e1NlZW1pbmdseSBTaW1wbGUgU3RlcmVvZWxlY3Ryb25pYyBF
ZmZlY3RzIGluIEFsa2FuZSBJc29tZXJzIGFuZCB0aGUgSW1wbGljYXRpb25zIGZvciBLb2huLS1T
aGFtIERlbnNpdHkgRnVuY3Rpb25hbCBUaGVvcnl9fSwKam91cm5hbCA9IHtBbmdld2FuZHRlIENo
ZW1pZSBJbnRlcm5hdGlvbmFsIEVkaXRpb259LAp5ZWFyID0gezIwMDZ9LAp2b2x1bWUgPSB7NDV9
LApudW1iZXIgPSB7Mjd9LApwYWdlcyA9IHs0NDYwLS00NDY0fQp9CgpAYXJ0aWNsZXtSb290aGFh
bjoxOTUxaGIsCmF1dGhvciA9IHtSb290aGFhbiwgQ30sCnRpdGxlID0ge3tOZXcgRGV2ZWxvcG1l
bnRzIGluIE1vbGVjdWxhciBPcmJpdGFsIFRoZW9yeX19LApqb3VybmFsID0ge1Jldmlld3Mgb2Yg
TW9kZXJuIFBoeXNpY3N9LAp5ZWFyID0gezE5NTF9LAp2b2x1bWUgPSB7MjN9LApudW1iZXIgPSB7
Mn0sCnBhZ2VzID0gezY5LS04OX0sCm1vbnRoID0gYXByCn0KCkBhcnRpY2xle01leWVyOjE5NzNm
YiwKYXV0aG9yID0ge01leWVyLCBXaWxmcmllZH0sCnRpdGxlPXtQTk8gW1NpbmdsZSBCb25kXSBD
SSBTdHVkaWVzIG9mIGVsZWN0cm9uIGNvcnJlbGF0aW9uIGVmZmVjdHMuIEkuIENvbmZpZ3VyYXRp
b24gZXhwYW5zaW9uIGJ5IG1lYW5zIG9mIG5vbm9ydGhvZ29uYWwgb3JiaXRhbHMsIGFuZCBhcHBs
aWNhdGlvbiB0byB0aGUgZ3JvdW5kIHN0YXRlIGFuZCBpb25pemVkIHN0YXRlcyBvZiBtZXRoYW5l
fSwKam91cm5hbCA9IHtUaGUgSm91cm5hbCBvZiBDaGVtaWNhbCBQaHlzaWNzfSwKeWVhciA9IHsx
OTczfSwKdm9sdW1lID0gezU4fSwKbnVtYmVyID0gezN9LApwYWdlcyA9IHsxMDE3LS0xMDM1fSwK
bW9udGggPSBmZWIKfQoKCkBhcnRpY2xle05lZXNlOjIwMDlkYiwKICB0aXRsZT17RWZmaWNpZW50
IGFuZCBhY2N1cmF0ZSBhcHByb3hpbWF0aW9ucyB0byB0aGUgbG9jYWwgY291cGxlZCBjbHVzdGVy
IHNpbmdsZXMgZG91YmxlcyBtZXRob2QgdXNpbmcgYSB0cnVuY2F0ZWQgcGFpciBuYXR1cmFsIG9y
Yml0YWwgYmFzaXN9LAogIGF1dGhvcj17TmVlc2UsIEZyYW5rIGFuZCBIYW5zZW4sIEFuZHJlYXMg
YW5kIExpYWtvcywgRGltaXRyaW9zIEd9LAogIGpvdXJuYWw9e1RoZSBKb3VybmFsIG9mIGNoZW1p
Y2FsIHBoeXNpY3N9LAogIHZvbHVtZT17MTMxfSwKICBwYWdlcz17MDY0MTAzfSwKICB5ZWFyPXsy
MDA5fQp9CgoKQGFydGljbGV7TW9sbGVyOjE5MzR0bSwKICB0aXRsZT17Tm90ZSBvbiBhbiBhcHBy
b3hpbWF0aW9uIHRyZWF0bWVudCBmb3IgbWFueS1lbGVjdHJvbiBzeXN0ZW1zfSwKICBhdXRob3I9
e017XG99bGxlciwgQ2hyIGFuZCBQbGVzc2V0LCBNaWx0b24gU30sCiAgam91cm5hbD17UGh5c2lj
YWwgUmV2aWV3fSwKICB2b2x1bWU9ezQ2fSwKICBudW1iZXI9ezd9LAogIHBhZ2VzPXs2MTh9LAog
IHllYXI9ezE5MzR9LAogIHB1Ymxpc2hlcj17QVBTfQp9CgpAYXJ0aWNsZXtIYXR0aWc6MjAxMnVz
LAogIHRpdGxlPXtMb2NhbCBleHBsaWNpdGx5IGNvcnJlbGF0ZWQgc2Vjb25kLWFuZCB0aGlyZC1v
cmRlciBNe1xvfWxsZXItLVBsZXNzZXQgcGVydHVyYmF0aW9uIHRoZW9yeSB3aXRoIHBhaXIgbmF0
dXJhbCBvcmJpdGFsc30sCiAgYXV0aG9yPXtIe1wiYX10dGlnLCBDaHJpc3RvZiBhbmQgVGV3LCBE
YXZpZCBQIGFuZCBIZWxtaWNoLCBCZW5qYW1pbn0sCiAgam91cm5hbD17VGhlIEpvdXJuYWwgb2Yg
Q2hlbWljYWwgUGh5c2ljc30sCiAgdm9sdW1lPXsxMzZ9LAogIHBhZ2VzPXsyMDQxMDV9LAogIHll
YXI9ezIwMTJ9Cn0KCkBhcnRpY2xle1dlbm5tb2hzOjIwMDhqbCwKYXV0aG9yID0ge1dlbm5tb2hz
LCBGcmFuayBhbmQgTmVlc2UsIEZyYW5rfSwKdGl0bGUgPSB7e0EgY29tcGFyYXRpdmUgc3R1ZHkg
b2Ygc2luZ2xlIHJlZmVyZW5jZSBjb3JyZWxhdGlvbiBtZXRob2RzIG9mIHRoZSBjb3VwbGVkLXBh
aXIgdHlwZX19LApqb3VybmFsID0ge0NoZW1pY2FsIFBoeXNpY3N9LAp5ZWFyID0gezIwMDh9LAp2
b2x1bWUgPSB7MzQzfSwKbnVtYmVyID0gezItM30sCnBhZ2VzID0gezIxNy0tMjMwfSwKbW9udGgg
PSBqYW4KfQoKQGFydGljbGV7TmVlc2U6MjAwOWR0LAphdXRob3IgPSB7TmVlc2UsIEZyYW5rIGFu
ZCBIYW5zZW4sIEFuZHJlYXMgYW5kIFdlbm5tb2hzLCBGcmFuayBhbmQgR3JpbW1lLCBTdGVmYW59
LAp0aXRsZSA9IHt7QWNjdXJhdGUgVGhlb3JldGljYWwgQ2hlbWlzdHJ5IHdpdGggQ291cGxlZCBQ
YWlyIE1vZGVsc319LApqb3VybmFsID0ge0FjY291bnRzIG9mIENoZW1pY2FsIFJlc2VhcmNofSwK
eWVhciA9IHsyMDA5fSwKdm9sdW1lID0gezQyfSwKbnVtYmVyID0gezV9LApwYWdlcyA9IHs2NDEt
LTY0OH0sCm1vbnRoID0gbWF5Cn0KCkBib29re3J5Y2hsZXdza2kyMDAzZXhwbGljaXRseSwKICB0
aXRsZT17RXhwbGljaXRseSBjb3JyZWxhdGVkIHdhdmUgZnVuY3Rpb25zIGluIGNoZW1pc3RyeSBh
bmQgcGh5c2ljczogVGhlb3J5IGFuZCBhcHBsaWNhdGlvbnN9LAogIGF1dGhvcj17UnljaGxld3Nr
aSwgSmFjZWt9LAogIHZvbHVtZT17MTN9LAogIHllYXI9ezIwMDN9LAogIHB1Ymxpc2hlcj17U3By
aW5nZXJ9Cn0KCkBhcnRpY2xle0hhc2VyOjE5OTJ0dCwKYXV0aG9yID0ge0h7XCJhfXNlciwgTWFy
Y28gYW5kIEFsbWx7XCJvfWYsIEphbn0sCnRpdGxlID0ge3tMYXBsYWNlIHRyYW5zZm9ybSB0ZWNo
bmlxdWVzIGluIE17XG99bGxlci0tUGxlc3NldCBwZXJ0dXJiYXRpb24gdGhlb3J5fX0sCmpvdXJu
YWwgPSB7VGhlIEpvdXJuYWwgb2YgQ2hlbWljYWwgUGh5c2ljc30sCnllYXIgPSB7MTk5Mn0sCnZv
bHVtZSA9IHs5Nn0sCm51bWJlciA9IHsxfSwKcGFnZXMgPSB7NDg5LS00OTR9LAptb250aCA9IGph
bgp9CgpAYXJ0aWNsZXtDaXplazoyMDA0Y3ksCmF1dGhvciA9IHt7XHYgQ317XCdcaX17XHYgen1l
aywgSml7XHYgcn17XCdcaX19LAp0aXRsZSA9IHt7T24gdGhlIENvcnJlbGF0aW9uIFByb2JsZW0g
aW4gQXRvbWljIGFuZCBNb2xlY3VsYXIgU3lzdGVtcy4gQ2FsY3VsYXRpb24gb2YgV2F2ZWZ1bmN0
aW9uIENvbXBvbmVudHMgaW4gVXJzZWxs4oCQVHlwZSBFeHBhbnNpb24gVXNpbmcgUXVhbnR1beKA
kEZpZWxkIFRoZW9yZXRpY2FsIE1ldGhvZHN9fSwKam91cm5hbCA9IHtUaGUgSm91cm5hbCBvZiBD
aGVtaWNhbCBQaHlzaWNzfSwKeWVhciA9IHsyMDA0fSwKdm9sdW1lID0gezQ1fSwKbnVtYmVyID0g
ezExfSwKcGFnZXMgPSB7NDI1Ni0tNDI2Nn0sCm1vbnRoID0gbWF5Cn0KCkBib29re0NyYXdmb3Jk
OmJ5LAphdXRob3IgPSB7Q3Jhd2ZvcmQsIFQgRGFuaWVsIGFuZCBTY2hhZWZlciwgSGVucnkgRn0s
CnRpdGxlID0ge3tBbiBJbnRyb2R1Y3Rpb24gdG8gQ291cGxlZCBDbHVzdGVyIFRoZW9yeSBmb3Ig
Q29tcHV0YXRpb25hbCBDaGVtaXN0c319LApwdWJsaXNoZXIgPSB7Sm9obiBXaWxleSB7XCZ9IFNv
bnMsIEluYy59LAp5ZWFyID0gezIwMDB9LAp2b2x1bWUgPSB7MTR9LApzZXJpZXMgPSB7UmV2aWV3
cyBpbiBDb21wdXRhdGlvbmFsIENoZW1pc3RyeX0sCmFkZHJlc3MgPSB7SG9ib2tlbiwgTkosIFVT
QX0sCm1vbnRoID0gamFuCn0KCkBib29re1BpbmtCb29rOjIwMDQsCmF1dGhvciA9IHtIZWxnYWtl
ciwgVHJ5Z3ZlIGFuZCBKe1xvfXJnZW5zZW4sIFBvdWwgYW5kIE9sc2VuLCBKZXBwZX0sCnRpdGxl
ID0ge3tNb2xlY3VsYXIgRWxlY3Ryb25pYy1TdHJ1Y3R1cmUgVGhlb3J5fX0sCnB1Ymxpc2hlciA9
IHtKb2huIFdpbGV5IHtcJn0gU29ucywgSW5jLn0sCnllYXIgPSB7MjAwNH0sCn0KCkBhcnRpY2xl
e0F5YWxhOjE5OTlmaywKYXV0aG9yID0ge0F5YWxhLCBQaGlsaXBwZSBZIGFuZCBTY3VzZXJpYSwg
R3VzdGF2byBFfSwKdGl0bGUgPSB7e0xpbmVhciBzY2FsaW5nIHNlY29uZC1vcmRlciBNb2xsZXIt
LVBsZXNzZXQgdGhlb3J5IGluIHRoZSBhdG9taWMgb3JiaXRhbCBiYXNpcyBmb3IgbGFyZ2UgbW9s
ZWN1bGFyIHN5c3RlbXN9fSwKam91cm5hbCA9IHtUaGUgSm91cm5hbCBvZiBDaGVtaWNhbCBQaHlz
aWNzfSwKeWVhciA9IHsxOTk5fSwKdm9sdW1lID0gezExMH0sCm51bWJlciA9IHs4fSwKcGFnZXMg
PSB7MzY2MC0tMzY3MX0sCm1vbnRoID0gZmViCn0KCkBhcnRpY2xle1NjdXNlcmlhOjE5OTlicCwK
YXV0aG9yID0ge1NjdXNlcmlhLCBHdXN0YXZvIEUgYW5kIEF5YWxhLCBQaGlsaXBwZSBZfSwKdGl0
bGUgPSB7e0xpbmVhciBzY2FsaW5nIGNvdXBsZWQgY2x1c3RlciBhbmQgcGVydHVyYmF0aW9uIHRo
ZW9yaWVzIGluIHRoZSBhdG9taWMgb3JiaXRhbCBiYXNpc319LApqb3VybmFsID0ge1RoZSBKb3Vy
bmFsIG9mIENoZW1pY2FsIFBoeXNpY3N9LAp5ZWFyID0gezE5OTl9LAp2b2x1bWUgPSB7MTExfSwK
bnVtYmVyID0gezE4fSwKcGFnZXMgPSB7ODMzMC0tODM0M30sCm1vbnRoID0gbm92Cn0KCkBhcnRp
Y2xle3poYW8yMDA2Y29tcGFyYXRpdmUsCiAgdGl0bGU9e0NvbXBhcmF0aXZlIERGVCBzdHVkeSBv
ZiB2YW4gZGVyIFdhYWxzIGNvbXBsZXhlczogcmFyZS1nYXMgZGltZXJzLCBhbGthbGluZS1lYXJ0
aCBkaW1lcnMsIHppbmMgZGltZXIsIGFuZCB6aW5jLXJhcmUtZ2FzIGRpbWVyc30sCiAgYXV0aG9y
PXtaaGFvLCBZYW4gYW5kIFRydWhsYXIsIERvbmFsZCBHfSwKICBqb3VybmFsPXtUaGUgSm91cm5h
bCBvZiBQaHlzaWNhbCBDaGVtaXN0cnkgQX0sCiAgdm9sdW1lPXsxMTB9LAogIG51bWJlcj17MTV9
LAogIHBhZ2VzPXs1MTIxLS01MTI5fSwKICB5ZWFyPXsyMDA2fSwKICBwdWJsaXNoZXI9e0FDUyBQ
dWJsaWNhdGlvbnN9Cn0KCkBhcnRpY2xle0NvbnN0YW5zOjIwMDB0dywKYXV0aG9yID0ge0NvbnN0
YW5zLCBQZXJlIGFuZCBBeWFsYSwgUGhpbGlwcGUgWSBhbmQgU2N1c2VyaWEsIEd1c3Rhdm8gRX0s
CnRpdGxlID0ge3tTY2FsaW5nIHJlZHVjdGlvbiBvZiB0aGUgcGVydHVyYmF0aXZlIHRyaXBsZXMg
Y29ycmVjdGlvbiAoVCkgdG8gY291cGxlZCBjbHVzdGVyIHRoZW9yeSB2aWEgTGFwbGFjZSB0cmFu
c2Zvcm0gZm9ybWFsaXNtfX0sCmpvdXJuYWwgPSB7VGhlIEpvdXJuYWwgb2YgQ2hlbWljYWwgUGh5
c2ljc30sCnllYXIgPSB7MjAwMH0sCnZvbHVtZSA9IHsxMTN9LApudW1iZXIgPSB7MjN9LApwYWdl
cyA9IHsxMDQ1MS0tMTA0NTh9LAptb250aCA9IGRlYwp9CgpAYXJ0aWNsZXtXZXJuZXI6MjAxMXVl
LAogIHRpdGxlPXtBbiBlZmZpY2llbnQgbG9jYWwgY291cGxlZCBjbHVzdGVyIG1ldGhvZCBmb3Ig
YWNjdXJhdGUgdGhlcm1vY2hlbWlzdHJ5IG9mIGxhcmdlIHN5c3RlbXN9LAogIGF1dGhvcj17V2Vy
bmVyLCBIYW5zLUpvYWNoaW0gYW5kIFNjaHtcInV9dHosIE1hcnRpbn0sCiAgam91cm5hbD17VGhl
IEpvdXJuYWwgb2YgY2hlbWljYWwgcGh5c2ljc30sCiAgdm9sdW1lPXsxMzV9LAogIHBhZ2VzPXsx
NDQxMTZ9LAogIHllYXI9ezIwMTF9Cn0KCkBhcnRpY2xle0tvbmc6MjAxMXRrLAogIHRpdGxlPXtF
eHBsaWNpdGx5IGNvcnJlbGF0ZWQgUjEyL0YxMiBtZXRob2RzIGZvciBlbGVjdHJvbmljIHN0cnVj
dHVyZX0sCiAgYXV0aG9yPXtLb25nLCBMaWd1byBhbmQgQmlzY2hvZmYsIEZsb3JpYW4gQSBhbmQg
VmFsZWV2LCBFZHdhcmQgRn0sCiAgam91cm5hbD17Q2hlbWljYWwgUmV2aWV3c30sCiAgdm9sdW1l
PXsxMTJ9LAogIG51bWJlcj17MX0sCiAgcGFnZXM9ezc1LS0xMDd9LAogIHllYXI9ezIwMTF9LAog
IHB1Ymxpc2hlcj17QUNTIFB1YmxpY2F0aW9uc30KfQoKQGFydGljbGV7R3JpbW1lOjIwMDNoaSwK
YXV0aG9yID0ge0dyaW1tZSwgU3RlZmFuIGFuZCBQYXJhYywgTWFqYX0sCnRpdGxlID0ge3tTdWJz
dGFudGlhbCBFcnJvcnMgZnJvbSBUaW1l4oCQRGVwZW5kZW50IERlbnNpdHkgRnVuY3Rpb25hbCBU
aGVvcnkgZm9yIHRoZSBDYWxjdWxhdGlvbiBvZiBFeGNpdGVkIFN0YXRlcyBvZiBMYXJnZSDPgCBT
eXN0ZW1zfX0sCmpvdXJuYWwgPSB7Q2hlbVBoeXNDaGVtfSwKeWVhciA9IHsyMDAzfSwKbnVtYmVy
ID0gezN9LApwYWdlcyA9IHsyOTItLTI5NX0sCm1vbnRoID0gbWFyCn0KCkBpbmNvbGxlY3Rpb257
U2hhdml0dDoxOTc3Y3MsCiAgdGl0bGU9e1RoZSBtZXRob2Qgb2YgY29uZmlndXJhdGlvbiBpbnRl
cmFjdGlvbn0sCiAgYXV0aG9yPXtTaGF2aXR0LCBJc2FpYWh9LAogIGJvb2t0aXRsZT17TWV0aG9k
cyBvZiBlbGVjdHJvbmljIHN0cnVjdHVyZSB0aGVvcnl9LAogIHBhZ2VzPXsxODktLTI3NX0sCiAg
eWVhcj17MTk3N30sCiAgcHVibGlzaGVyPXtTcHJpbmdlcn0KfQoKQGFydGljbGV7WWFuZzoyMDEy
dmssCiAgdGl0bGU9e1RoZSBvcmJpdGFsLXNwZWNpZmljLXZpcnR1YWwgbG9jYWwgY291cGxlZCBj
bHVzdGVyIHNpbmdsZXMgYW5kIGRvdWJsZXMgbWV0aG9kfSwKICBhdXRob3I9e1lhbmcsIEp1biBh
bmQgQ2hhbiwgR2FybmV0IEtpbi1MaWMgYW5kIE1hbmJ5LCBGcmVkZXJpY2sgUiBhbmQgU2Noe1wi
dX10eiwgTWFydGluIGFuZCBXZXJuZXIsIEhhbnMtSm9hY2hpbX0sCiAgam91cm5hbD17VGhlIEpv
dXJuYWwgb2YgQ2hlbWljYWwgUGh5c2ljc30sCiAgdm9sdW1lPXsxMzZ9LAogIHBhZ2VzPXsxNDQx
MDV9LAogIHllYXI9ezIwMTJ9Cn0KCkBhcnRpY2xle0thdG86MTk1N3drLAphdXRob3IgPSB7S2F0
bywgVG9zaW99LAp0aXRsZSA9IHt7T24gdGhlIGVpZ2VuZnVuY3Rpb25zIG9mIG1hbnnigJBwYXJ0
aWNsZSBzeXN0ZW1zIGluIHF1YW50dW0gbWVjaGFuaWNzfX0sCmpvdXJuYWwgPSB7Q29tbXVuaWNh
dGlvbnMgb24gUHVyZSBhbmQgQXBwbGllZCBNYXRoZW1hdGljc30sCnllYXIgPSB7MTk1N30sCnZv
bHVtZSA9IHsxMH0sCm51bWJlciA9IHsyfSwKcGFnZXMgPSB7MTUxLS0xNzd9Cn0KCkBhcnRpY2xl
e0pvaG5zb246MTk5MnV0LAphdXRob3IgPSB7R2lsbCwgUGV0ZXIgTSBXIGFuZCBKb2huc29uLCBC
ZW5ueSBHIGFuZCBQb3BsZSwgSm9obiBBIGFuZCBUYXlsb3IsIFN0ZXBoZW4gV30sCnRpdGxlID0g
e3tNb2RlbGluZyB0aGUgcG90ZW50aWFsIG9mIGEgY2hhcmdlIGRpc3RyaWJ1dGlvbn19LApqb3Vy
bmFsID0ge1RoZSBKb3VybmFsIG9mIENoZW1pY2FsIFBoeXNpY3N9LAp5ZWFyID0gezE5OTJ9LAp2
b2x1bWUgPSB7OTZ9LApudW1iZXIgPSB7OX0sCnBhZ2VzID0gezcxNzgtLTcxNzl9LAptb250aCA9
IG1heQp9CgpAYXJ0aWNsZXtCb3lzOjE5NjB0diwKICB0aXRsZT17Q29uc3RydWN0aW9uIG9mIHNv
bWUgbW9sZWN1bGFyIG9yYml0YWxzIHRvIGJlIGFwcHJveGltYXRlbHkgaW52YXJpYW50IGZvciBj
aGFuZ2VzIGZyb20gb25lIG1vbGVjdWxlIHRvIGFub3RoZXJ9LAogIGF1dGhvcj17Qm95cywgU0Z9
LAogIGpvdXJuYWw9e1Jldmlld3Mgb2YgTW9kZXJuIFBoeXNpY3N9LAogIHZvbHVtZT17MzJ9LAog
IG51bWJlcj17Mn0sCiAgcGFnZXM9ezI5Nn0sCiAgeWVhcj17MTk2MH0sCiAgcHVibGlzaGVyPXtB
UFN9Cn0KCkBhcnRpY2xle1ZhbGVldjoyMDA0dm8sCmF1dGhvciA9IHtWYWxlZXYsIEUgRn0sCnRp
dGxlID0ge3tJbXByb3Zpbmcgb24gdGhlIHJlc29sdXRpb24gb2YgdGhlIGlkZW50aXR5IGluIGxp
bmVhciBSMTIgYWIgaW5pdGlvIHRoZW9yaWVzfX0sCmpvdXJuYWwgPSB7Q2hlbWljYWwgcGh5c2lj
cyBsZXR0ZXJzfSwKeWVhciA9IHsyMDA0fSwKdm9sdW1lID0gezM5NX0sCm51bWJlciA9IHs0LTZ9
LApwYWdlcyA9IHsxOTAtLTE5NX0KfQoKQGFydGljbGV7WWFuZzoyMDExdmcsCiAgdGl0bGU9e1Rl
bnNvciBmYWN0b3JpemF0aW9ucyBvZiBsb2NhbCBzZWNvbmQtb3JkZXIgTXtcb31sbGVyLS1QbGVz
c2V0IHRoZW9yeX0sCiAgYXV0aG9yPXtZYW5nLCBKdW4gYW5kIEt1cmFzaGlnZSwgWXVraSBhbmQg
TWFuYnksIEZyZWRlcmljayBSIGFuZCBDaGFuLCBHYXJuZXQgS0x9LAogIGpvdXJuYWw9e1RoZSBK
b3VybmFsIG9mIGNoZW1pY2FsIHBoeXNpY3N9LAogIHZvbHVtZT17MTM0fSwKICBwYWdlcz17MDQ0
MTIzfSwKICB5ZWFyPXsyMDExfQp9CgpAYXJ0aWNsZXtGb3N0ZXI6MTk2MHRhLAogIHRpdGxlPXtD
YW5vbmljYWwgY29uZmlndXJhdGlvbmFsIGludGVyYWN0aW9uIHByb2NlZHVyZX0sCiAgYXV0aG9y
PXtGb3N0ZXIsIEpNIGFuZCBCb3lzLCBTRml9LAogIGpvdXJuYWw9e1Jldmlld3Mgb2YgTW9kZXJu
IFBoeXNpY3N9LAogIHZvbHVtZT17MzJ9LAogIG51bWJlcj17Mn0sCiAgcGFnZXM9ezMwMH0sCiAg
eWVhcj17MTk2MH0sCiAgcHVibGlzaGVyPXtBUFN9Cn0KCkBhcnRpY2xle1dlbm5tb2hzOjIwMDhq
bGEsCmF1dGhvciA9IHtXZW5ubW9ocywgRnJhbmsgYW5kIE5lZXNlLCBGcmFua30sCnRpdGxlID0g
e3tBIGNvbXBhcmF0aXZlIHN0dWR5IG9mIHNpbmdsZSByZWZlcmVuY2UgY29ycmVsYXRpb24gbWV0
aG9kcyBvZiB0aGUgY291cGxlZC1wYWlyIHR5cGV9fSwKam91cm5hbCA9IHtDaGVtaWNhbCBQaHlz
aWNzfSwKeWVhciA9IHsyMDA4fSwKdm9sdW1lID0gezM0M30sCm51bWJlciA9IHsyLTN9LApwYWdl
cyA9IHsyMTctLTIzMH0sCm1vbnRoID0gamFuCn0KCkBhcnRpY2xle1B1bGF5OjE5ODN0ZCwKYXV0
aG9yID0ge1B1bGF5LCBQfSwKdGl0bGUgPSB7e0xvY2FsaXphYmlsaXR5IG9mIGR5bmFtaWMgZWxl
Y3Ryb24gY29ycmVsYXRpb259fSwKam91cm5hbCA9IHtDaGVtaWNhbCBwaHlzaWNzIGxldHRlcnN9
LAp5ZWFyID0gezE5ODN9LAp2b2x1bWUgPSB7MTAwfSwKbnVtYmVyID0gezJ9LApwYWdlcyA9IHsx
NTEtLTE1NH0KfQoKQGFydGljbGV7SmFjcXVlbWluOjIwMDl0ciwKICB0aXRsZT17RXh0ZW5zaXZl
IFRELURGVCBiZW5jaG1hcms6IHNpbmdsZXQtZXhjaXRlZCBzdGF0ZXMgb2Ygb3JnYW5pYyBtb2xl
Y3VsZXN9LAogIGF1dGhvcj17SmFjcXVlbWluLCBEZW5pcyBhbmQgV2F0aGVsZXQsIFZhbHtcJ2V9
cmllIGFuZCBQZXJwZXRlLCBFcmljIEEgYW5kIEFkYW1vLCBDYXJsb30sCiAgam91cm5hbD17Sm91
cm5hbCBvZiBDaGVtaWNhbCBUaGVvcnkgYW5kIENvbXB1dGF0aW9ufSwKICB2b2x1bWU9ezV9LAog
IG51bWJlcj17OX0sCiAgcGFnZXM9ezI0MjAtLTI0MzV9LAogIHllYXI9ezIwMDl9LAogIHB1Ymxp
c2hlcj17QUNTIFB1YmxpY2F0aW9uc30KfQoKQGFydGljbGV7S3VyYXNoaWdlOjIwMTJ2eSwKICB0
aXRsZT17T3B0aW1pemF0aW9uIG9mIG9yYml0YWwtc3BlY2lmaWMgdmlydHVhbHMgaW4gbG9jYWwg
TXtcb31sbGVyLVBsZXNzZXQgcGVydHVyYmF0aW9uIHRoZW9yeX0sCiAgYXV0aG9yPXtLdXJhc2hp
Z2UsIFl1a2kgYW5kIFlhbmcsIEp1biBhbmQgQ2hhbiwgR2FybmV0IEstTCBhbmQgTWFuYnksIEZy
ZWRlcmljayBSfSwKICBqb3VybmFsPXtUaGUgSm91cm5hbCBvZiBDaGVtaWNhbCBQaHlzaWNzfSwK
ICB2b2x1bWU9ezEzNn0sCiAgcGFnZXM9ezEyNDEwNn0sCiAgeWVhcj17MjAxMn0KfQoKQGFydGlj
bGV7Tm9nYToxOTkydngsCiAgdGl0bGU9e0NDLVIxMiwgYSBjb3JyZWxhdGlvbiBjdXNwIGNvcnJl
Y3RlZCBjb3VwbGVkLWNsdXN0ZXIgbWV0aG9kIHdpdGggYSBwaWxvdCBhcHBsaWNhdGlvbiB0byB0
aGUgQmU8IHN1Yj4gMjwvc3ViPiBwb3RlbnRpYWwgY3VydmV9LAogIGF1dGhvcj17Tm9nYSwgSm9z
ZWYgYW5kIEt1dHplbG5pZ2csIFdlcm5lciBhbmQgS2xvcHBlciwgV2ltfSwKICBqb3VybmFsPXtD
aGVtaWNhbCBwaHlzaWNzIGxldHRlcnN9LAogIHZvbHVtZT17MTk5fSwKICBudW1iZXI9ezV9LAog
IHBhZ2VzPXs0OTctLTUwNH0sCiAgeWVhcj17MTk5Mn0sCiAgcHVibGlzaGVyPXtFbHNldmllcn0K
fQoKQGFydGljbGV7VGV3OjIwMTF0eiwKICB0aXRsZT17TG9jYWwgZXhwbGljaXRseSBjb3JyZWxh
dGVkIHNlY29uZC1vcmRlciBNe1xvfWxsZXItLVBsZXNzZXQgcGVydHVyYmF0aW9uIHRoZW9yeSB3
aXRoIHBhaXIgbmF0dXJhbCBvcmJpdGFsc30sCiAgYXV0aG9yPXtUZXcsIERhdmlkIFAgYW5kIEhl
bG1pY2gsIEJlbmphbWluIGFuZCBIe1wiYX10dGlnLCBDaHJpc3RvZn0sCiAgam91cm5hbD17VGhl
IEpvdXJuYWwgb2YgY2hlbWljYWwgcGh5c2ljc30sCiAgdm9sdW1lPXsxMzV9LAogIHBhZ2VzPXsw
NzQxMDd9LAogIHllYXI9ezIwMTF9Cn0KCkBhcnRpY2xle0VkbWlzdG9uOjE5NjN3bCwKICB0aXRs
ZT17TG9jYWxpemVkIGF0b21pYyBhbmQgbW9sZWN1bGFyIG9yYml0YWxzfSwKICBhdXRob3I9e0Vk
bWlzdG9uLCBDbHlkZSBhbmQgUnVlZGVuYmVyZywgS2xhdXN9LAogIGpvdXJuYWw9e1Jldmlld3Mg
b2YgTW9kZXJuIFBoeXNpY3N9LAogIHZvbHVtZT17MzV9LAogIG51bWJlcj17M30sCiAgcGFnZXM9
ezQ1N30sCiAgeWVhcj17MTk2M30sCiAgcHVibGlzaGVyPXtBUFN9Cn0KCkBhcnRpY2xle01leWVy
OjE5NzF3ZCwKYXV0aG9yID0ge01leWVyLCBXaWxmcmllZH0sCnRpdGxlID0ge3tJb25pemF0aW9u
IGVuZXJnaWVzIG9mIHdhdGVyIGZyb20gUE5P4oCQQ0kgY2FsY3VsYXRpb25zfX0sCmpvdXJuYWwg
PSB7SW50ZXJuYXRpb25hbCBKb3VybmFsIG9mIFF1YW50dW0gQ2hlbWlzdHJ5fSwKeWVhciA9IHsx
OTcxfSwKdm9sdW1lID0gezV9LApudW1iZXIgPSB7UzV9LApwYWdlcyA9IHszNDEtLTM0OH0KfQoK
QGFydGljbGV7TmVlc2U6MjAwOXV0LAphdXRob3IgPSB7TmVlc2UsIEZ9LAp0aXRsZSA9IHt7T3Jj
YX19LApqb3VybmFsID0ge0FuIGFiIEluaXRpb30sCnllYXIgPSB7MjAwOX0KfQoKQGFydGljbGV7
VHJ1Y2tzOjE5ODl2eCwKICB0aXRsZT17QSBmaWZ0aC1vcmRlciBwZXJ0dXJiYXRpb24gY29tcGFy
aXNvbiBvZiBlbGVjdHJvbiBjb3JyZWxhdGlvbiB0aGVvcmllc30sCiAgYXV0aG9yPXtSYWdoYXZh
Y2hhcmksIEtyaXNobmFuIGFuZCBUcnVja3MsIEdhcnkgVyBhbmQgUG9wbGUsIEpvaG4gQSBhbmQg
SGVhZC1Hb3Jkb24sIE1hcnRpbn0sCiAgam91cm5hbD17Q2hlbWljYWwgUGh5c2ljcyBMZXR0ZXJz
fSwKICB2b2x1bWU9ezE1N30sCiAgbnVtYmVyPXs2fSwKICBwYWdlcz17NDc5LS00ODN9LAogIHll
YXI9ezE5ODl9LAogIHB1Ymxpc2hlcj17RWxzZXZpZXJ9Cn0KCkBhcnRpY2xle1BpcGVrOjE5ODl3
dCwKYXV0aG9yID0ge1BpcGVrLCBKe1wnYX1ub3MgYW5kIE1lemV5LCBQYXVsIEd9LAp0aXRsZSA9
IHt7QSBmYXN0IGludHJpbnNpYyBsb2NhbGl6YXRpb24gcHJvY2VkdXJlIGFwcGxpY2FibGUgZm9y
IGFiIGluaXRpbyBhbmQgc2VtaWVtcGlyaWNhbCBsaW5lYXIgY29tYmluYXRpb24gb2YgYXRvbWlj
IG9yYml0YWwgd2F2ZSBmdW5jdGlvbnN9fSwKam91cm5hbCA9IHtUaGUgSm91cm5hbCBvZiBDaGVt
aWNhbCBQaHlzaWNzfSwKeWVhciA9IHsxOTg5fSwKdm9sdW1lID0gezkwfSwKbnVtYmVyID0gezl9
LApwYWdlcyA9IHs0OTE2LS00OTI2fSwKbW9udGggPSBtYXkKfQoKQGFydGljbGV7R3JpbW1lOjIw
MDN2YSwKYXV0aG9yID0ge0dyaW1tZSwgU3RlZmFufSwKdGl0bGUgPSB7e0ltcHJvdmVkIHNlY29u
ZC1vcmRlciBNe1xvfWxsZXItLVBsZXNzZXQgcGVydHVyYmF0aW9uIHRoZW9yeSBieSBzZXBhcmF0
ZSBzY2FsaW5nIG9mIHBhcmFsbGVsLSBhbmQgYW50aXBhcmFsbGVsLXNwaW4gcGFpciBjb3JyZWxh
dGlvbiBlbmVyZ2llc319LApqb3VybmFsID0ge1RoZSBKb3VybmFsIG9mIENoZW1pY2FsIFBoeXNp
Y3N9LAp5ZWFyID0gezIwMDN9LAp2b2x1bWUgPSB7MTE4fSwKbnVtYmVyID0gezIwfSwKcGFnZXMg
PSB7OTA5NS0tOTEwMn0sCm1vbnRoID0gbWF5Cn0KCkBhcnRpY2xle05vZ2E6MTk5NHZpLAphdXRo
b3IgPSB7Tm9nYSwgSm96ZWYgYW5kIEt1dHplbG5pZ2csIFdlcm5lcn0sCnRpdGxlID0ge3tDb3Vw
bGVkIGNsdXN0ZXIgdGhlb3J5IHRoYXQgdGFrZXMgY2FyZSBvZiB0aGUgY29ycmVsYXRpb24gY3Vz
cCBieSBpbmNsdXNpb24gb2YgbGluZWFyIHRlcm1zIGluIHRoZSBpbnRlcmVsZWN0cm9uaWMgY29v
cmRpbmF0ZXN9fSwKam91cm5hbCA9IHtUaGUgSm91cm5hbCBvZiBDaGVtaWNhbCBQaHlzaWNzfSwK
eWVhciA9IHsxOTk0fSwKdm9sdW1lID0gezEwMX0sCm51bWJlciA9IHs5fSwKcGFnZXMgPSB7Nzcz
OC0tNzc2Mn0sCm1vbnRoID0gbm92Cn0KCkBhcnRpY2xle0VkbWlzdG9uOjE5NjV2dCwKICB0aXRs
ZT17TG9jYWxpemVkIGF0b21pYyBhbmQgbW9sZWN1bGFyIG9yYml0YWxzLiBJSX0sCiAgYXV0aG9y
PXtFZG1pc3RvbiwgQ2x5ZGUgYW5kIFJ1ZWRlbmJlcmcsIEtsYXVzfSwKICBqb3VybmFsPXtUaGUg
Sm91cm5hbCBvZiBDaGVtaWNhbCBQaHlzaWNzfSwKICB2b2x1bWU9ezQzfSwKICBwYWdlcz17Uzk3
fSwKICB5ZWFyPXsxOTY1fQp9CgpAYXJ0aWNsZXtMb3dkaW46MTk1OWhvLAogIHRpdGxlPXtDb3Jy
ZWxhdGlvbiBQcm9ibGVtIGluIE1hbnktRWxlY3Ryb24gUXVhbnR1bSBNZWNoYW5pY3MgSS4gUmV2
aWV3IG9mIERpZmZlcmVudCBBcHByb2FjaGVzIGFuZCBEaXNjdXNzaW9uIG9mIFNvbWUgQ3VycmVu
dCBJZGVhc30sCiAgYXV0aG9yPXtMe1wib313ZGluLCBQZXItT2xvdn0sCiAgam91cm5hbD17QWR2
YW5jZXMgaW4gQ2hlbWljYWwgUGh5c2ljcywgVm9sdW1lIDJ9LAogIHBhZ2VzPXsyMDctLTMyMn0s
CiAgeWVhcj17MTk1OX0sCiAgcHVibGlzaGVyPXtXaWxleSBPbmxpbmUgTGlicmFyeX0KfQoKQGFy
dGljbGV7UmlwbGluZ2VyOjIwMTNqaywKICB0aXRsZT17QW4gZWZmaWNpZW50IGFuZCBuZWFyIGxp
bmVhciBzY2FsaW5nIHBhaXIgbmF0dXJhbCBvcmJpdGFsIGJhc2VkIGxvY2FsIGNvdXBsZWQgY2x1
c3RlciBtZXRob2R9LAogIGF1dGhvcj17UmlwbGluZ2VyLCBDaHJpc3RvcGggYW5kIE5lZXNlLCBG
cmFua30sCiAgam91cm5hbD17VGhlIEpvdXJuYWwgb2YgY2hlbWljYWwgcGh5c2ljc30sCiAgdm9s
dW1lPXsxMzh9LAogIHBhZ2VzPXswMzQxMDZ9LAogIHllYXI9ezIwMTN9Cn0KCkBib29re1N6YWJv
OjE5ODl3dywKICB0aXRsZT17TW9kZXJuIHF1YW50dW0gY2hlbWlzdHJ5OiBpbnRyb2R1Y3Rpb24g
dG8gYWR2YW5jZWQgZWxlY3Ryb25pYyBzdHJ1Y3R1cmUgdGhlb3J5fSwKICBhdXRob3I9e1N6YWJv
LCBBdHRpbGEgYW5kIE9zdGx1bmQsIE5laWwgU30sCiAgeWVhcj17MTk4OX0sCiAgcHVibGlzaGVy
PXtEb3ZlclB1YmxpY2F0aW9ucy4gY29tfQp9CgpAYXJ0aWNsZXtBbnRvbnk6MjAwNmppLAogIHRp
dGxlPXtEZW5zaXR5IGZ1bmN0aW9uYWwgdGhlb3J5IGluY2x1ZGluZyBkaXNwZXJzaW9uIGNvcnJl
Y3Rpb25zIGZvciBpbnRlcm1vbGVjdWxhciBpbnRlcmFjdGlvbnMgaW4gYSBsYXJnZSBiZW5jaG1h
cmsgc2V0IG9mIGJpb2xvZ2ljYWxseSByZWxldmFudCBtb2xlY3VsZXN9LAogIGF1dGhvcj17QW50
b255LCBKZW5zIGFuZCBHcmltbWUsIFN0ZWZhbn0sCiAgam91cm5hbD17UGh5c2ljYWwgQ2hlbWlz
dHJ5IENoZW1pY2FsIFBoeXNpY3N9LAogIHZvbHVtZT17OH0sCiAgbnVtYmVyPXs0NX0sCiAgcGFn
ZXM9ezUyODctLTUyOTN9LAogIHllYXI9ezIwMDZ9LAogIHB1Ymxpc2hlcj17Um95YWwgU29jaWV0
eSBvZiBDaGVtaXN0cnl9Cn0KCkBhcnRpY2xle3J1c3MyMDA0bG9jYWwsCnRpdGxlPXtMb2NhbCBj
b3JyZWxhdGlvbiBpbiBjb3VwbGVkIGNsdXN0ZXIgY2FsY3VsYXRpb25zIG9mIG1vbGVjdWxhciBy
ZXNwb25zZSBwcm9wZXJ0aWVzfSwKICBhdXRob3I9e1J1c3MsIE5pY2hvbGFzIEogYW5kIENyYXdm
b3JkLCBUIERhbmllbH0sCiAgam91cm5hbD17Q2hlbWljYWwgcGh5c2ljcyBsZXR0ZXJzfSwKICB2
b2x1bWU9ezQwMH0sCiAgbnVtYmVyPXsxfSwKICBwYWdlcz17MTA0LS0xMTF9LAogIHllYXI9ezIw
MDR9LAogIHB1Ymxpc2hlcj17RWxzZXZpZXJ9Cn0KCkBhcnRpY2xle2Jvcm4xOTI3cXVhbnRlbnRo
ZW9yaWUsCiAgdGl0bGU9e1p1ciBxdWFudGVudGhlb3JpZSBkZXIgbW9sZWtlbG59LAogIGF1dGhv
cj17Qm9ybiwgTWF4IGFuZCBPcHBlbmhlaW1lciwgUm9iZXJ0IGFuZCBUcmFuc2xhdGlvbiBieSBC
bGluZGVyLCBTLiBNLn0sCiAgam91cm5hbD17QW5uYWxlbiBkZXIgUGh5c2lrfSwKICB2b2x1bWU9
ezM4OX0sCiAgbnVtYmVyPXsyMH0sCiAgcGFnZXM9ezQ1Ny0tNDg0fSwKICB5ZWFyPXsxOTI3fSwK
ICBwdWJsaXNoZXI9e1dpbGV5IE9ubGluZSBMaWJyYXJ5fQp9CgpAYXJ0aWNsZXtzY2hybzEsCiAg
dGl0bGU9e1F1YW50aXNhdGlvbiBhcyBhIFByb2JsZW0gb2YgUHJvcGVyIFZhbHVlc30sCiAgYXV0
aG9yPXt7U2NocntcIntvfX1kaW5nZXIsIEV9fSwKICBqb3VybmFsPXtBbm4uIGQuIFBoeS59LAog
IHZvbHVtZT17Nzl9LAogIG51bWJlcj17NH0sCiAgcGFnZXM9ezM2MS0tMzc2OyBJbiBcZW1waHtD
b2xsZWN0ZWQgUGFwZXJzIG9uIFdhdmUgTWVjaGFuaWNzfX0sCiAgeWVhcj17MTkyNn0sCn0KCkBh
cnRpY2xle1ZhbGVldjoyMDEzLAogIGF1dGhvcj17e1ZhbGVldiwgRSBGfX0sCiAgam91cm5hbD17
VW5wdWJsaXNoZWQgbGVjdHVyZSBub3RlcyBpbiBlbGVjdHJvbmljIHN0cnVjdHVyZSB0aGVvcnl9
LAogIHllYXI9ezIwMTN9LAp9CgpAYm9va3tzY2hybzUsCiAgdGl0bGU9e3tDb2xsZWN0ZWQgUGFw
ZXJzIG9uIFdhdmUgTWVjaGFuaWNzfX0sCiAgYXV0aG9yPXt7U2NocntcIntvfX1kaW5nZXIsIEV9
fSwKICB5ZWFyPXt7MTk3OH19LAogIHB1Ymxpc2hlcj17e0NoZXNsc2VhIFB1Ymxpc2hpbmcgQ29t
cGFueX19LAogIGFkZHJlc3M9e3tOZXcgWW9yaywgTi5ZLn19LAogIGVkaXRpb249e3tUcmFuc2xh
dGVkIGZyb20gdGhlIHNlY29uZCBHZXJtYW4gZWRpdGlvbn19Cn0KCkBtaXNje01QUUMsCiAgICBh
dXRob3I9e0N1cnRpcyBMLiBKYW5zc2VuIGFuZCBJZGEgQi4gTmllbHNlbiBhbmQgTWF0dCBMLiBM
ZWluaW5nZXIgYW5kIEVkd2FyZAoJCUYuIFZhbGVldiBhbmQgSm9zZXBoIFAuIEtlbm55IGFuZCBF
ZHdhcmQgVC4gU2VpZGx9LAoJdGl0bGU9e3tUaGUgTWFzc2l2ZWx5IFBhcmFsbGVsIFF1YW50dW0g
Q2hlbWlzdHJ5IFByb2dyYW0gKE1QUUMpIFZlcnNpb24gMi40LjB9fSwKICAgIG5vdGU9e3todHRw
Oi8vd3d3Lm1wcWMub3JnfX0KfQoKQG1pc2N7SnVzdHVzMTMsCiAgYXV0aG9yID0ge0NhbHZpbiwg
SiBhbmQgVmFsZWV2LCBFfSwKICB0aXRsZSA9IHt7XGVtcGh7VGlsZWRBcnJheSBCbG9jay1TcGFy
c2UgVGVuc29yIExpYnJhcnl9fX0sCiAgbm90ZT17e1RlbnNvciBsaWJyYXJ5IGJlaW5nIGRldmVs
b3BlZCBpbiB0aGUgVmFsZWV2IGdyb3VwfX0KfQ==
--089e014942a01361b905049f0ead
Content-Type: application/x-tex; name="template.tex"
Content-Disposition: attachment; filename="template.tex"
Content-Transfer-Encoding: base64
X-Attachment-Id: f_i0vfv6iy2

XGRvY3VtZW50Y2xhc3Nbam91cm5hbD1qYWNzYXRde2FjaGVtc299CgolJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJQolIEluY2x1ZGVzIHZhcmlvdXMgcGFja2FnZXMgZm9yIGV4dHJhIGZ1bmN0aW9uYWxp
dHkKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJVx1c2VwYWNrYWdle21vZGlhZ3JhbX0JJSBNb2xl
Y3VsYXIgb3JiaXRhbCBkaWFncmFtcwoKXHVzZXBhY2thZ2V7bWF0aHRvb2xzfQkJJSBNYWtlIHBy
ZXR0eSBmb3JtdWxhcwpcdXNlcGFja2FnZXtmaXhsdHgyZX0JCSUgQWxsb3cgc3Vic2NyaXB0cwpc
dXNlcGFja2FnZXtncmFwaGljeH0JCSUgSW1wcm92ZWQgZ3JhcGhpY3MKXHVzZXBhY2thZ2V7Ym19
IAkJCSUgQm9sZCBtYXRoIHN5bWJvbHMgClx1c2VwYWNrYWdle3R4Zm9udHN9IAkJJSBBbGxvdyB0
aW1lcy1saWtlIGZvbnRzIGluIGVxdWF0aW9ucwpcdXNlcGFja2FnZXttYXRocGF6b30gCQklIFBh
bGF0aW5vIGZvbnRzIGZvciBlcXVhdGlvbnMKXHVzZXBhY2thZ2V7ZGNvbHVtbn0JCSUgQWxpZ24g
dGFidWxhciBjb2x1bW5zIG9uIGRlY2ltYWwgcG9pbnRzClx1c2VwYWNrYWdle2Zvb3RtaXNjfQkJ
JSBGb290IG5vdGUgb3B0aW9ucwpcdXNlcGFja2FnZXttYXRocnNmc30JCSUgUlNGUyBmb250cyBp
biBlcXVhdGlvbnMKXHVzZXBhY2thZ2V7bWhjaGVtfQpcdXNlcGFja2FnZXticmFrZXR9Clx1c2Vw
YWNrYWdle2NvbW1hdGh9Clx1c2VwYWNrYWdlW1QxXXtmb250ZW5jfQpcdXNlcGFja2FnZXtjdXJy
dml0YX0KXG51bWJlcndpdGhpbntlcXVhdGlvbn17c2VjdGlvbn0KJVx1c2VwYWNrYWdlW3BvbGlz
aF17YmFiZWx9CSUgU2VsZWN0IGxhbmd1YWdlIHN0YW5kYXJkCiVcdXNlcGFja2FnZXtuYXRiaWJ9
CQklIFN1cHBvcnQgZm9yIHZhcmlvdXMgbmF0YmliIEJpYlRleCBzdHlsZXMKCgolIFRoaXMgaXMg
Zm9yIHVzZSBvZiBUaW1lcyBOZXcgUm9tYW4KXHVzZXBhY2thZ2VbVDFde2ZvbnRlbmN9Clx1c2Vw
YWNrYWdle3RpbWVzfQoKXG5ld2NvbW1hbmR7XFR9WzRde1ReeyMxICMyfV97IzMgIzR9fQpccmVu
ZXdjb21tYW5ke1xPfVsxXXskXG1hdGhjYWx7T31cbGVmdCggIzEgXHJpZ2h0KSR9CgpccmVuZXdj
b21tYW5ke1x0aGVmb290bm90ZX17XGZuc3ltYm9se2Zvb3Rub3RlfX0KXHJlbmV3Y29tbWFuZHtc
YmFzZWxpbmVzdHJldGNofXsyfSAlIFRoaXMgaXMgZm9yIHRoZSB1c2Ugb2YgZG91YmxlIHNwYWNl
CiVcc2V0a2V5c3thY3N9e2FydGljbGV0aXRsZSA9IHRydWV9ICUgSW5jbHVkZSB0aXRsZSBpbiBi
aWJsaW9ncmFwaHkKCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgU3RhcnQgZG9jdW1lbnQKJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUKCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgVGl0bGUgcGFn
ZQolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQoKXGF1dGhvcntGYWJpamFuIFBhdm9cdntzfWV2aVwn
e2N9fQpcZW1haWx7ZmFiaWphbkB2dC5lZHV9ClxhZmZpbGlhdGlvbltWaXJnaW5pYSBUZWNoXQog
ICAgICAge0RlcGFydG1lbnQgb2YgQ2hlbWlzdHJ5LCBWaXJnaW5pYSBUZWNoLCBCbGFja3NidXJn
LCBWQX0KXHRpdGxle1JlZHVjZWQtU2NhbGluZyBFeHBsaWNpdGx5IENvcnJlbGF0ZWQgRWxlY3Ry
b25pYyBTdHJ1Y3R1cmUgTWV0aG9kc30KXGRhdGV7U2VwdGVtYmVyIDYsIDIwMTN9CgpcU2VjdGlv
bk51bWJlcnNPbgpcYmVnaW57ZG9jdW1lbnR9CgpcbWFrZXRpdGxlCiUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlCiUgUGFwZXIKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKXG5ld3BhZ2UKXHRhYmxlb2Zj
b250ZW50cwpcc2VjdGlvbntJbnRyb2R1Y3Rpb259CkNvbXB1dGF0aW9uYWwgY2hlbWlzdHJ5IGhh
cyBiZWNvbWUgYSByb3V0aW5lIHRvb2wgaW4gZXZlcnlkYXkgY2hlbWlzdHJ5IHJlc2VhcmNoIGFu
ZCBhbiBpbnZhbHVhYmxlIGNvbXBsZW1lbnQgdG8gdGhlIGV4cGVyaW1lbnQuIEl0IGlzIHVzZWQg
dG8gcHJlZGljdCB2YXJpb3VzIGNoZW1pY2FsIHByb3BlcnRpZXMgbGlrZSBtb2xlY3VsYXIgcmVh
Y3Rpdml0eSBvciBzcGVjdHJhLCBhbmQgaXQgY2FuIGdpdmUgaW5zaWdodCBpbnRvIG1vbGVjdWxh
ciBzdHJ1Y3R1cmUuIE1vc3Qgb2YgdGhlIG1vbGVjdWxhciBwcm9wZXJ0aWVzIGNvbWUgZnJvbSBl
bGVjdHJvbmljIHN0cnVjdHVyZSBhbmQgaW50ZXJhY3Rpb24gb2YgZWxlY3Ryb25zIHdpdGggZXh0
ZXJuYWwgZmllbGRzIG9yIGVsZWN0cm9tYWduZXRpYyByYWRpYXRpb24uIFN1Y2ggaW50ZXJhY3Rp
b25zIGFyZSBkZXNjcmliZWQgYnkgdGhlIG1hbnktYm9keSBTY2hyXCJ7b31kaW5nZXIgZXF1YXRp
b24uIEhvd2V2ZXIsIGl0cyBjb21wbGV4aXR5IHByZXZlbnRzIHVzIGZyb20gc29sdmluZyBpdCBl
eGFjdGx5LiBJbnN0ZWFkLCB3ZSBtdXN0IHJlbHkgb24gYXBwcm94aW1hdGlvbnMsIHdoaWNoIGlu
dHJvZHVjZSBlcnJvcnMuIFRoZSBtb3N0IGFjY3VyYXRlIG1ldGhvZHMgYXJlIGNvdXBsZWQgY2x1
c3RlciAoQ0MpIG1ldGhvZHMsIHdoaWNoIGFyZSByb3V0aW5lbHkgdXNlZCBmb3IgZ3JvdW5kIHN0
YXRlIGNhbGN1bGF0aW9ucy4gSG93ZXZlciwgdGhlIGNvbXBsZXhpdHkgb2YgdGhlIENDIG1ldGhv
ZHMgbGltaXRzIHRoZW0gdG8gc21hbGwgbW9sZWN1bGVzIG9mIHVwIHRvIDIwIGF0b21zLiBUaGUg
TXtcb31sbGVyLVBsZXNzZXQgKE1QKSBtZXRob2QgaXMgdGhlIHNpbXBsZXN0IG1ldGhvZCBmb3Ig
dHJlYXRpbmcgdGhlIGVsZWN0cm9uIGNvcnJlbGF0aW9uLCBhbmQgaXQgY2FuIGJlIGFwcGxpZWQg
dG8gYSBtb2xlY3VsZSBvZiBhcm91bmQgMTAwIGF0b21zLiBXaXRoIHRoZSBkZW5zaXR5IGZ1bmN0
aW9uYWwgdGhlb3J5IChERlQpIG1ldGhvZCwgMTAwMCBhdG9tcyBhbmQgbW9yZSBjYW4gYmUgdHJl
YXRlZC4gVGhpcyBpcyB0aGUgbW9zdCBwb3B1bGFyIGFwcHJvYWNoIGFtb25nIG1vZGVsaW5nIGNo
ZW1pc3RzLiBGb3IgdGhlIHN5c3RlbXMgd2l0aCBtb3JlIHRoYW4gMTAwMCBhdG9tcywgd2UgdXNl
IHNlbWktZW1waXJpY2FsIG1ldGhvZHMgb3Igc2ltdWxhdGlvbnMgdGhhdCBhcmUgYmFzZWQgb24g
Y2xhc3NpY2FsIG1lY2hhbmljcy5cY2l0ZXtOZWVzZToyMDA5ZHR9IEFzIG1lbnRpb25lZCBhYm92
ZSwgaGlnaC1hY2N1cmFjeSBwcmVkaWN0aW9ucyBjYW4gYmUgZG9uZSBvbmx5IG9uIG1vbGVjdWxl
cyBvZiB1cCB0byAxMCBhdG9tczsgaG93ZXZlciwgaW50ZXJlc3RpbmcgY2hlbWljYWwgcGhlbm9t
ZW5hIG9jY3VyIG9uIHN5c3RlbXMgbGFyZ2VyIHRoYW4gdGhhdDsgdGhlcmVmb3JlLCB0aGUgbWFp
biB0b29sIGluIGVsZWN0cm9uaWMgc3RydWN0dXJlIGNhbGN1bGF0aW9ucyBpcyBkZW5zaXR5IGZ1
bmN0aW9uYWwgdGhlb3J5IHdoaWNoIGhhcyBhbiBleGNlbGxlbnQgcmF0aW8gYmV0d2VlbiBjb21w
dXRhdGlvbiB0aW1lIGFuZCBwZXJmb3JtYW5jZS4gQ29tcHV0YXRpb25hbCBzY2FsaW5nIG9mIERG
VCBtZXRob2RzIHdpdGggdGhlIHN5c3RlbSBzaXplIGlzIFxPe25eM30sIHdoZXJlICRuJCBpcyBw
cm9wb3J0aW9uYWwgdG8gdGhlIHN5c3RlbSBzaXplLiBIb3dldmVyLCBpdCBmYWlscyBmb3IgY2hl
bWljYWxseSBpbXBvcnRhbnQgcHJvYmxlbXMgbGlrZSBub24tY292YWxlbnQgaW50ZXJhY3Rpb25z
LCBvciBpdCBwb29ybHkgZGVzY3JpYmVzIGVsZWN0cmljIHJlc3BvbnNlIHByb3BlcnRpZXMuXGNp
dGV7emhhbzIwMDZjb21wYXJhdGl2ZSwgQW50b255OjIwMDZqaSwgR3JpbW1lOjIwMDNoaSwgSmFj
cXVlbWluOjIwMDl0cn0gQXMgYW4gZXhhbXBsZSwgREZUIGdpdmVzIHZlcnkgbGFyZ2UgZXJyb3Jz
IGZvciBzZWVtaW5nbHkgc2ltcGxlIGNsb3NlZCBzaGVsbCBzeXN0ZW1zIHN1Y2ggYXMgaHlkcm9j
YXJib25zLlxjaXRle0dyaW1tZToyMDA2ZHl9IFRoZSBtb3JlIHJlbGlhYmxlIGFsdGVybmF0aXZl
cyB0byBERlQgYXJlIHRoZSB3YXZlZnVuY3Rpb24tYmFzZWQgbWV0aG9kcy4gSG93ZXZlciwgdGhv
c2UgbWV0aG9kcyBzdWZmZXIgZnJvbSBwb29yIGNvbXB1dGF0aW9uYWwgc2NhbGluZy4gRm9yIGV4
YW1wbGUsIHRoZSBxdWFudHVtIGNoZW1pc3RyeSAiZ29sZCBzdGFuZGFyZCIsIENDU0QoVCksIGhh
cyBhbiBcT3tuXjd9IGNvbXB1dGF0aW9uYWwgY29zdC4gQXMgYSByZXN1bHQsIHN1Y2ggbWV0aG9k
cyBjYW4gb25seSBiZSBhcHBsaWVkIHRvIHNtYWxsIG1vbGVjdWxhciBzeXN0ZW1zIHVwIHRvIDIw
IGF0b21zLiBBbHNvLCBpbiBvcmRlciB0byBhY2hpZXZlIGhpZ2ggYWNjdXJhY3ksIG9uZSBuZWVk
cyB0byB1c2UgbGFyZ2UgYmFzaXMgc2V0cyBkdWUgdG8gcG9vciBjb21wbGV0ZSBiYXNpcyBzZXQg
Y29udmVyZ2VuY2UuIFRoaXMgaXMgZHVlIHRvIGZhY3QgdGhhdCB3YXZlIGZ1bmN0aW9uIGlzIHJl
cHJlc2VudGVkIHdpdGggU2xhdGVyIGRldGVybWluYW50cy4gVGhlIGV4cGxpY2l0bHkgY29ycmVs
YXRlZCBtZXRob2RzIG9mZmVyIGEgc29sdXRpb24gdG8gdGhpcyBpc3N1ZS4gClRoZSBtYWluIGdv
YWwgb2YgbXkgd29yayB3aWxsIGJlIHRoZSBtYXRoZW1hdGljYWwgZm9ybXVsYXRpb24gYW5kIGlt
cGxlbWVudGF0aW9uIG9mIHRoZSB3YXZlZnVuY3Rpb24tYmFzZWQgbWV0aG9kcyB3aXRoIGV4cGxp
Y2l0IGNvcnJlbGF0aW9uIHdpdGggcmVkdWNlZCBjb21wdXRhdGlvbmFsIGNvbXBsZXhpdHkuIEZv
ciB0aGF0IHB1cnBvc2UsIEkgd2lsbCBjb21iaW5lIHRoZSBjb25jZXB0cyBvZiByZWR1Y2VkIHNj
YWxpbmcgYW5kIGV4cGxpY2l0IGNvcnJlbGF0aW9uLCB3aGljaCB3aWxsIGVuYWJsZSBtZSB0byBw
ZXJmb3JtIGNhbGN1bGF0aW9ucyBhbmQgcHJlZGljdGlvbnMgb2YgY2hlbWljYWwgcHJvcGVydGll
cyBmb3IgbGFyZ2UgbW9sZWN1bGFyIHN5c3RlbXMgd2l0aCBoaWdoIGFjY3VyYWN5LiAKCgpcc2Vj
dGlvbntNYW55LUJvZHkgRWxlY3Ryb25pYyBTdHJ1Y3R1cmUgTWV0aG9kc30KClRoZSBjZW50cmFs
IHByb2JsZW0gaW4gdGhlIGVsZWN0cm9uaWMgc3RydWN0dXJlIG1ldGhvZHMgaXMgdGhlIHRpbWUt
aW5kZXBlbmRlbnQgU2Noclwie299ZGluZ2VyIGVxdWF0aW9uIApcYmVnaW57YWxpZ259XGhhdHtI
fVxwc2kgPSBFIFxwc2kgXGxhYmVse2VxOnNjaGVxbn0gCglcZW5ke2FsaWdufQp3aGVyZSAkXGhh
dHtIfSQgaXMgdGhlIEhhbWlsdG9uaWFuIG9wZXJhdG9yLlxjaXRle3NjaHJvMSxzY2hybzUsU3ph
Ym86MTk4OXd3fSBJdCBkZXNjcmliZXMgdGhlIG1vdGlvbiBhbmQgaW50ZXJhY3Rpb24gb2YgYWxs
IGVsZWN0cm9ucyBhbmQgbnVjbGVpIGluIGEgbW9sZWN1bGUuIEhvd2V2ZXIsIHRoZSBTY2hyXCJ7
b31kaW5nZXIgZXF1YXRpb24gaXMgdG9vIGNvbXBsaWNhdGVkIHRvIHNvbHZlIGZvciBzeXN0ZW1z
IHdpdGggbW9yZSB0aGFuIG9uZSBlbGVjdHJvbiBhbmQgbnVjbGVpLCBhbmQgbm8gYW5hbHl0aWMg
c29sdXRpb24gZXhpc3RzIGZvciBsYXJnZXIgc3lzdGVtcy4gTWFqb3Igc2ltcGxpZmljYXRpb24g
Y2FuIGJlIGFjaGlldmVkIGJ5IHRoZSBCb3JuLU9wcGVuaGVpbWVyIGFwcHJveGltYXRpb24gKEJP
KS5cY2l0ZXtib3JuMTkyN3F1YW50ZW50aGVvcmllLFN6YWJvOjE5ODl3d30gVGhlIG1haW4gaWRl
YSBpcyB0byB0cmVhdCB0aGUgbW90aW9uIG9mIHRoZSBlbGVjdHJvbnMgYW5kIHRoZSBudWNsZWkg
ZGlmZmVyZW50bHkgc2luY2UgZWxlY3Ryb25zIGFyZSBtb3ZpbmcgbXVjaCBmYXN0ZXIgZHVlIHRv
IGEgc21hbGxlciBtYXNzLiBUaGlzIHlpZWxkcyB0aGUgc2ltcGxpZmllZCBIYW1pbHRvbmlhbiB0
aGF0IGlzIGdpdmVuIGFzIApcYmVnaW57YWxpZ259XGhhdHtIfV97XHJtIGVsZWN9ID0gLVxzdW1c
bGltaXRzX3tpPTF9Xk5cZnJhY3sxfXsyfVxuYWJsYV97aX1eezJ9IC0gXHN1bVxsaW1pdHNfe2k9
MX1eTlxzdW1cbGltaXRzX3tBPTF9Xk1cZnJhY3taX3tBfX17cl97aUF9fSArIFxzdW1cbGltaXRz
X3tpPTF9Xk5cc3VtXGxpbWl0c197aj5pfV5OXGZyYWN7MX17cl97aWp9fQpcZW5ke2FsaWdufQpU
aGUgZmlyc3QgdGVybSBpbiB0aGUgZWxlY3Ryb25pYyBIYW1pbHRvbmlhbiBpcyB0aGUga2luZXRp
YyBlbmVyZ3kgb3BlcmF0b3Igb2YgZWxlY3Ryb25zIHdoZXJlICROJCByZXByZXNlbnRzIHRoZSBu
dW1iZXIgb2YgZWxlY3Ryb25zLiBUaGUgc2Vjb25kIGlzIHRoZSBlbGVjdHJvbi1udWNsZWFyIGF0
dHJhY3Rpb24gb3BlcmF0b3Igd2hlcmUgJE0kIGFuZCAkWl97QX0kIGFyZSB0aGUgbnVtYmVyIG9m
IG51Y2xlaSBhbmQgdGhlIGNoYXJnZSBudW1iZXIgb2YgbnVjbGV1cyAkQSQuICRyX3tpQX0kIGlz
IHRoZSBkaXN0YW5jZSBiZXR3ZWVuIHRoZSAkaSQtdGggZWxlY3Ryb24gYW5kICRBJC10aCBudWNs
ZXVzLiBGaW5hbGx5LCB0aGUgbGFzdCB0ZXJtIGlzIHRoZSBlbGVjdHJvbi1lbGVjdHJvbiByZXB1
bHNpb24gb3BlcmF0b3Igd2hlcmUgJHJfe2lqfSQgaXMgdGhlIGRpc3RhbmNlIGJldHdlZW4gdGhl
ICRpJC10aCBhbmQgJGokLXRoIGVsZWN0cm9uLiBJbiBnZW5lcmFsLCB0aGUgQm9ybi1PcHBlbmhl
aW1lciBhcHByb3hpbWF0aW9uIGlzIHZhbGlkIGZvciBtb2xlY3VsZXMgaW4gYW4gZWxlY3Ryb25p
Y2FsbHkgZ3JvdW5kIHN0YXRlLiBUaGUgZWxlY3Ryb25pYyBIYW1pbHRvbmlhbiBpbiB0aGUgQk8g
YXBwcm94aW1hdGlvbiBoYXMgYSBzaW1wbGVyIGZvcm0sIGJ1dCBpdCBpcyBzdGlsbCB0b28gY29t
cGxpY2F0ZWQgZm9yIHByYWN0aWNhbCBwdXJwb3NlcyB3aGVyZSB0aGUgbnVtYmVyIG9mIGVsZWN0
cm9ucyBleGNlZWRzIDEuIEZ1cnRoZXIgYXBwcm94aW1hdGlvbnMgaGF2ZSB0byBiZSBpbmNsdWRl
ZCBhbmQgdGhlIGZpcnN0IG9uZSBpcyB0aGUgSGFydHJlZS1Gb2NrIG1ldGhvZC5cY2l0ZXtTemFi
bzoxOTg5d3d9CiAgIApcc3Vic2VjdGlvbntIYXJ0cmVlLUZvY2sgbWV0aG9kfQpUaGUgSGFydHJl
ZS1Gb2NrIG1ldGhvZFxjaXRle1N6YWJvOjE5ODl3dywgVmFsZWV2OjIwMTN9IGlzIGEgc3RhcnRp
bmcgcG9pbnQgZm9yIGFsbCB3YXZlZnVuY3Rpb24tYmFzZWQgbWV0aG9kcywgYW5kIGl0IHBsYXlz
IGFuIGltcG9ydGFudCByb2xlIGluIHRoZSBlbGVjdHJvbmljIHN0cnVjdHVyZSB0aGVvcnkuIElu
IHRoaXMgbWV0aG9kLCB0aGUgc3RhdGUgb2YgZWFjaCBlbGVjdHJvbiBpcyBkZXNjcmliZWQgYnkg
YSBvbmUtZWxlY3Ryb24gd2F2ZWZ1bmN0aW9uIChvcmJpdGFsKS4gVGhlIHRvdGFsd2F2ZSBmdW5j
dGlvbiBmb3IgYWxsIGVsZWN0cm9ucyBpcyBjb25zdHJ1Y3RlZCBhcyBhIFNsYXRlciBkZXRlcm1p
bmFudFxjaXRle1NsYXRlcjoxOTI5aHF9IG9mIHRoZSBvcmJpdGFscyBhbmQgaXMgZ2l2ZW4gYnkg
ClxiZWdpbntlcXVhdGlvbn0KIFxQc2koXG1hdGhiZnt4fV97MX0sIFxtYXRoYmZ7eH1fezJ9LC4u
LixcbWF0aGJme3h9X3tOfSkgPSBcZnJhY3sxfXtcc3FydHtOIX19IFwgIFxiZWdpbnt2bWF0cml4
fQpcY2hpCV97aX0oXG1hdGhiZnt4fV97MX0pICZcY2hpX3tqfShcbWF0aGJme3h9X3sxfSkgJlxs
ZG90cyAmXGNoaV97a30oXG1hdGhiZnt4fV97MX0pIFxcClxjaGkJX3tpfShcbWF0aGJme3h9X3sy
fSkgJlxjaGlfe2p9KFxtYXRoYmZ7eH1fezJ9KSAmXGxkb3RzICZcY2hpX3trfShcbWF0aGJme3h9
X3syfSkgXFwKXHZkb3RzICYgXHZkb3RzICYgXGRkb3RzICYgXHZkb3RzIFxcClxjaGkJX3tpfShc
bWF0aGJme3h9X3tOfSkgJlxjaGlfe2p9KFxtYXRoYmZ7eH1fe059KSAmXGxkb3RzICZcY2hpX3tr
fShcbWF0aGJme3h9X3tOfSkgXFwKCVxlbmR7dm1hdHJpeH0KXGVuZHtlcXVhdGlvbn0Kd2hlcmUg
JFxjaGlfe2l9JCBpcyB0aGUgJGkkLXRoIHNwaW4gb3JiaXRhbCwgYW5kICRcbWF0aGJme3h9X3tp
fSQgaXMgdGhlIHR1cGxlIG9mIHRocmVlIHNwYXRpYWwgY29vcmRpbmF0ZXMgYW5kIG9uZSBzcGlu
IGNvb3JkaW5hdGUgb2YgdGhlIGVsZWN0cm9uICRpJC4gVGhlIG9wdGltYWwgb3JiaXRhbHMgYXJl
IG9idGFpbmVkIGJ5IG1pbmltaXppbmcgdGhlIFJheWxlaWdoIHF1b3RpZW50IAogICBcYmVnaW57
YWxpZ259CkUgPSBcZnJhY3tcQnJhe1xQc2l9XGhhdHtIfVxLZXR7XFBzaX19e1xCcmFrZXR7XFBz
aXxcUHNpfX0gClxlbmR7YWxpZ259CnN1YmplY3QgdG8gY29uc3RyYWludHMgdGhhdCBzcGluIG9y
Yml0YWxzIGFyZSBvcnRob25vcm1hbCB0byBlYWNoIG90aGVyICgkXGJyYWtldHtcY2hpX3tpfXxc
Y2hpX3tqfX0gPSBcZGVsdGFfe2lqfSQgd2hlcmUgJFxkZWx0YV97aWp9JCBpcyB0aGUgS3JvbmVj
a2VyIGRlbHRhIHdoaWNoIGdpdmVzICQxJCBpZiAkaT1qJCwgb3RoZXJ3aXNlICQwJCkuIFRoaXMg
ZW5zdXJlcyB0aGF0IHRoZSBvYnRhaW5lZCBlbmVyZ3kgd2lsbCBhbHdheXMgYmUgaGlnaGVyIG9y
IGVxdWFsIHRvIHRoZSBleGFjdCBlbmVyZ3kgZHVlIHRvIHRoZSB2YXJpYXRpb25hbCBwcmluY2lw
bGUuIFRoaXMgbGVhZHMgdXMgdG8gYSBzZXQgb2YgaW50ZWdyby1kaWZmZXJlbnRpYWwgSGFydHJl
ZS1Gb2NrIGVxdWF0aW9ucyAKXGJlZ2lue2FsaWdufQpcaGF0e0Z9XGNoaV97aX0gPSBcZXBzaWxv
bl97aX1cY2hpX3tpfVxsYWJlbHtlcTpmb2NrfSAKXGVuZHthbGlnbn0KdGhhdCBoYXZlIGEgZm9y
bSBvZiB0aGUgZWlnZW52YWx1ZSBlcXVhdGlvbiwgd2hlcmUgJFxoYXR7Rn0kIGlzIHRoZSBGb2Nr
IG9wZXJhdG9yLCAkXGNoaV97aX0kIGlzIHRoZSAkaSQtdGggY2Fub25pY2FsIHNwaW4gb3JiaXRh
bCBhbmQgJFxlcHNpbG9uX3tpfSQgaXMgdGhlIGNvcnJlc3BvbmRpbmcgb3JiaXRhbCBlbmVyZ3ku
IFRoZSBGb2NrIG9wZXJhdG9yIGlzIGRlZmluZWQgYXMKXGJlZ2lue2FsaWdufQpcaGF0e0Z9KDEp
ID0gXGhhdHtofSgxKSArIFxoYXR7Sn0oMSkgLSBcaGF0e0t9KDEpIFxsYWJlbHtlcTpmb2Nrb3Bl
cmF0b3J9ClxlbmR7YWxpZ259CndoZXJlICRcaGF0e2h9KDEpJCBpcyB0aGUgc3VtIG9mIHRoZSBv
bmUgZWxlY3Ryb24ga2luZXRpYyBlbmVyZ3kgb3BlcmF0b3IgYW5kIHRoZSBlbGVjdHJvbi1udWNs
ZWFyIGF0dHJhY3Rpb24gb3BlcmF0b3IKIFxiZWdpbnthbGlnbn0KXGhhdHtofSgxKSA9IC1cZnJh
Y3sxfXsyfVxuYWJsYV97MX1eezJ9IC0gXHN1bVxsaW1pdHNfe0F9XGZyYWN7Wl97QX19e3Jfe2lB
fX0uClxlbmR7YWxpZ259ClRoZSBDb3Vsb21iIG9wZXJhdG9yICRcaGF0e0p9KDEpJCBhY3Rpbmcg
b24gdGhlIHNwaW4gb3JiaXRhbCAkaSQgdGhhdCBjb250YWlucyBlbGVjdHJvbiAkMSQgaXMgZ2l2
ZW4gYXMKXGJlZ2lue2FsaWdufQpcaGF0e0p9KDEpXGNoaV97aX0oMSkgPSBcc3VtXGxpbWl0c197
an1caW50XGNoaV97an1eeyp9KDIpXGNoaV97an0oMilcZnJhY3sxfXtyX3sxMn19XGNoaV97aX0o
MSlkXG1hdGhiZnt4fV97Mn0KXGVuZHthbGlnbn0KYW5kIGl0IGNhbiBiZSByZWFsaXplZCBhcyB0
aGUgdG90YWwgQ291bG9tYiBwb3RlbnRpYWwgYXQgJFxtYXRoYmZ7cn1fezF9JCBkdWUgdG8gdGhl
IGNoYXJnZSBkZW5zaXR5IGNhdXNlZCBieSBhbGwgb3RoZXIgZWxlY3Ryb25zLiBUaGUgZXhjaGFu
Z2Ugb3BlcmF0b3IgJFxoYXR7S30kIGFjdGluZyBvbiB0aGUgJFxjaGlfe2l9KDEpJCBzcGluIG9y
Yml0YWwgaXMgZ2l2ZW4gYnkKXGJlZ2lue2FsaWdufQpcaGF0e0t9KDEpXGNoaV97aX0oMSkgPSBc
c3VtXGxpbWl0c197an1caW50XGNoaV97an1eeyp9KDIpXGNoaV97aX0oMilcZnJhY3sxfXtyX3sx
Mn19XGNoaV97an0oMSlkXG1hdGhiZnt4fV97Mn0KXGVuZHthbGlnbn0KVGhlIGVmZmVjdCBvZiB0
aGUgJFxoYXR7S30kIG9wZXJhdG9yIGlzIHRvIGV4Y2hhbmdlIHRoZSBsYWJlbHMgb2YgZWxlY3Ry
b25zICQxJCBhbmQgJDIkLiBUaGlzIG9wZXJhdG9yIGRvZXMgbm90IGhhdmUgY2xhc3NpY2FsIGV4
cGxhbmF0aW9uIGxpa2UgdGhlIHByZXZpb3VzIHR3bywgYW5kIGl0cyBvcmlnaW4gaXMgZnJvbSB0
aGUgYW50aXN5bW1ldHJpYyBuYXR1cmUgb2YgdGhlIFNsYXRlciBkZXRlcm1pbmFudC4gXHJlZntl
cTpmb2NrfSBpcyBub3QgcHJhY3RpY2FsIGZvciB1c2UsIGFuZCBpbiBvcmRlciB0byBhcnJpdmUg
YXQgYSBjb21wdXRhdGlvbmFsbHkgYXR0cmFjdGl2ZSBleHByZXNzaW9uLCB3ZSBleHBhbmQgc3Bp
bi1vcmJpdGFscyBpbnRvIGEgc2V0IG9mICRNJCBiYXNpcyBmdW5jdGlvbnMKXGJlZ2lue2FsaWdu
fQpcY2hpX3tpfShcbWF0aGJme3h9KSA9IFxzdW1cbGltaXRzX3tcbXU9MX1ee019IENfe1xtdSBp
fVxwaGlfe1xtdX0oXG1hdGhiZnt4fSkKXGVuZHthbGlnbn0Kd2hlcmUgJFxwaGlfe1xtdX0kIGFy
ZSB1c3VhbGx5IGF0b20tY2VudGVyZWQgZnVuY3Rpb25zLiBJbnNlcnRpbmcgJFxjaGlfe2l9KFxt
YXRoYmZ7eH0pJCBpbnRvIFxyZWZ7ZXE6Zm9ja30gYW5kIHByb2plY3RpbmcgaXQgd2l0aCB0aGUg
JFxwaGlfe1xudX0kLCB3ZSBvYnRhaW4gdGhlIG1hdHJpeCBlcXVhdGlvbiBmb3IgJENfe1xtdSBp
fSQuIEluIHRoZSBtYXRyaXggZm9ybSwgdGhpcyBlcXVhdGlvbiBpcyBjYWxsZWQgdGhlIEhhcnRy
ZWUtRm9jay1Sb290aGFhbiBlcXVhdGlvbixcY2l0ZXtSb290aGFhbjoxOTUxaGJ9IGFuZCBpdCBp
cyBnaXZlbiBhcyAKXGJlZ2lue2FsaWdufQpcbWF0aGJme0Z9XG1hdGhiZntDfSA9IFxtYXRoYmZ7
U31cbWF0aGJme0N9XGJvbGRzeW1ib2x7XGVwc2lsb259IFxsYWJlbHtlcTpyb290aGFhbn0KXGVu
ZHthbGlnbn0Kd2hlcmUgJFxtYXRoYmZ7Q30kIGlzIHRoZSAkTSBcdGltZXMgTiQgbWF0cml4IG9m
IHRoZSBleHBhbnNpb24gY29lZmZpY2llbnRzICRDX3tcbXUgaX0kIHRoYXQgZGVzY3JpYmVzIHRo
ZSB0cmFuc2Zvcm1hdGlvbiBmcm9tIGF0b21pYyB0byBtb2xlY3VsYXIgb3JiaXRhbCBiYXNpcy4g
SW4gXHJlZntlcTpyb290aGFhbn0sIHRoZSBlbGVtZW50cyBvZiB0aGUgb3ZlcmxhcCBtYXRyaXgg
JFNfe1xtdSBcbnV9JCBhcmUgClxiZWdpbnthbGlnbn0KU197XG11IFxudX0gPSBcaW50XHBoaV97
XG11fV57Kn0oMSlccGhpX3tcbnV9KDEpZFxtYXRoYmZ7cn1fezF9ClxlbmR7YWxpZ259CmFuZCB0
aGUgRm9jayBtYXRyaXggZWxlbWVudHMgYXJlClxiZWdpbnthbGlnbn0KRl97XG11IFxudX0gPSBc
aW50XHBoaV97XG11fV57Kn0oMSkgXGhhdHtGfSgxKVxwaGlfe1xudX0oMSlkXG1hdGhiZntyfV97
MX0KXGVuZHthbGlnbn0KVGhpcyBleHByZXNzaW9uIGNhbiBiZSBmdXJ0aGVyIGV4cGFuZGVkLCB3
aGljaCBsZWFkcyB1cyB0byB0aGUgZmluYWwgZXhwcmVzc2lvbiBmb3IgdGhlIEZvY2sgbWF0cml4
ClxiZWdpbnthbGlnbn0KRl97XG11IFxudX0gPSBoX3tcbXUgXG51fSArIFxzdW1fe2l9XHN1bV97
XHJob1xzaWdtYX1DX3tccmhvIGl9Q197XHNpZ21hIGl9XEJyYWtldHtcbXVccmhvfHxcbnVcc2ln
bWF9XGxhYmVse2VxOmZvY2ttYXRyaXh9ClxlbmR7YWxpZ259CndoZXJlIApcYmVnaW57YWxpZ259
ClxCcmFrZXR7XG11XHJob3x8XG51XHNpZ21hfSA9IFxCcmFrZXR7XG11XHJob3xcbnVcc2lnbWF9
IC0gXEJyYWtldHtcbXVccmhvfFxzaWdtYVxudX0KXGVuZHthbGlnbn0KYW5kIApcYmVnaW57YWxp
Z259ClxCcmFrZXR7XG11XHJob3xcbnVcc2lnbWF9ID0gKFxtdVxudXxccmhvXHNpZ21hKSA9IFxp
bnRccGhpX3tcbXV9XnsqfSgxKVxwaGlfe1xyaG99XnsqfSgyKVxmcmFjezF9e3JfezEyfX1ccGhp
X3tcbnV9KDEpXHBoaV97XHNpZ21hfSgyKWRcbWF0aGJme3J9X3sxfWRcbWF0aGJme3J9X3syfVxs
YWJlbHtlcToyZWludH0gClxlbmR7YWxpZ259CmFyZSB0aGUgdHdvLWVsZWN0cm9uIGludGVncmFs
cyBpbiBwaHlzaWNpc3QgYW5kIGNoZW1pc3Qgbm90YXRpb24sIHJlc3BlY3RpdmVseS4gQ29uc3Ry
dWN0aW9uIG9mIHRoZSBGb2NrIG9wZXJhdG9yIGlzIGNvbXB1dGF0aW9uYWxseSB0aGUgbW9zdCBl
eHBlbnNpdmUgc3RlcCBiZWNhdXNlIGl0IHJlcXVpcmVzIGV2YWx1YXRpb24gb2YgdGhlIHR3by1l
bGVjdHJvbiBpbnRlZ3JhbHMgYW5kIGNvbnRyYWN0aW9uIG9mIHRoZW0gd2l0aCB0aGUgZXhwYW5z
aW9uIGNvZWZmaWNpZW50cyBhcyBkZXNjcmliZWQgaW4gXHJlZntlcTpmb2NrbWF0cml4fTsgdGhl
cmVmb3JlLCB0aGUgZm9ybWFsIHNjYWxpbmcgb2YgdGhlIEhhcnRyZWUtRm9jayBtZXRob2QgaXMg
XE97bl40fS4gU2luY2UgdGhlIEZvY2sgb3BlcmF0b3IgZGVwZW5kcyBvbiB0aGUgZXhwYW5zaW9u
IGNvZWZmaWNpZW50cywgXHJlZntlcTpyb290aGFhbn0gbmVlZHMgdG8gYmUgc29sdmVkIGl0ZXJh
dGl2ZWx5IHZpYSB0aGUgc2VsZi1jb25zaXN0ZW50LWZpZWxkIHByb2NlZHVyZSAoU0NGKS4gCgpc
c3Vic2VjdGlvbntFbGVjdHJvbiBDb3JyZWxhdGlvbiBpbiBBdG9tcyBhbmQgTW9sZWN1bGVzfQpU
aGUgSGFydHJlZS1Gb2NrIHRoZW9yeSBpcyBzdGlsbCBpbiB1c2UgZm9yIG1vbGVjdWxhciBlbGVj
dHJvbmljIHdhdmUgZnVuY3Rpb25zIGFuZCBwcm9wZXJ0aWVzOyBob3dldmVyLCBpdCBoYXMgYSBm
ZXcgZGVmaWNpZW5jaWVzLiBIYXJ0cmVlLUZvY2sgaXMgYSBtZWFuLWZpZWxkIHRoZW9yeSwgd2hl
cmUgZWFjaCBlbGVjdHJvbiBmZWVscyBhbiBhdmVyYWdlIHBvdGVudGlhbCBvZiBhbGwgb3RoZXIg
ZWxlY3Ryb25zIGluIGEgbW9sZWN1bGUuIEluIG90aGVyIHdvcmRzLCBwcm9iYWJpbGl0eSBvZiBm
aW5kaW5nIGFuIGVsZWN0cm9uIGF0IGEgZ2l2ZW4gcG9zaXRpb24gaXMgaW5kZXBlbmRlbnQgb2Yg
cG9zaXRpb25zIG9mIG90aGVyIGVsZWN0cm9ucy4gClxiZWdpbntmaWd1cmV9W2h0Yl0KCVxiZWdp
bntjZW50ZXJ9CgkJXGluY2x1ZGVncmFwaGljc1t3aWR0aD0wLjdcdGV4dHdpZHRoXXtoeWwucG5n
fQoJXGNhcHRpb257SGVsaXVtIGdyb3VuZCBzdGF0ZSB3YXZlIGZ1bmN0aW9ufQoJXGxhYmVse2Zp
ZzpIZWxpdW0gZ3JvdW5kIHN0YXRlIHdhdmUgZnVuY3Rpb259CglcZW5ke2NlbnRlcn0KXGVuZHtm
aWd1cmV9ClN1Y2ggYmVoYXZpb3IgaGFzIGJlZW4gc2hvd24gb24gdGhlIFxyZWZ7ZmlnOkhlbGl1
bSBncm91bmQgc3RhdGUgd2F2ZSBmdW5jdGlvbn0gdGhhdCBkZXNjcmliZXMgdGhlIHNoYXBlIG9m
IGRpZmZlcmVudCB3YXZlIGZ1bmN0aW9ucyB3aGVuIHR3byBlbGVjdHJvbnMgYXJlIG9uIHRoZSBz
YW1lIGNpcmNsZSB3aXRoIG9uZSBmaXhlZCBhbmQgdGhlIG90aGVyIG1vdmluZyBhbG9uZyB0aGUg
Y2lyY2xlIGJ5IGNoYW5naW5nICRcdGhldGFfezEyfSQuIEFzIHdlIGNhbiBzZWUgZnJvbSB0aGUg
cGxvdCwgdGhlIEhhcnRlZS1Gb2NrIHdhdmVmdW5jdGlvbiBpcyBhIHN0cmFpZ2h0IGxpbmUgYW5k
IHRoZSBwb3NpdGlvbiBvZiBlbGVjdHJvbiBvbmUgaXMgY29tcGxldGVseSBpbmRlcGVuZGVudCBv
biB0aGUgcG9zaXRpb24gb2YgYW5vdGhlciBlbGVjdHJvbi4gSG93ZXZlciwgaW4gcmVhbGl0eSwg
ZWxlY3Ryb25zIGZlZWwgZWFjaCBvdGhlciBkdWUgdG8gdGhlIGVsZWN0cm9uLWVsZWN0cm9uIHJl
cHVsc2lvbiBhbmQgbW90aW9uIG9mIGFsbCBlbGVjdHJvbnMgaGFzIHRvIGJlIGNvcnJlbGF0ZWQg
d2hpY2ggY2FuIGJlIHNlZW4gZnJvbSB0aGUgcGxvdCB0aGF0IHRoZSBleGFjdCB3YXZlZnVuY3Rp
b24gaXMgY3VydmVkLgpGdXJ0aGVyIGV4cGxhbmF0aW9uIG9mIHRoZSBwbG90IHdpbGwgYmUgZ2l2
ZW4gaW4gdGhlIHNlY3Rpb24gb24gRXhwbGljaXRseSBDb3JyZWxhdGVkIG1ldGhvZHMuIENvcnJl
bGF0aW9uIGVuZXJneSBpcyBkZWZpbmVkIGFzIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgZXhhY3Qg
YW5kIGNvbXBsZXRlIGJhc2lzIHNldCBIYXJ0cmVlLUZvY2sgZW5lcmd5XGNpdGV7TG93ZGluOjE5
NTlob30gClxiZWdpbnthbGlnbn0KRV97XHJtIGNvcnJ9ID0gRV97XHJtIGV4YWN0fSAtIEVfe1xy
bSBIRn0KXGVuZHthbGlnbn0KRXZlbiB0aG91Z2ggdGhlIGNvcnJlbGF0aW9uIGVuZXJneSBpcyBs
ZXNzIHRoYW4gb25lIHBlcmNlbnQgb2YgdGhlIHRvdGFsIGVsZWN0cm9uaWMgZW5lcmd5LCBpdCBw
bGF5cyBhbiBpbXBvcnRhbnQgcm9sZSBmb3IgcHJlZGljdGluZyBjaGVtaWNhbCBwaGVub21lbmE7
IHRoZXJlZm9yZSwgaXQgaGFzIHRvIGJlIGluY2x1ZGVkLiBUaGVyZSBhcmUgbWFueSB3YXlzIHRv
IGRlc2NyaWJlIGVsZWN0cm9uIGNvcnJlbGF0aW9uLCBhbmQgc29tZSBvZiB0aGVtIGFyZSBleHBs
YWluZWQgaW4gdGhlIGZvbGxvd2luZyBzdWJzZWN0aW9ucy4gCgpcc3Vic3Vic2VjdGlvbntDb25m
aWd1cmF0aW9uIEludGVyYWN0aW9uIG1ldGhvZH0KVGhlIGVhc2llc3QgdG8gdW5kZXJzdGFuZCBj
b25jZXB0dWFsbHkgb2YgYWxsIGNvcnJlbGF0aW9uIG1ldGhvZHMgaXMgdGhlIGNvbmZpZ3VyYXRp
b24gaW50ZXJhY3Rpb24gKENJKSBtZXRob2QuXGNpdGV7U2hhdml0dDoxOTc3Y3MsIFN6YWJvOjE5
ODl3d30gSW4gdGhpcyBtZXRob2QsIHRoZSBleGFjdCB3YXZlIGZ1bmN0aW9uIGlzIGV4cGFuZGVk
IGFzIGEgbGluZWFyIGNvbWJpbmF0aW9uIG9mIGFsbCBwb3NzaWJsZSBTbGF0ZXIgZGV0ZXJtaW5h
bnRzIHRoYXQgY2FuIGJlIGNvbnN0cnVjdGVkIGZyb20gJE4kIGVsZWN0cm9ucyBhbmQgJDJLJCBz
cGluIG9yYml0YWxzICR7XGNoaV97aX19JCBhcwpcYmVnaW57YWxpZ259ClxrZXR7XHJtIEZDSX0g
PSBjX3swfVxrZXR7XFBzaV97MH19ICsgXHN1bV97aSA8IGF9Y197aX1ee2F9XGtldHtcUHNpX3tp
fV57YX19ICsgXHN1bV97XHN1YnN0YWNre2kgPCBqIFxcIGEgPCBifX1jX3tpan1ee2FifVxrZXR7
XFBzaV97aWp9XnthYn19ICsgXHN1bV97XHN1YnN0YWNre2kgPCBqIDwgayBcXCBhIDwgYiA8IGN9
fWNfe2lqa31ee2FiY31ca2V0e1xQc2lfe2lqa31ee2FiY319ICsgLi4uIFxsYWJlbHtlcTpGQ0l9
ClxlbmR7YWxpZ259CndoZXJlICRca2V0e1xQc2lfezB9fSQgaXMgdGhlIEhhcnRyZWUtRm9jayBT
bGF0ZXIgZGV0ZXJtaW5hbnQgb3IgdGhlIHJlZmVyZW5jZSBkZXRlcm1pbmFudDsgJFxrZXR7XFBz
aV97aX1ee2F9fSQgaXMgdGhlIFNsYXRlciBkZXRlcm1pbmFudCB3aGVyZSBvbmUgZWxlY3Ryb24g
ZnJvbSBvY2N1cGllZCBzcGluIG9yYml0YWwgJGkkIGlzIGV4Y2l0ZWQgdG8gdW5vY2N1cGllZCBv
cmJpdGFsICRhJDsgJFxrZXR7XFBzaV97aWp9XnthYn19JCBpcyB0aGUgU2xhdGVyIGRldGVybWlu
YW50IGluIHdoaWNoIGVsZWN0cm9ucyBmcm9tIG9jY3VwaWVkIHNwaW4gb3JiaXRhbHMgJGkkIGFu
ZCAkaiQgYXJlIGV4Y2l0ZWQgdG8gdW5vY2N1cGllZCBzcGluIG9yYml0YWxzICRhJCBhbmQgJGIk
IGFuZCBzbyBvbi4KVGhlIGluZGljZXMgdXNlZCB0byBkZW5vdGUgbW9sZWN1bGFyIG9yYml0YWxz
IGFyZSBzaG93biBpbiBccmVme2ZpZzpPcmJpdGFsIHNwYWNlc30uIEhlcmUsIHdlIGRlbm90ZWQg
YWxsIG9jY3VwaWVkIG9yYml0YWxzIHdpdGggJG0sbi4uJC4gVGhlIHNldCBvZiBvY2N1cGllZCBv
cmJpdGFscyBpcyBkaXZpZGVkIGludG8gYWN0aXZlIGFuZCBpbmFjdGl2ZSAoZnJvemVuKSBvY2N1
cGllZCBvcmJpdGFscyB3aGVyZSBhY3RpdmUgb2NjdXBpZWQgb3JiaXRhbHMgYXJlIGRlbm90ZWQg
d2l0aCAkaSxqLGssbC4uJC4gVmlydHVhbCBvcmJpdGFscyBoYXZlIGJlZW4gZGVub3RlZCB3aXRo
ICRhLGIsYyxkLi4kLiBDb21iaW5pbmcgYWxsIG9jY3VwaWVkIGFuZCB2aXJ0dWFsIG9yYml0YWxz
IGdpdmVzIG9yYml0YWwgYmFzaXMgc3BhY2UgKE9CUykgZGVub3RlZCB3aXRoICRwLHEscixzLi4k
LiBGdXJ0aGVybW9yZSwgdGhlIE9CUyBpcyBleHRlbmRlZCB3aXRoIHRoZSBjb21wbGV0ZSBhdXhp
bGlhcnkgYmFzaXMgc3BhY2UgKENBQlMpIHRoYXQgaXMgbmVjZXNzYXJ5IGZvciBleHBsaWNpdGx5
IGNvcnJlbGF0ZWQgbWV0aG9kcyBhbmQgaXMgZGVub3RlZCB3aXRoICRhJyxiJyxjJyxkJy4uJC5c
Y2l0ZXtLb25nOjIwMTF0a30gVGhlIENBQlMgYW5kIHZpcnR1YWwgb3JiaXRhbHMgZm9ybSB0aGUg
Y29tcGxldGUgdmlydHVhbCBzcGFjZSAoJFxhbHBoYSxcYmV0YSQuLi4pLCBhbmQgdGhlIE9CUyBh
bmQgQ0FCUyBmb3JtIHRoZSBjb21wbGV0ZSBiYXNpcyBzcGFjZSAoQ0JTKSB3aGVyZSBpbmRpY2Vz
IGFyZSBkZW5vdGVkIHdpdGggJHAnLHEnLHInLHMnLi4kLlxjaXRle0hhdHRpZzoyMDExdmV9ICAg
ClxiZWdpbntmaWd1cmV9W2h0Yl0KCVxiZWdpbntjZW50ZXJ9CgkJXGluY2x1ZGVncmFwaGljc1t3
aWR0aD0wLjdcdGV4dHdpZHRoXXtvcmJpdGFsc3BhY2VzLnBuZ30KCVxjYXB0aW9ue09yYml0YWwg
c3BhY2VzfQoJXGxhYmVse2ZpZzpPcmJpdGFsIHNwYWNlc30KCVxlbmR7Y2VudGVyfQpcZW5ke2Zp
Z3VyZX0KXFxUaGUgZXhwYW5zaW9uIGNvZWZmaWNpZW50cyAkYyQgZnJvbSBccmVme2VxOkZDSX0g
dGVsbCB1cyBob3cgbXVjaCBlYWNoIGNvbmZpZ3VyYXRpb24gKFNsYXRlciBkZXRlcm1pbmFudCkg
Y29udHJpYnV0ZXMgaW4gdGhlIGNvbnN0cnVjdGlvbiBvZiB0aGUgZXhhY3Qgd2F2ZSBmdW5jdGlv
bi4gRm9yIHRoZSBlcXVpbGlicml1bSBnZW9tZXRyeSBpbiBjbG9zZWQgc2hlbGwgc3lzdGVtcywg
JGNfezB9JCBoYXMgdGhlIGxhcmdlc3QgdmFsdWUgKGNsb3NlIHRvIDEpLiBccmVme2VxOkZDSX0g
aXMgdGhlIGZ1bGwgQ0kgd2F2ZSBmdW5jdGlvbiwgYW5kLCB3aXRoIGEgY29tcGxldGUgYmFzaXMg
c2V0LCBpdCBnaXZlcyAgdGhlIGV4YWN0IGVuZXJneSBvZiB0aGUgbW9sZWN1bGFyIHN5c3RlbSB3
aXRoaW4gdGhlIEJvcm4tT3BwZW5oZWltZXIgYXBwcm94aW1hdGlvbi4gVGhlIGNvcnJlbGF0aW9u
IGVuZXJneSBpcyBkZWZpbmVkIGFzClxiZWdpbnthbGlnbn0KKFxoYXR7SH0gLSBFX3swfSlca2V0
e1xybSBGQ0l9ID0gRV97XHJtIGNvcnJ9XGtldHtccm0gRkNJfSBcbGFiZWx7ZXE6RkNJZW5lcmd5
fQpcZW5ke2FsaWdufQp3aGVyZSAkRV97MH0kIGlzIHRoZSBIYXJ0cmVlLUZvY2sgZW5lcmd5LiBU
aGUgbnVtYmVyIG9mIHBvc3NpYmxlIGV4Y2l0ZWQgU2xhdGVyIGRldGVybWluYW50cyBncm93cyBh
cyAkXGJpbm9tezJLfXtOfSQuXGNpdGV7U3phYm86MTk4OXd3fSBBcyBhIHJlc3VsdCwgdGhlIEZD
SSBtZXRob2QgY2FuIGJlIHVzZWQgb25seSBmb3Igc21hbGwgc3lzdGVtcy4gSW4gb3JkZXIgdG8g
bWFrZSB0aGlzIHRoZW9yeSBhcHBsaWNhYmxlIHRvIGxhcmdlciBzeXN0ZW1zLCB3ZSBjYW4gZGlz
Y2FyZCBkZXRlcm1pbmFudHMgdGhhdCBjb250YWluIGhpZ2hlciBleGNpdGF0aW9ucy4gSWYgd2Ug
dHJ1bmNhdGUgYWxsIGV4Y2l0ZWQgZGV0ZXJtaW5hbnRzIGV4Y2VwdCByZWZlcmVuY2UsIHNpbmds
eSAoUyksIGFuZCBkb3VibHkgKEQpIGV4Y2l0ZWQgZGV0ZXJtaW5hbnRzLCB3ZSBvYnRhaW4gdGhl
IHRydW5jYXRlZCB3YXZlIGZ1bmN0aW9uIGZvciB0aGUgQ0lTRCBtZXRob2QgClxiZWdpbnthbGln
bn0KXEtldHtcUGhpX3tccm0gQ0lTRH19ID0gY197MH1ca2V0e1xQc2lfezB9fSArIFxzdW1fe2sg
PCBjfWNfe2t9XntjfVxrZXR7XFBzaV97a31ee2N9fSArIFxzdW1fe1xzdWJzdGFja3trIDwgbCBc
XCBjIDwgZH19Y197a2x9XntjZH1ca2V0e1xQc2lfe2tsfV57Y2R9fQpcZW5ke2FsaWdufQpUbyBv
YnRhaW4gY29ycmVsYXRpb24gZW5lcmd5LCB3ZSBpbnNlcnQgdGhpcyBpbnRvIFxyZWZ7ZXE6RkNJ
ZW5lcmd5fQpcYmVnaW57YWxpZ259CihcaGF0e0h9IC0gRV97MH0pXEtldHtcUGhpX3tccm0gQ0lT
RH19ID0gRV97XHJtIGNvcnJ9XEtldHtcUGhpX3tccm0gQ0lTRH19IFxsYWJlbHtDSVNEZW5lcmd5
fQpcZW5ke2FsaWdufQpJZiB3ZSBwcm9qZWN0IHRoZSBwcmV2aW91cyBlcXVhdGlvbiBzdWNjZXNz
aXZlbHkgd2l0aCAkXGJyYXtcUHNpX3swfX0kLCAkXGJyYXtcUHNpX3tpfV57YX19JCBhbmQgJFxi
cmF7XFBzaV97aWp9XnthYn19JCwgdGhlbiB3ZSBvYnRhaW4KXGJlZ2lue3N1YmVxdWF0aW9uc30K
XGJlZ2lue2FsaWdufQpcc3VtX3tcc3Vic3RhY2t7ayA8IGwgXFwgYyA8IGR9fWNfe2tsfV57Y2R9
XGJyYXtcUHNpX3swfX1caGF0e0h9XGtldHtcUHNpX3trbH1ee2NkfX0gJj0gRV97XHJtIGNvcnJ9
IFxsYWJlbHtDSVNEY29ycn0gXFwKXHN1bV97ayA8IGN9Y197a31ee2N9XGJyYXtcUHNpX3tpfV57
YX19XGhhdHtIfSAtIEVfezB9XGtldHtcUHNpX3trfV57Y319ICsgXHN1bV97XHN1YnN0YWNre2sg
PCBsIFxcIGMgPCBkfX1jX3trbH1ee2NkfVxicmF7XFBzaV97aX1ee2F9fVxoYXR7SH1ca2V0e1xQ
c2lfe2tsfV57Y2R9fSY9IGNfe2l9XnthfUVfe1xybSBjb3JyfSBcbGFiZWx7Q0lTRHNpbmdsZXN9
IFxcIApcYnJhe1xQc2lfe2lqfV57YWJ9fVxoYXR7SH1ca2V0e1xQc2lfezB9fSArIFxzdW1fe2sg
PCBjfWNfe2t9XntjfVxicmF7XFBzaV97aWp9XnthYn19XGhhdHtIfVxrZXR7XFBzaV97a31ee2N9
fSArIFxzdW1fe1xzdWJzdGFja3trIDwgbCBcXCBjIDwgZH19Y197a2x9XntjZH1cYnJhe1xQc2lf
e2lqfV57YWJ9fVxoYXR7SH0gLSBFX3swfVxrZXR7XFBzaV97a2x9XntjZH19Jj0gY197aWp9Xnth
Yn1FX3tccm0gY29ycn0gXGxhYmVse0NJU0Rkb3VibGV9ClxlbmR7YWxpZ259ClxlbmR7c3ViZXF1
YXRpb25zfQpUaGUgbGFzdCB0d28gZXF1YXRpb25zIGRlcGVuZCBvbiBlYWNoIG90aGVyLCBhbmQg
dGhleSBhcmUgc29sdmVkIHNpbXVsdGFuZW91c2x5IHVzaW5nIGFuIGl0ZXJhdGl2ZSBtZXRob2Qg
Zm9yIHNpbmdsZSBhbmQgZG91YmxlIGNvZWZmaWNpZW50cy4gQWZ0ZXIgY29udmVyZ2VuY2UgaXMg
YWNoaWV2ZWQsIHRoZSBjb3JyZWxhdGlvbiBlbmVyZ3kgaXMgY29tcHV0ZWQgdXNpbmcgXHJlZntD
SVNEY29ycn0gd2l0aCB0aGUgb2J0YWluZWQgY29lZmZpY2llbnRzLiBUaGUgZm9ybWFsIGNvbXB1
dGF0aW9uYWwgc2NhbGluZyBmb3IgQ0lTRCBpcyBcT3tuXjZ9LiBIb3dldmVyLCB0cnVuY2F0aW9u
IG9mIHRoZSBmdWxsIENJIHdhdmUgZnVuY3Rpb24gaW50cm9kdWNlcyBwcm9ibGVtczsgdGhlIENJ
U0QgbWV0aG9kIGlzIG5vIGxvbmdlciBzaXplLWNvbnNpc3RlbnQuIEEgc2l6ZS1jb25zaXN0ZW50
IG1ldGhvZCBpcyBhIG1ldGhvZCB0aGF0IGdpdmVzIHRoZSBzYW1lIHJlc3VsdCBmb3IgZW5lcmd5
IG9mIHRoZSB0d28gbW9sZWN1bGVzICRBJCBhbmQgJEIkIHRoYXQgYXJlIGluZmluaXRlbHkgc2Vw
YXJhdGVkIGFuZCB0aGUgc3VtIG9mIGluZGl2aWR1YWwgbW9sZWN1bGFyIGVuZXJnaWVzOgpcYmVn
aW57YWxpZ259CkVfe0F9ICsgRV97Qn0gPSBFX3tBQn0ocl97QUJ9ID0gXGluZnR5KQpcZW5ke2Fs
aWdufQpTaXplY29uc2lzdGVuY3kgaXMgaW1wb3J0YW50IGZvciBjaGVtaXN0cnkgZHVlIHRvIHRo
ZSBjb21tb24gbmVlZCB0byBjb21wdXRlIHN1Y2ggZW5lcmd5IGRpZmZlcmVuY2VzLgoKXHN1YnN1
YnNlY3Rpb257Q291cGxlZCBQYWlyIG1ldGhvZHN9ClRoZSBjb3VwbGVkIHBhaXIgbWV0aG9kcyBh
cmUgYSBzZXJpZXMgb2YgbWV0aG9kcyB0aGF0IGFyZSBiYXNlZCBvbiB0aGUgQ0lTRCB0aGVvcnks
IGJ1dCB0aGV5IGF2b2lkIHNvbWUgb2YgaXRzIGRlZmljaWVuY2llcy4gVGhlIG9ubHkgZGlmZmVy
ZW5jZSBpcyBvbiB0aGUgbGVmdCBoYW5kIHNpZGUgb2YgXHJlZntDSVNEc2luZ2xlc30gYW5kIFxy
ZWZ7Q0lTRGRvdWJsZX0gd2hlcmUgJEVfe1xybSBjb3JyfSQgaXMgcmVwbGFjZWQgd2l0aCBhbm90
aGVyIHF1YW50aXR5IGNhbGxlZCBzaGlmdCB3aGljaCBpcyBkaWZmZXJlbnQgZm9yIHNpbmdsZXMg
YW5kIGRvdWJsZXMgKCRcRGVsdGFfe2l9JCwgJFxEZWx0YV97aWp9JCkuXGNpdGV7V2Vubm1vaHM6
MjAwOGpsfSBTaGlmdHMgZm9yIHRoZSBjb3VwbGVkIGVsZWN0cm9uIHBhaXIgYXBwcm94aW1hdGlv
biBtZXRob2RzIChDRVBBL3gpXGNpdGV7TWV5ZXI6MTk3M2ZifSBhcmUgc2hvd24gaW4gXHJlZnt0
YWI6Q2VwYS1zaGlmdHN9IHdoZXJlICRcZXBzaWxvbiQgYXJlIG9yYml0YWwgb3IgcGFpciBlbmVy
Z2llcy4KXGJlZ2lue3RhYmxlfVtodF0KXGNlbnRlcmluZwpcYmVnaW57dGFidWxhcn17bCp7Nn17
Y31yfQpNZXRob2QgICAgICAgICAgICAgICYgICRcRGVsdGFfe2l9JCAgJiRcRGVsdGFfe2lqfSRc
XApcaGxpbmUKQ0lTRCAgICAgJiRFX3tjb3JyfSQgICYkRV97Y29ycn0kXFwKQ0VQQS8wICAgJjAg
JjAgXFwKQ0VQQS8xICAgICAgICAgICAgJiAkXGZyYWN7MX17Mn1cZXBzaWxvbl97aWl9ICsgXGZy
YWN7MX17Mn1cc3VtX3trfVxlcHNpbG9uX3tpa30kICYgJFxmcmFjezF9ezJ9KFxlcHNpbG9uX3tp
fSArIFxlcHNpbG9uX3tqfSkgKyBcZnJhY3sxfXs0fVxzdW1fe2t9KFxlcHNpbG9uX3tpa30rXGVw
c2lsb25fe2prfSkkXFwKQ0VQQS8yICAgICAgICAgICAmJFxlcHNpbG9uX3tpfSArIFxzdW1fe2t9
XGVwc2lsb25fe2lrfSQgJiRcZGVsdGFfe2lqfVxlcHNpbG9uX3tpfSArIFxlcHNpbG9uX3tpan0k
XFwKQ0VQQS8zICAgICAmJFxlcHNpbG9uX3tpfSArIFxlcHNpbG9uX3tqfSAtXGRlbHRhX3tpan1c
ZXBzaWxvbl97aX0gLSBcZXBzaWxvbl97aWp9ICsgXGZyYWN7MX17Mn1cc3VtX3trfShcZXBzaWxv
bl97aWt9ICsgXGVwc2lsb25fe2prfSkkICYgJFxlcHNpbG9uX3tpfSArIFxzdW1fe2t9XGVwc2ls
b25fe2lrfSQgXFwKXGVuZHt0YWJ1bGFyfQoJXGNhcHRpb257U2luZ2xlcyBhbmQgZG91YmxlcyBz
aGlmdHMgaW4gQ0VQQSB0eXBlIHRoZW9yeX0KCVxsYWJlbHt0YWI6Q2VwYS1zaGlmdHN9ClxlbmR7
dGFibGV9ClRoZSBDRVBBIG1ldGhvZCBpcyBzaXplLWNvbnNpc3RlbnQgYW5kIHJldGFpbnMgdGhl
IHNhbWUgY29tcGxleGl0eSBhcyB0aGUgQ0lTRCBtZXRob2QuIEhvd2V2ZXIsIGludHJvZHVjaW5n
IHRoZSBwYWlyIGVuZXJneSBpbnN0ZWFkIG9mICRFX3tccm0gY29ycn0kIG1ha2VzIENFUEEvMSwg
Q0VQQS8yIGFuZCBDRVBBLzMgbm90IGludmFyaWFudCB3aXRoIHRoZSByZXNwZWN0IHRvIHRoZSB1
bml0YXJ5IHJvdGF0aW9ucyBvZiB0aGUgb2NjdXBpZWQgb3JiaXRhbHMuIEFuIGV4YW1wbGUgb2Yg
b3JiaXRhbCByb3RhdGlvbiBpcyB0aGUgbG9jYWxpemF0aW9uIHByb2NlZHVyZSBvZiB0aGUgb2Nj
dXBpZWQgb3JiaXRhbHMuIFRoaXMgYmFzaWNhbGx5IG1lYW5zIHRoYXQgaWYgd2UgY2FsY3VsYXRl
IHRoZSBjb3JyZWxhdGlvbiBlbmVyZ3kgd2l0aCBhbmQgd2l0aG91dCBsb2NhbGl6YXRpb24gb2Yg
b2NjdXBpZWQgb3JiaXRhbHMsIHRoZW4gd2Ugd2lsbCBnZXQgZGlmZmVyZW50IGFuc3dlcnMsIHdo
ZXJlYXMgQ0lTRCBhbmQgQ0VQQS8wIGdpdmUgdGhlIHNhbWUgYW5zd2VyLiBDRVBBLXR5cGUgbWV0
aG9kcyBoYXZlIHNldmVyYWwgYXBwZWFsaW5nIGZlYXR1cmVzOiAoYSkgYWNjdXJhY3kgY29tcGFy
YWJsZSB0byB0aGUgYWNjdXJhY3kgb2YgQ0NTRChUKSwgKGIpIGxvdyB0ZWNobmljYWwgY29tcGxl
eGl0eSBvZiBpbXBsZW1lbnRhdGlvbiBjb21wYXJlZCB0byB0aGUgQ0MgbWV0aG9kcywgKGMpIHNp
bXBsZSBmb3JtdWxhdGlvbiBvZiBhbmFseXRpYyBncmFkaWVudHMsIHJlc3BvbnNlIHByb3BlcnRp
ZXMgYW5kIGxvY2FsIGFwcHJveGltYXRpb25zLCBhbmQgKGQpIHNpbXBsZSBnZW5lcmFsaXphdGlv
biB0byBvcGVuLXNoZWxsIHN5c3RlbXMuXGNpdGV7TmVlc2U6MjAwOWtwfSBSZWNlbnRseSwgTmVl
c2UgYW5kIEdyaW1tZSB3aXRoIGNvd29ya2VycyByZXBvcnRlZCB0aGF0IHRoZXNlIG1ldGhvZHMg
b3V0cGVyZm9ybSBtYW55IHBvcHVsYXIgcXVhbnR1bSBjaGVtaWNhbCBtZXRob2RzIGxpa2UgQjNM
WVAsIENJU0QsIFFDSVNELCBDQ1NELCBNUDIgYW5kIFNDUy1NUDIgZm9yIHZhcmlvdXMgY2hlbWlj
YWwgcHJvYmxlbXMgbGlrZSByZWFjdGlvbiBlbmVyZ2llcywgYmFycmllciBoZWlnaHRzLCBpc29t
ZXJpemF0aW9uIHJlYWN0aW9ucyBhbmQgd2VhayBpbnRlcmFjdGlvbnMuXGNpdGV7TmVlc2U6MjAw
OWR0fSAgICAgICAgCgpcc3Vic3Vic2VjdGlvbntDb3VwbGVkIENsdXN0ZXIgbWV0aG9kc30KVGhl
IGNvdXBsZWQgY2x1c3RlciBtZXRob2RcY2l0ZXtDaXplazoxOTcxY3csIENpemVrOjIwMDRjeX0g
aXMgb25lIG9mIHRoZSBtb3N0IHN1Y2Nlc3NmdWwgbWV0aG9kcyB1c2VkIGZvciBwcmVkaWN0aW9u
cyBvZiBhdG9taWMgYW5kIG1vbGVjdWxhciBlbGVjdHJvbmljIHN0cnVjdHVyZSB3aGVuIGhpZ2gg
YWNjdXJhY3kgaXMgcmVxdWlyZWQuIFRoZSBtZXRob2QgaXMgZGVzaWduZWQgdG8gYmUgc2l6ZWNv
bnNpc3RlbnQgZXZlbiBpbiB0cnVuY2F0ZWQgZm9ybSwgd2hpY2ggaXMgYWNoaWV2ZWQgd2l0aCBh
biBleHBvbmVudGlhbCBmb3JtIG9mIHRoZSB3YXZlIGZ1bmN0aW9uIApcYmVnaW57YWxpZ259Clxr
ZXR7XFBzaV97XHJtIENDfX0gPSBcZXhwKFxoYXR7VH0pXGtldHtcUHNpX3swfX0KXGVuZHthbGln
bn0Kd2hlcmUKXGJlZ2lue2FsaWdufQpcZXhwKFxoYXR7VH0pID0gMSArIFxoYXR7VH0gKyBcZnJh
Y3sxfXsyIX1caGF0e1R9XjIgKyBcZnJhY3sxfXszIX1caGF0e1R9XjMgKyAuLi4gKyBcZnJhY3sx
fXtuIX1caGF0e1R9Xm4gKyAuLi4KXGVuZHthbGlnbn0KYW5kICRcaGF0e1R9JCBpcyB0aGUgY2x1
c3RlciBvcGVyYXRvciB0aGF0IGlzIGNvbXBvc2VkIG9mIGV4Y2l0YXRpb24gb3BlcmF0b3JzIG9m
IGRpZmZlcmVudCBvcmRlci5cY2l0ZXtCYXJ0bGV0dDoyMDA3a3YsIENyYXdmb3JkOmJ5fQpUbyBt
YWtlIHRoaXMgdGhlb3J5IHByYWN0aWNhbCwgd2UgdXN1YWxseSB0cnVuY2F0ZSB0aGUgY2x1c3Rl
ciBvcGVyYXRvciAkXGhhdHtUfSQgdG8gaW5jbHVkZSBvbmx5IHNpbmdsZSBhbmQgZG91YmxlIGV4
Y2l0YXRpb25zIHdoaWNoIGdpdmVzIHVzIHRoZSBDQ1NEIHdhdmUgZnVuY3Rpb25cY2l0ZXtDcmF3
Zm9yZDpieX0KXGJlZ2lue2FsaWdufQpca2V0e1xQc2lfe1xybSBDQ1NEfX0gPSBcZXhwKFxoYXR7
VH1fezF9ICsgXGhhdHtUfV97Mn0pXGtldHtcUHNpX3swfX1cbGFiZWx7ZXE6Q0NTRHdmbn0KXGVu
ZHthbGlnbn0Kd2hlcmUgdGhlIGNsdXN0ZXIgb3BlcmF0b3JzIGFyZSBkZWZpbmVkIGFzICRcaGF0
e1R9X3sxfSA9IFxzdW1fe2lhfXRfe2F9XntpfWFfe2F9XnsrfWFfe2l9JCBhbmQgJFxoYXR7VH1f
ezJ9ID0gXGZyYWN7MX17NH1cc3VtX3tpamFifXRfe2FifV57aWp9YV97YX1eeyt9YV97Yn1eeyt9
YV97an1hX3tpfSQuIFRoZSBvcGVyYXRvcnMgJGFfe2F9XnsrfSQgYW5kICRhX3tpfSQgYXJlIHN0
YW5kYXJkIGZlcm1pb24gY3JlYXRpb24gYW5kIGFubmloaWxhdGlvbiBvcGVyYXRvcnMgd2hlcmUg
aW5kaWNlcyBjb3JyZXNwb25kIHRvIHZpcnR1YWwgYW5kIGFjdGl2ZSBvY2N1cGllZCBvcmJpdGFs
cyBhcyBkZWZpbmVkIGluIFxyZWZ7ZmlnOk9yYml0YWwgc3BhY2VzfS4gSW4gb3RoZXIgd29yZHMs
IHRoZSBvcGVyYXRvciAkYV97aX0kIGFubmloaWxhdGVzIGFuIGVsZWN0cm9uIGZyb20gdGhlIG9j
Y3VwaWVkIG9yYml0YWwgJGkkLCBhbmQgb3BlcmF0b3IgJGFfe2F9XnsrfSQgY3JlYXRlcyBhbiBl
bGVjdHJvbiBpbiB0aGUgdmlydHVhbCBvcmJpdGFsICRhJC4gVGhlIG1haW4gdGFzayBpcyB0byBm
aW5kIHNpbmdsZSAoJHRfe2F9XntpfSQpIGFuZCBkb3VibGUgKCR0X3thYn1ee2lqfSQpIGFtcGxp
dHVkZXM7IGFuZCB0aGlzIGNhbiBiZSBkb25lIGJ5IHByb2plY3Rpb24sClxiZWdpbntzdWJlcXVh
dGlvbnN9ClxiZWdpbnthbGlnbn0KXGJyYXtcUHNpX3swfX1cZXhwKC1caGF0e1R9KVxoYXR7SH1c
ZXhwKFxoYXR7VH0pXGtldHtcUHNpX3swfX0gJj0gRV97MH0gKyBFX3tccm0gY29ycn0gXFwgJj0g
RV97MH0gKyBcc3VtX3tpYX1GX3tpYX10X3thfV57aX0gKyBcZnJhY3sxfXs0fVxzdW1fe2lqYWJ9
XGJyYXtpan1ca2V0e2FifSh0X3thYn1ee2lqfSArIDJ0X3thfV57aX10X3tifV57an0pIFxsYWJl
bHtDQ1NEY29ycn0gXFwKUl97YX1ee2l9ICY9IFxicmF7XFBzaV97aX1ee2F9fVxleHAoLVxoYXR7
VH0pXGhhdHtIfVxleHAoXGhhdHtUfSlca2V0e1xQc2lfezB9fT0gMCBcbGFiZWx7Q0NTRHNpbmds
ZXN9IFxcIApSX3thYn1ee2lqfSAmPSBcYnJhe1xQc2lfe2lqfV57YWJ9fVxleHAoLVxoYXR7VH0p
XGhhdHtIfVxleHAoXGhhdHtUfSlca2V0e1xQc2lfezB9fT0gMCBcbGFiZWx7Q0NTRGRvdWJsZX0K
XGVuZHthbGlnbn0KXGVuZHtzdWJlcXVhdGlvbnN9CndoaWNoIGxlYWRzIHVzIHRvIGEgc2V0IG9m
IG5vbmxpbmVhciBlcXVhdGlvbnMgXHJlZntDQ1NEc2luZ2xlc30gYW5kIFxyZWZ7Q0NTRGRvdWJs
ZX0gdGhhdCBoYXZlIHRvIGJlIHNvbHZlZCBpdGVyYXRpdmVseSB3aGVyZSAkUl57aX1fe2F9JCBh
bmQgJFJee2lqfV97YWJ9JCBhcmUgc2luZ2xlIGFuZCBkb3VibGUgcmVzaWR1YWxzLiBUaGUgdG90
YWwgZW5lcmd5IGlzIGdpdmVuIGJ5IFxyZWZ7Q0NTRGNvcnJ9LiBUaGlzIHRoZW9yeSBpcyBleGFj
dCBmb3IgdHdvLWVsZWN0cm9uIHN5c3RlbXMsIHNpemUtY29uc2lzdGVudCBhbmQgaW52YXJpYW50
IHVuZGVyIHVuaXRhcnkgcm90YXRpb24gb2YgdGhlIG9jY3VwaWVkIGFuZCB1bm9jY3VwaWVkIG9y
Yml0YWxzLlxjaXRle05lZXNlOjIwMDlkYn0gVGhlIGZvcm1hbCBzY2FsaW5nIG9mIHRoZSBDQ1NE
IGlzIHRoZSBzYW1lIGFzIHRoZSBjb3VwbGVkIHBhaXIgbWV0aG9kcywgYnV0IGl0IGhhcyBhIGhp
Z2hlciBjb21wbGV4aXR5IGR1ZSB0byBleHRyYSB0ZXJtcyBpbiByZXNpZHVhbCBleHByZXNzaW9u
cy4gSW4gb3JkZXIgdG8gaW1wcm92ZSB0aGUgYWNjdXJhY3kgb2YgdGhpcyB0aGVvcnksIGhpZ2hl
ciBleGNpdGF0aW9ucyBuZWVkIHRvIGJlIGluY2x1ZGVkLiBIb3dldmVyLCB3aXRoIGluY2x1c2lv
biBvZiB0cmlwbGUgKENDU0RUKSBhbmQgcXVhZHJ1cGxlIChDQ1NEVFEpIGV4Y2l0YXRpb25zLCBj
b21wdXRhdGlvbmFsIGNvc3QgaXMgXE97bl44fSBhbmQgXE97bl57MTB9fSwgcmVzcGVjdGl2ZWx5
LCB3aGljaCBpcyB0b28gaGlnaC4gQW5vdGhlciB3YXkgaXMgdG8gZmluZCBhbiBhcHByb3hpbWF0
ZSB0cmlwbGUgZXhjaXRhdGlvbiB1c2luZyBwZXJ0dXJiYXRpb24gdGhlb3J5LCB3aGljaCBnaXZl
cyB1cyB0aGUgQ0NTRChUKSBtZXRob2QsXGNpdGV7UG9wbGU6MTk4N3RkLCBUcnVja3M6MTk4OXZ4
LCBMZWU6MTk5MHZzfSBrbm93biBhcyB0aGUgcXVhbnR1bSBjaGVtaXN0cnkgImdvbGQgc3RhbmRh
cmQiLCB3aGljaCBzY2FsZXMgYXMgXE97bl43fS4gVGhpcyBtZXRob2QsIHdoZW4gY29tYmluZWQg
d2l0aCBhIGhpZ2ggcXVhbGl0eSBiYXNpcyBzZXQsIGdpdmVzIGhpZ2hseSBhY2N1cmF0ZSBwcmVk
aWN0aW9ucyBmb3IgdmFyaW91cyBjaGVtaWNhbCBwcm9wZXJ0aWVzLlxjaXRle1BpbmtCb29rOjIw
MDR9Cgpcc3Vic3Vic2VjdGlvbntNYW55LWJvZHkgcGVydHVyYmF0aW9uIHRoZW9yeX0KUGVydHVy
YmF0aW9uIHRoZW9yeSBpcyBhIG1ldGhvZCB0aGF0IGlzIHVzZWQgdG8gZmluZCBhbiBhcHByb3hp
bWF0ZSBzb2x1dGlvbiBvZiBhIHByb2JsZW0gdGhhdCBkb2VzIG5vdCBoYXZlIGEgYW5hbHl0aWMg
c29sdXRpb24gYnkgc3RhcnRpbmcgZnJvbSBhIHJlbGF0ZWQgc2ltcGxlciBwcm9ibGVtIHRoYXQg
aGFzIGFuIGV4YWN0IHNvbHV0aW9uLiBQZXJ0dXJiYXRpb24gdGhlb3J5IGFwcGxpZWQgdG8gcXVh
bnR1bSBtZWNoYW5pY3MgaXMga25vd24gYXMgUmF5bGVpZ2gtU2Noclwib2RpbmdlciAoUlMpIHBl
cnR1cmJhdGlvbiB0aGVvcnkuXGNpdGVwe1ZhbGVldjoyMDEzfSBJbiBnZW5lcmFsLCB3ZSB3YW50
IHRvIGZpbmQgYSBzb2x1dGlvbiBmb3IgClxiZWdpbnthbGlnbn0KXGhhdHtIfVxQc2lfe2l9ID0g
RV97aX1cUHNpX3tpfSBcbGFiZWx7ZXE6UlNlcW59ClxlbmR7YWxpZ259CmJ1dCB0aGlzIHRhc2sg
aXMgdG9vIGNvbXBsZXguIEluIHRoZSBSUyBwZXJ0dXJiYXRpb24gdGhlb3J5LCB3ZSBzcGxpdCB0
aGUgSGFtaWx0b25pYW4gaW50byB0d28gcGFydHMgClxiZWdpbnthbGlnbn0KXGhhdHtIfShcbGFt
YmRhKSA9IFxoYXR7SH1eeygwKX0gKyBcbGFtYmRhXGhhdHtIfV57KDEpfQpcZW5ke2FsaWdufQp3
aGVyZSAkXGhhdHtIfV57KDApfSQgaXMgdGhlIHBhcnQgb2YgdGhlIEhhbWlsdG9uaWFuIG9wZXJh
dG9yIHRoYXQgaGFzIHRoZSBleGFjdCBzb2x1dGlvbiBmb3IgJFxoYXR7SH1eeygwKX1cUHNpX3tp
fV57KDApfSA9IEVfe2l9XnsoMCl9XFBzaV97aX1eeygwKX0kIGFuZCAkXGhhdHtIfV57KDEpfSQg
aXMgdGhlIHBlcnR1cmJhdGl2ZSBwYXJ0IG9mIHRoZSBIYW1pbHRvbmlhbi4gVGhlIHRvdGFsIHdh
dmUgZnVuY3Rpb24gJFxQc2lfe2l9JCBhbmQgdGhlIHRvdGFsIGVuZXJneSAkRV97aX0kIGNhbiBi
ZSBleHBhbmRlZCBhcyB0aGUgaW5maW5pdGUgc2VyaWVzClxiZWdpbntzdWJlcXVhdGlvbnN9Clxi
ZWdpbnthbGlnbn0KXFBzaV97aX0gJj0gXFBzaV97aX1eeygwKX0gKyBcbGFtYmRhXFBzaV97aX1e
eygxKX0gKyBcbGFtYmRhXnsyfVxQc2lfe2l9XnsoMil9ICsgLi4uIFxsYWJlbHtlcTpSU3dmbn1c
XApFX3tpfSAmPSBFX3tpfV57KDApfSArIFxsYW1iZGEgRV97aX1eeygxKX0gKyBcbGFtYmRhXnsy
fUVfe2l9XnsoMil9ICsgLi4uIFxsYWJlbHtlcTpSU0V9ClxlbmR7YWxpZ259IApcZW5ke3N1YmVx
dWF0aW9uc30KQnkgaW5zZXJ0aW5nIFxyZWZ7ZXE6UlN3Zm59IGFuZCBccmVme2VxOlJTRX0gaW50
byBccmVme2VxOlJTZXFufSBhbmQgY29sbGVjdGluZyB0ZXJtcyB0aGF0IGhhdmUgdGhlIHNhbWUg
JFxsYW1iZGEkIGV4cG9uZW50LCB3ZSBnZXQgdGhlIGV4cHJlc3Npb24gZm9yICRcbGFtYmRhXm4k
ClxiZWdpbnthbGlnbn0KXGhhdHtIfV57KDApfVxQc2lfe2l9Xnsobil9ICsgXGhhdHtIfV57KDEp
fVxQc2lfe2l9XnsobiAtIDEpfSA9IFxzdW1fe2sgPSAwfV57bn1FX3tpfV57KGspfVxQc2lfe2l9
XnsobiAtIGspfSBcbGFiZWx7ZXE6bGFtZGFSU30KXGVuZHthbGlnbn0KV2UgY2FuIGZpbmQgJEVf
e2l9Xnsobil9JCBhbmQgJFxQc2lfe2l9Xnsobil9JCBieSBwcm9qZWN0aW9uLiAKVGhpcyBtZXRo
b2QgaGFzIGZvdW5kIGFwcGxpY2F0aW9uIGluIHF1YW50dW0gY2hlbWlzdHJ5IHRvbywgYW5kIGlz
IGtub3duIGFzIHRoZSBNb2xsZXItUGxlc3NldCBwZXJ0dXJiYXRpb24gdGhlb3J5XGNpdGV7TW9s
bGVyOjE5MzR0bX0gKE1QMiksIHdoZXJlIHRoZSB6ZXJvdGggb3JkZXIgSGFtaWx0b25pYW4gaXMg
dGhlIHN1bSBvZiB0aGUgRm9jayBvcGVyYXRvcnMgaW4gXHJlZntlcTpmb2Nrb3BlcmF0b3J9Clxi
ZWdpbnthbGlnbn0KXGhhdHtIfV57KDApfSA9IFxzdW1fe2l9XntOfVxoYXR7Rn0oaSkgPSBcc3Vt
X3tpfV57Tn0oXGhhdHtofShpKSArIFxoYXR7Sn0oaSkgLSBcaGF0e0t9KGkpKSAKXGVuZHthbGln
bn0KVGhlbiwgdGhlIGZpcnN0IG9yZGVyIEhhbWlsdG9uaWFuIGlzClxiZWdpbnthbGlnbn0KXGhh
dHtIfV57KDEpfSA9IFxoYXR7SH0gLSBcaGF0e0h9XnsoMCl9ID0gXHN1bV97aSA8IGp9XntOfVxm
cmFjezF9e3Jfe2lqfX0gLSBcc3VtX3tpfV57Tn0oXGhhdHtKfShpKSAtIFxoYXR7S30oaSkpClxl
bmR7YWxpZ259CkJ5IGVtcGxveWluZyBccmVme2VxOmxhbWRhUlN9LCB3ZSBjYW4gZmluZCB0aGF0
IApcYmVnaW57c3ViZXF1YXRpb25zfQpcYmVnaW57YWxpZ259CkVfezB9XnsoMCl9ICY9IFxicmF7
XFBzaV97MH19XGhhdHtIfV57KDApfVxrZXR7XFBzaV97MH19ID0gXHN1bV97aSA9IDF9XntOfVxl
cHNpbG9uX3tpfSBcXApFX3swfV57KDEpfSAmPSBcYnJhe1xQc2lfezB9fVxoYXR7SH1eeygxKX1c
a2V0e1xQc2lfezB9fSA9ICBcYnJhe1xQc2lfezB9fVxoYXR7SH0gLSBcaGF0e0h9XnsoMCl9XGtl
dHtcUHNpX3swfX0gPSBFX3tccm0gSEZ9IC0gRV97MH1eeygwKX0KXGVuZHthbGlnbn0KXGVuZHtz
dWJlcXVhdGlvbnN9CndoZXJlIHdlIGZpbmQgdGhhdCAkRV97XHJtIEhGfSQgaXMgdGhlIHN1bSBv
ZiB6ZXJvdGggYW5kIGZpcnN0IG9yZGVyIGNvcnJlY3Rpb25zLiBBcyB3ZSBrbm93LCB0aGUgSGFy
dHJlZS1Gb2NrIG1ldGhvZCBkb2VzIG5vdCBkZXNjcmliZSBlbGVjdHJvbiBjb3JyZWxhdGlvbjsg
dGhlcmVmb3JlLCB3ZSBuZWVkIHRvIGluY2x1ZGUgdGhlIHNlY29uZC1vcmRlciBjb3JyZWN0aW9u
IHRvIHRoZSBlbmVyZ3kuIFRoZSBmaXJzdCBvcmRlciB3YXZlIGZ1bmN0aW9uIGlzIGEgbGluZWFy
IGNvbWJpbmF0aW9uIG9mIGFsbCBleGNpdGVkIGNvbmZpZ3VyYXRpb25zLiBIb3dldmVyLCBmcm9t
IHRoZSBTbGF0ZXItQ29uZG9uIHJ1bGVzIGFuZCB0aGUgQnJpbGxvdWluIHRoZW9yZW0sXGNpdGV7
U3phYm86MTk4OXd3fSBmb3IgY2xvc2VkIHNoZWxsIHN5c3RlbXMsIG9ubHkgZG91YmxlIGV4Y2l0
ZWQgZGV0ZXJtaW5hbnRzIGNhbiBjb250cmlidXRlICRcUHNpX3tpan1ee2FifSQgdG8gdGhlIGZp
cnN0IG9yZGVyIGNvcnJlY3Rpb24gb2YgdGhlIHdhdmUgZnVuY3Rpb24KXGJlZ2lue2FsaWdufQpc
UHNpXnsoMSl9ID0gXGZyYWN7MX17NH1cc3VtX3tpamFifVRfe2FifV57aWp9XFBzaV97aWp9Xnth
Yn0gXGxhYmVse2VxOjFzdG9yZGVyd2ZufQpcZW5ke2FsaWdufQpUbyBmaW5kIHRoZSBzZWNvbmQg
b3JkZXIgY29udHJpYnV0aW9uIHRvIHRoZSBlbmVyZ3ksIHdlIGNhbiB1c2UgXHJlZntlcTpsYW1k
YVJTfSBmb3IgJFxsYW1iZGFeMSQgYW5kIHByb2plY3RpbmcgdGhlIGV4cHJlc3Npb24gd2l0aCB0
aGUgJFxicmF7XFBzaV97aWp9XnthYn19JCwgdGhlbiAKXGJlZ2lue2FsaWdufQpcYnJhe1xQc2lf
e2lqfV57YWJ9fVxoYXR7SH1eeygwKX0gLSBFXnsoMCl9XGtldHtcUHNpXnsoMSl9fSArICBcYnJh
e1xQc2lfe2lqfV57YWJ9fVxoYXR7SH1ca2V0e1xQc2leeygwKX19ID0gMApcZW5ke2FsaWdufQpC
eSBpbnNlcnRpbmcgXHJlZntlcToxc3RvcmRlcndmbn0gaW50byB0aGUgcHJldmlvdXMgZXF1YXRp
b24gYW5kIGV2YWx1YXRpbmcgdGhlIGV4cGVjdGF0aW9uIHZhbHVlIG9mIHRoZSBIYW1pbHRvbmlh
biBtYXRyaXggaW4gY2Fub25pY2FsIG9yYml0YWwgYmFzaXMsIHdlIGdldCB0aGUgc2Vjb25kIG9y
ZGVyIGNvcnJlY3Rpb24gdG8gdGhlIGVuZXJneSBhcwpcYmVnaW57YWxpZ259CkVeeygyKX0gPSBc
ZnJhY3sxfXs0fVxzdW1fe2lqYWJ9XGZyYWN7fFxCcmFrZXR7aWp8fGFifXxeezJ9fXtcZXBzaWxv
bl97aX0gKyBcZXBzaWxvbl97an0gLSBcZXBzaWxvbl97YX0gLSBcZXBzaWxvbl97Yn19XGxhYmVs
e2VxOm1wMmVuZXJneX0KXGVuZHthbGlnbn0KVGhpcyBpcyBjYWxsZWQgdGhlICRFX3tccm0gTVAy
fSQgY29ycmVsYXRpb24gZW5lcmd5LiBDb21wdXRhdGlvbmFsIGNvc3Qgb2YgdGhlIGVuZXJneSBl
dmFsdWF0aW9uIGlzIFxPe25eNH0sIGJ1dCB0aGlzIGlzIG5vdCB0aGUgbW9zdCBleHBlbnNpdmUg
cGFydC4gVGhlIG1vc3QgZXhwZW5zaXZlIHBhcnQgaXMgdGhlIHRyYW5zZm9ybWF0aW9uIG9mIHRo
ZSB0d28tZWxlY3Ryb24gaW50ZWdyYWxzIHRvICRNTyQgYmFzaXMgd2l0aCBleHBhbnNpb24gY29l
ZmZpY2llbnRzClxiZWdpbnthbGlnbn0KXGJyYWtldHtpanxhYn0gPSBcc3VtX3tcbXVccmhvXG51
XHNpZ21hfUNfe1xtdSBpfUNfe1xyaG8gan1DX3tcbnUgYX1DX3tcc2lnbWEgYn1cYnJha2V0e1xt
dVxyaG98XG51XHNpZ21hfQpcZW5ke2FsaWdufQp3aGljaCBjYW4gYmUgZmFjdG9yaXplZCBzdWNo
IHRoYXQgb25seSBvbmUgaW5kZXggaXMgdHJhbnNmb3JtZWQgYXQgYSB0aW1lLiBUaGlzIGxlYWRz
IHRvIHRoZSBcT3tuXjV9IGNvbXB1dGF0aW9uYWwgY29zdC4gTVAyIGNhbiBiZSBmdXJ0aGVyIGlt
cHJvdmVkLiBJdCBvdmVyZXN0aW1hdGVzIHRoZSBlbmVyZ3kgY29udHJpYnV0aW9ucyBmb3IgdGhl
IHVucGFpcmVkIGVsZWN0cm9ucywgd2hpbGUgdGhlIGVuZXJneSBvZiBzcGluLXBhaXJlZCBlbGVj
dHJvbnMgaXMgdW5kZXJlc3RpbWF0ZWQuIFRoaXMgY2FuIGJlIGZpeGVkIGJ5IGEgc2ltcGxlIHJl
LXNjYWxpbmcgb2YgdGhlc2UgdHdvIGNvbnRyaWJ1dGlvbnMgd2hpbGUga2VlcGluZyB0b3RhbCBl
bmVyZ3kgY29uc3RhbnQuIFRoaXMgaW1wcm92ZWQgbWV0aG9kIGlzIGNhbGxlZCB0aGUgc3Bpbi1j
b21wb25lbnQtc2NhbGVkIChTQ1MpLU1QMiBtZXRob2QuXGNpdGV7R3JpbW1lOjIwMDN2YX0KVGhp
cyBtZXRob2Qgb3V0cGVyZm9ybXMgc3RhbmRhcmQgTVAyLCBCM0xZUCwgUUNJU0QgYW5kIGluIHNv
bWUgY2FzZXMgUUNJU0QoVCkuXGNpdGV7R3JpbW1lOjIwMDN2YX0KIApcc3Vic2VjdGlvbntFeHBs
aWNpdGx5IENvcnJlbGF0ZWQgTWV0aG9kc30KXHN1YnN1YnNlY3Rpb257TW90aXZhdGlvbn0KSW4g
b3JkZXIgdG8gYWNoaWV2ZSBoaWdoIGFjY3VyYWN5IHdpdGggbWV0aG9kcyBkaXNjdXNzZWQgaW4g
cHJldmlvdXMgc3Vic2VjdGlvbnMsIG9uZSBuZWVkcyB0byBlbXBsb3kgZXh0cmVtZWx5IGxhcmdl
IGJhc2lzIHNldHMgd2hpY2ggYXJlIHVzdWFsbHkgb24gdGhlIG9yZGVyIG9mIHNleHR1cGxlICRc
emV0YSQuIFN1Y2ggaGlnaCBxdWFsaXR5IGJhc2lzIHNldHMgdXNlZCwgZm9yIGV4YW1wbGUsIHdp
dGggY291cGxlZCBjbHVzdGVyIG1ldGhvZG9sb2d5LCBjYW4gb25seSBiZSBhcHBsaWVkIHRvIHNt
YWxsIG1vbGVjdWxlcyB3aXRoIGEgZmV3IGF0b21zLiBUaGUgbWFpbiByZWFzb24gZm9yIHRoaXMg
aXMgdGhhdCB0aGUgU2xhdGVyIGRldGVybWluYW50IGlzIGNvbnN0cnVjdGVkIGZyb20gb25lLWVs
ZWN0cm9uIHdhdmVmdW5jdGlvbnMuIEluIG90aGVyIHdvcmRzLCBpdCBmYWlscyB0byBkZXNjcmli
ZSB0aGUgd2F2ZSBmdW5jdGlvbiBwcm9wZXJseSB3aGVuIGVsZWN0cm9ucyBhcmUgY2xvc2UgdG8g
ZWFjaCBvdGhlci4gU3VjaCBhIGNvbnN0cnVjdGVkIHdhdmUgZnVuY3Rpb24gaGFzIHRoZSBmaXJz
dCBkZXJpdmF0aXZlIGVxdWFsIHRvIHplcm8gd2hlbiB0aGUgZGlzdGFuY2UgYmV0d2VlbiBlbGVj
dHJvbnMgaXMgemVybwpcYmVnaW57YWxpZ259ClxsZWZ0LlxkcGR7XFBzaShcbWF0aGJme3J9X3sx
fSxcbWF0aGJme3J9X3syfSwuLi4pfXtyX3sxMn19XHJpZ2h0XHZlcnRfe3JfezEyfSA9IDB9ID0g
MApcZW5ke2FsaWdufQpIb3dldmVyLCB0aGUgdHJ1ZSBuYXR1cmUgb2YgdGhlIGZpcnN0IGRlcml2
YXRpdmUgb2YgdGhlIHdhdmUgZnVuY3Rpb24gd2hlbiB0d28gZWxlY3Ryb25zIGNvbWUgY2xvc2Ug
dG8gZWFjaCBvdGhlciAoY29hbGVzY2VuY2UgcG9pbnQpIGlzIApcYmVnaW57YWxpZ259ClxsZWZ0
LlxkcGR7XFBzaShcbWF0aGJme3J9X3sxfSxcbWF0aGJme3J9X3syfSwuLi4pfXtyX3sxMn19XHJp
Z2h0XHZlcnRfe3JfezEyfSA9IDB9ID0gXGZyYWN7MX17Mn1cUHNpKHJfezEyfSA9IDApXGxhYmVs
e2VxOmRlcml2YXRpdmVQc2l9ClxlbmR7YWxpZ259CkthdG8gc3VnZ2VzdGVkIHRoYXQgZXh0cmEg
dGVybXMgaGF2ZSB0byBiZSBpbmNsdWRlZCBpbiB0aGUgd2F2ZSBmdW5jdGlvbi5cY2l0ZXtLYXRv
OjE5NTd3aywgVmFsZWV2OjIwMTN9IFRoZSBleGFjdCB3YXZlIGZ1bmN0aW9uIGFwcHJveGltYXRp
b24gbmVhciB0aGUgY29hbGVzY2VuY2UgcG9pbnQgaXMgYXMgZm9sbG93cyAKXGJlZ2lue2FsaWdu
fQpcUHNpX3tleGFjdH0oXG1hdGhiZntyfV97MX0sLi4uXG1hdGhiZntyfV97aX0uLi5cbWF0aGJm
e3J9X3tqfS4uLlxtYXRoYmZ7cn1fe059KSBcYXBwcm94IFxQc2koLi4uXG1hdGhiZntSfV97aWp9
LC4uLilccGhpKFxtYXRoYmZ7cn1fe2lqfSkuClxlbmR7YWxpZ259CndoZXJlICRcbWF0aGJme1J9
X3tpan0gPSBcZnJhY3tcbWF0aGJme3J9X3tpfSArIFxtYXRoYmZ7cn1fe2p9fXsyfSQgYW5kICRc
bWF0aGJme3J9X3tpan0gPSBcbWF0aGJme3J9X3tpfSAtIFxtYXRoYmZ7cn1fe2p9JC4gV2UgbmVl
ZCB0byBmaW5kIHRoZSBkaWZmZXJlbnRpYWwgZXF1YXRpb24gdGhhdCBzYXRpc2ZpZXMgJFxwaGko
XG1hdGhiZntyfV97aWp9KSQuClRoZSBTY2hyXCJvZGluZ2VyIGVxdWF0aW9uIGZvciBhIHR3by1l
bGVjdHJvbiBzeXN0ZW0gaXMgdGhlbjoKXGJlZ2lue2FsaWdufQooLVxmcmFjezF9ezJ9XG5hYmxh
X3tpfV57Mn0gLSBcZnJhY3sxfXsyfVxuYWJsYV97an1eezJ9ICsgXGZyYWN7MX17cl97aWp9fSlc
UHNpX3tleGFjdH0gPSBFX3tleGFjdH1cUHNpX3tleGFjdH0KXGVuZHthbGlnbn0Kd2hlcmUgJFxw
aGkoXG1hdGhiZntyfV97aWp9KSQgY2FuIGJlIHJld3JpdHRlbiBhcyBwcm9kdWN0IG9mIHRoZSBy
YWRpYWwgYW5kIGFuZ3VsYXIgcGFydHMgYXMKXGJlZ2lue2FsaWdufQpccGhpKFxtYXRoYmZ7cn1f
e2lqfSkgPSBSKHJfe2lqfSlZX3tsbX0oXE9tZWdhX3tpan0pClxlbmR7YWxpZ259ClRoZSBkaWZm
ZXJlbnRpYWwgZXF1YXRpb24gZm9yIHRoZSByYWRpYWwgcGFydCBpbiBzcGhlcmljYWwgcG9sYXIg
Y29vcmRpbmF0ZXMgaGFzIHRoZSBmb3JtClxiZWdpbnthbGlnbn0KXGxlZnQoLVxmcmFjezF9ezJy
X3tpan1eezJ9fVxkcGR7fXtyX3tpan19cl97aWp9XnsyfVxkcGR7fXtyX3tpan19ICsgXGZyYWN7
bChsICsgMSl9ezJyX3tpan1eezJ9fSArIFxmcmFjezF9e3Jfe2lqfX0gKyBPKHJfe2lqfV57MH0p
XHJpZ2h0KVIocl97aWp9KSA9IDAgXGxhYmVse2VxOmN1c3BkaWZmZXF9ClxlbmR7YWxpZ259Cndo
ZXJlICRsJCBpcyB0aGUgYW5ndWxhciBtb21lbnR1bSBxdWFudHVtIG51bWJlciwgYW5kICRPKHJf
e2lqfV57MH0pJCBpcyB0aGUgY29uc3RhbnQgaW5kZXBlbmRlbnQgb2YgJHJfe2lqfSQuCiRSKHJf
e2lqfSkkIGNhbiBiZSBleHBhbmRlZCBhcyBUYXlsb3Igc2VyaWVzIG9mICRyX3tpan0kIGFzIApc
YmVnaW57YWxpZ259ClIocl97aWp9KSA9IFxzdW1fe2sgPSAwfV57XGluZnR5fWNfe2t9cl97aWp9
XntrfVxsYWJlbHtlcTpyYWRpYWxpamV4cGFuc2lvbn0KXGVuZHthbGlnbn0Kd2hlcmUgcGFyYW1l
dGVycyAkY197a30kIG5lZWQgdG8gYmUgZGV0ZXJtaW5lZC4gQnkgaW5zZXJ0aW5nIHRoZSBsYXN0
IGV4cHJlc3Npb24gaW50byBccmVme2VxOmN1c3BkaWZmZXF9IHdpdGggJGwgPSAwJCwgd2UgZmlu
ZCB0aGUgc2luZ2xldCBjdXNwIGNvbmRpdGlvbiBhbmQgdGhlIGV4YWN0IHdhdmUgZnVuY3Rpb24g
aXMgYXMgZm9sbG93cwpcYmVnaW57YWxpZ259ClxQc2lfe2V4YWN0fShcbWF0aGJme3J9X3sxfSwg
XG1hdGhiZntyfV97Mn0sLi4uXG1hdGhiZntyfV97Tn0pIFxhcHByb3ggXGxlZnQoMSArIFxmcmFj
ezF9ezJ9cl97aWp9ICsgTyhyX3tpan1eezJ9KVxyaWdodClcUHNpKC4uLixcbWF0aGJme1J9X3tp
an0sLi4uKQpcZW5ke2FsaWdufQpUaGUgb2J0YWluZWQgZnVuY3Rpb24gc2F0aXNmaWVzIFxyZWZ7
ZXE6ZGVyaXZhdGl2ZVBzaX0uIFRoZSB0cmlwbGV0IGN1c3AgY29uZGl0aW9uIGNhbiBiZSBmb3Vu
ZCB1c2luZyB0aGUgc2FtZSBhbmFsb2d5IHdoZW4gJGwgPSAxJC5cY2l0ZXtLb25nOjIwMTF0a30g
SGVyZSwgd2Ugc2hvdyB0aGF0IGluIG9yZGVyIHRvIHByb3Blcmx5IGRlc2NyaWJlIHRoZSB3YXZl
IGZ1bmN0aW9uIHdoZW4gdHdvIGVsZWN0cm9ucyBhcmUgY2xvc2UsIHdlIG5lZWQgdG8gZXhwbGlj
aXRseSBpbmNsdWRlIHRoZSAkcl97MTJ9JCBjb250cmlidXRpb24gdG8gdGhlIHdhdmUgZnVuY3Rp
b24uIFxyZWZ7ZmlnOkhlbGl1bSBncm91bmQgc3RhdGUgd2F2ZSBmdW5jdGlvbn0gZnJvbSBwcmV2
aW91cyBzZWN0aW9uIHNob3dzIHRoZSBwbG90IG9mIHRoZSBleGFjdCB3YXZlIGZ1bmN0aW9uIGZv
ciB0aGUgaGVsaXVtIGF0b20gYW5kIGNvbnZlcmdlbmNlIG9mIHRoZSBDSSB3YXZlIGZ1bmN0aW9u
IGNhbGN1bGF0ZWQgYnkgZGlmZmVyZW50IHNpemVzIG9mIGJhc2lzIHNldHMgd2hlcmUgdGhlIHNp
emUgb2YgYmFzaXMgc2V0IGlzIGRlZmluZWQgYnkgTi4gClRoZSBIYXJ0cmVlLUZvY2sgd2F2ZSBm
dW5jdGlvbiBpcyBhIHN0cmFpZ2h0IGxpbmUsIHdoaWNoIG1lYW5zIHRoYXQgdGhlIHBvc2l0aW9u
cyBvZiBib3RoIGVsZWN0cm9ucyBhcmUgaW5kZXBlbmRlbnQgb2YgZWFjaCBhbm90aGVyLiBUaGUg
ZXhhY3Qgd2F2ZSBmdW5jdGlvbiAoY3VzcCBpbmNsdWRlZCkgZGVzY3JpYmVzIHRoZSBlbGVjdHJv
biBpbnRlcmFjdGlvbiBuZWFyIHRoZSBjb2FsZXNjZW5jZSBwb2ludCBwcm9wZXJseS4gQW4gaW50
ZXJlc3RpbmcgcmVzdWx0IGlzIG9idGFpbmVkIHdpdGggQ0k7IGJ5IGluY3JlYXNpbmcgdGhlIHNp
emUgb2YgdGhlIGJhc2lzIHNldCwgd2UgYXBwcm9hY2ggdGhlIGJhc2lzIHNldCBsaW1pdCwgYnV0
IGV4dHJlbWVseSBzbG93bHkgYXMgY2FuIGJlIHNlZW4gZnJvbSB0aGUgcGxvdC4gQWxzbywgc3Vj
aCBhIHdhdmVmdW5jdGlvbiBkb2VzIG5vdCBzYXRpc2Z5IFxyZWZ7ZXE6ZGVyaXZhdGl2ZVBzaX0u
IEl0IGlzIG9idmlvdXMgdGhhdCBpbiBvcmRlciB0byBpbXByb3ZlIGNvbnZlcmdlbmNlIG9mIHRo
ZSBtZXRob2QgdG8gYSBiYXNpcyBzZXQgbGltaXQsIG9uZSBuZWVkcyB0byBpbmNsdWRlIHRoZSBj
dXNwIGNvbmRpdGlvbi4gSW4gdGhlIG5leHQgc3Vic2VjdGlvbiwgd2UgZGVzY3JpYmUgZXhwbGlj
aXRseSBjb3JyZWxhdGVkIE1QMiBhbmQgQ0MgbWV0aG9kcy4gICAKClxzdWJzdWJzZWN0aW9ue0V4
cGxpY2l0bHkgQ29ycmVsYXRlZCBNb2xsZXItUGxlc3NldCBtZXRob2RzfQpUaGUgc3RhbmRhcmQg
Zmlyc3Qgb3JkZXIgTVAxIHdhdmUgZnVuY3Rpb24gaXMgZ2l2ZW4gYnkgXHJlZntlcToxc3RvcmRl
cndmbn0uIFdlIGNhbiBleHRlbmQgdGhpcyB0byBNUDEtUjEyXGNpdGV7S29uZzoyMDExdGssIEhh
dHRpZzoyMDExdmV9IGJ5IGluY2x1ZGluZyBleHBsaWNpdGx5IGNvcnJlbGF0ZWQgZnVuY3Rpb25z
IGFzClxiZWdpbnthbGlnbn0KXGtldHtcUHNpX3tccm0gTVAgLSBSMTJ9XnsoMSl9fSA9IFxrZXR7
XFBzaV97XHJtIE1QfV57KDEpfX0gKyBcc3VtX3tcc3Vic3RhY2t7aSA8IGogXFwgeCA8IHl9fXRf
e3h5fV57aWp9XGtldHtee3h5fV97aWp9fQpcZW5ke2FsaWdufQp3aGVyZSBleHBsaWNpdGx5IGNv
cnJlbGF0ZWQgZnVuY3Rpb25zIGFyZSBkZWZpbmVkIGFzClxiZWdpbnthbGlnbn0KXGtldHtfe2lq
fV57eHl9fSA9IFxmcmFjezF9ezJ9XGJhcntSfV97XGFscGhhXGJldGF9Xnt4eX1cdGlsZGV7YX1f
e2lqfV57XGFscGhhXGJldGF9XGtldHtcUHNpXnsoMCl9fQpcZW5ke2FsaWdufQp3aXRoICRcdGls
ZGV7YX1fe2lqfV57XGFscGhhXGJldGF9JCBhcyBhIGRvdWJsZSBleGNpdGF0aW9uIG9wZXJhdG9y
IHRoYXQgZXhjaXRlcyB0d28gZWxlY3Ryb25zIGZyb20gdGhlIG9jY3VwaWVkIGFjdGl2ZSBvcmJp
dGFscyAkaSxqJCB0byBhbnkgdmlydHVhbCBvcmJpdGFscyAkXGFscGhhLFxiZXRhJC4KSGVyZSAk
XGJhcntSfV97XGFscGhhXGJldGF9Xnt4eX0kIGlzIGFuIGFudGlzeW1tZXRyaXplZCBtb2xlY3Vs
YXIgaW50ZWdyYWwgb2YgdGhlIGNvcnJlbGF0aW9uIGZhY3RvciB3aGVyZSAkUl97XGFscGhhXGJl
dGF9Xnt4eX0kIGlzIGRlZmluZWQgYXMKXGJlZ2lue2FsaWdufQpSX3tcYWxwaGFcYmV0YX1ee3h5
fSA9IFxicmF7XGFscGhhXGJldGF9XGhhdHtRfV97MTJ9ZihyX3sxMn0pXGtldHt4eX0KXGVuZHth
bGlnbn0Kd2hlcmUgdGhlIHByb2plY3Rpb24gb3BlcmF0b3IgJFxoYXR7UX1fezEyfSQgZW5zdXJl
cyBvcnRob2dvbmFsaXR5IHRvIGFueSBzaW5nbGUgZXhjaXRhdGlvbi4gVGhlcmUgYXJlIG1hbnkg
ZGlmZmVyZW50IHdheXMgdG8gZGVmaW5lIHRoZSBwcm9qZWN0aW9uIG9wZXJhdG9yOyBob3dldmVy
LCB0aGUgc3RhbmRhcmQgYXBwcm9hY2ggaW4gdXNlIHdhcyBwcm9wb3NlZCBieSBWYWxlZXZcY2l0
ZXtWYWxlZXY6MjAwNHZvfQpcYmVnaW57YWxpZ259ClxoYXR7UX1fezEyfSA9ICgxIC0gXGhhdHtP
fV97MX0pKDEgLSBcaGF0e099X3syfSkgLSBcaGF0e1ZfezF9fVxoYXR7Vl97Mn19ClxlbmR7YWxp
Z259ClRoZSBNUDIgZW5lcmd5IHdpdGggdGhlIFIxMiBjb3JyZWN0aW9uIGNhbiBiZSBvYnRhaW5l
ZCBieSBtaW5pbWl6aW5nIHRoZSBIeWxsZXJhYXMgZnVuY3Rpb25hbCBnaXZlbiBhcwpcYmVnaW57
YWxpZ259CkheeygyKX0oXFBzaV57KDEpfSkgPSBcYnJhe1xQc2leeygxKX19XGhhdHtIfV57KDAp
fSAtIEVeeygwKX1ca2V0e1xQc2leeygxKX19ICsgMlxicmF7XFBzaV57KDEpfX1caGF0e0h9Xnso
MSl9XGtldHtcUHNpXnsoMCl9fQpcZW5ke2FsaWdufQp3aGVyZSAkXFBzaV57KDEpfSQgaXMgYSBm
dW5jdGlvbiB3aXRoIHRoZSBleHBsaWNpdCBjb3JyZWxhdGlvbiBmdW5jdGlvbiBpbmNsdWRlZC4g
SGVyZSwgd2Ugc2tpcCBzZXZlcmFsIHN0ZXBzIGFuZCB3cml0ZSB0aGUgZmluYWwgZW5lcmd5IGV4
cHJlc3Npb24gYXMgdGhlIHN1bSBvZiBNUDIgYW5kIFIxMiBjb250cmlidXRpb25zClxiZWdpbnth
bGlnbn0KRV97XHJtIE1QIC0gUjEyfV57KDIpfSA9IEVfe1xybSBNUDJ9XnsoMil9ICsgRV97XHJt
IFIxMn1eeygyKX0KXGVuZHthbGlnbn0KU3VjaCBtZXRob2QgY29udmVyZ2VzIHNpZ25pZmljYW50
bHkgZmFzdGVyIHRvIGEgYmFzaXMgc2V0IGxpbWl0IHRoYW4gdGhlIHN0YW5kYXJkIE1QMiBtZXRo
b2QuIAoKXHN1YnN1YnNlY3Rpb257RXhwbGljaXRseSBDb3JyZWxhdGVkIENvdXBsZWQgQ2x1c3Rl
ciBtZXRob2RzfQpUaGUgZXhwbGljaXRseSBjb3JyZWxhdGVkIHRoZW9yeSBjYW4gYmUgYXBwbGll
ZCB0byB0aGUgY291cGxlZCBjbHVzdGVyIGVxdWF0aW9ucy5cY2l0ZXtOb2dhOjE5OTJ2eCxOb2dh
OjE5OTR2aX0gSGVyZSB3ZSB3aWxsIGRlc2NyaWJlIHRoZSBSMTIgY29ycmVjdGlvbiB0byBDQ1NE
IG1ldGhvZC4gVGhlIHN0YW5kYXJkIENDU0Qgd2F2ZSBmdW5jdGlvbiBtZXRob2QgaXMgZGVmaW5l
ZCBieSBccmVme2VxOkNDU0R3Zm59LiBJbiBDQ1NELVIxMiB0aGVvcnksIHdlIGluY2x1ZGUgYW4g
ZXh0cmEgdGVybSAKXGJlZ2lue2FsaWdufQpca2V0e1xQc2lfe1xybSBDQ1NELVIxMn19ID0gXGV4
cChcaGF0e1R9X3sxfSArIFxoYXR7VH1fezJ9ICsgXGhhdHtSfSlca2V0e1xQc2lfezB9fVxsYWJl
bHtlcTpDQ1NELVIxMndmbn0KXGVuZHthbGlnbn0Kd2hlcmUgJFxoYXR7Un0kIGlzIHRoZSBnZW1p
bmFsIG9wZXJhdG9yIGRlZmluZWQgYXMKXGJlZ2lue2FsaWdufQpcaGF0e1J9ID0gXGZyYWN7MX17
KDIhKV4zfXRfe3h5fV57aWp9XGJhcntSfV97XGFscGhhXGJldGF9Xnt4eX1cdGlsZGV7YX1fe2lq
fV57XGFscGhhXGJldGF9ClxlbmR7YWxpZ259IAp3aXRoIHRoZSBleGNpdGF0aW9uIG9wZXJhdG9y
ICRcdGlsZGV7YX1fe2lqfV57XGFscGhhXGJldGF9JC5cY2l0ZXtLb25nOjIwMTF0a30gVGhlIEND
U0QgY29ycmVsYXRpb24gZW5lcmd5IHdpdGggdGhlIFIxMiBjb250cmlidXRpb24gY2FuIGJlIG9i
dGFpbmVkIGJ5IHByb2plY3Rpb24gd2l0aCB0aGUgcmVmZXJlbmNlIHdhdmUgZnVuY3Rpb24gb24g
dGhlIGxlZnQgYXMgd2FzIGV4cGxhaW5lZCBpbiBccmVme0NDU0Rjb3JyfS4gU3VjaCBhIGZvcm11
bGF0ZWQgbWV0aG9kIGlzIGV4dHJlbWVseSBjb21wbGV4IGZvciBpbXBsZW1lbnRhdGlvbiBhbmQg
aXQgaXMgbm90IHByYWN0aWNhbCBmb3IgY29tbW9uIHVzZTsgdGhlcmVmb3JlLCBtYW55IGFwcHJv
eGltYXRlZCBDQ1NELVIxMiBhcHByb2FjaGVzIGhhdmUgYmVlbiBwcm9wb3NlZC4gVGhlIGFwcHJv
eGltYXRlIENDLVIxMiBtZXRob2RzIGNhbiBiZSBkaXZpZGVkIGluIHR3byBncm91cHM6IChhKSBp
dGVyYXRpdmUsIGFuZCAoYikgbm9uLWl0ZXJhdGl2ZSB0aGF0IHRyZWF0cyBnZW1pbmFsIHRlcm1z
IHBlcnR1cmJhdGl2ZWx5LlxjaXRle0tvbmc6MjAxMXRrfSAKICAKClxzZWN0aW9ue1JlZHVjZWQg
Q29tcHV0YXRpb25hbCBDb21wbGV4aXR5IGluIEVsZWN0cm9uIENvcnJlbGF0aW9uIE1ldGhvZHN9
CkluIHRoZSBwcmV2aW91cyBzZWN0aW9uLCB3ZSBoYXZlIGludHJvZHVjZWQgbWFueSBtZXRob2Rz
IHRoYXQgYXJlIHVzZWQgdG8gY2FsY3VsYXRlIGVsZWN0cm9uIGNvcnJlbGF0aW9uLiBIb3dldmVy
LCBhbGwgdGhlc2UgbWV0aG9kcyBoYXZlIHBvb3IgY29tcHV0YXRpb25hbCBzY2FsaW5nIHdpdGgg
dGhlIHN5c3RlbSBzaXplLCB3aGljaCBpcyB0aGUgbWFpbiBvYnN0YWNsZSB0byBhcHBseWluZyB0
aGVtIHRvIGxhcmdlIG1vbGVjdWxlcyBvciBpbnRlcmVzdGluZyBjaGVtaXN0cnkgcGhlbm9tZW5h
LiBJbiBvcmRlciB0byBtYWtlIHRoZXNlIG1ldGhvZHMgcHJhY3RpY2FsIGFuZCBhcHBsaWNhYmxl
IHRvIGxhcmdlciBtb2xlY3VsYXIgc3lzdGVtcywgd2UgbmVlZCB0byBpbnRyb2R1Y2UgcmVsZXZh
bnQgYXBwcm94aW1hdGlvbnMuIFRoZSB1bHRpbWF0ZSBnb2FsIGluIGVsZWN0cm9uaWMgc3RydWN0
dXJlIGNhbGN1bGF0aW9uIGlzIHRoZSByZWR1Y3Rpb24gb2YgY29tcHV0YXRpb24gc3VjaCB0aGF0
IGNhbGN1bGF0aW9uIHRpbWUgc2NhbGVzIGxpbmVhcmx5IHdpdGggdGhlIHN5c3RlbSBzaXplLiBJ
biB0aGlzIGNoYXB0ZXIsIHdlIHByZXNlbnQgYW4gb3ZlcnZpZXcgb2YgdGhlIHByb2NlZHVyZXMg
dGhhdCBhcmUgaW50ZW5zaXZlbHkgdXNlZCB0byByZWR1Y2UgY29tcHV0YXRpb24gdGltZS4KClxz
dWJzZWN0aW9ue0RlbnNpdHkgRml0dGluZ30KVGhlIERlbnNpdHkgRml0dGluZyBtZXRob2QgKERG
KSBpcyBhIHRlY2huaXF1ZSB0aGF0IGV4cHJlc3NlcyBmb3VyLWluZGV4IGludGVncmFscyBhcyBh
IHRocmVlLWluZGV4IGludGVncmFscy5cY2l0ZXtXZXJuZXI6MjAwM3dofSBUaGUgdHdvLWVsZWN0
cm9uIGludGVncmFscyBjYW4gYmUgdGhvdWdodCBvZiBhcyB0aGUgcmVwdWxzaW9uIGJldHdlZW4g
ZWxlY3Ryb24gZGVuc2l0aWVzClxiZWdpbnthbGlnbn0KXGJyYWtldHtwcnxxc30gPSAocHF8cnMp
ID0gXGludFxwaGlfe3B9KFxtYXRoYmZ7cn1fezF9KVxwaGlfe3F9KFxtYXRoYmZ7cn1fezF9KVxm
cmFjezF9e3JfezEyfX1ccGhpX3tyfShcbWF0aGJme3J9X3syfSlccGhpX3tzfShcbWF0aGJme3J9
X3syfSlkXG1hdGhiZntyfV97MX1kXG1hdGhiZntyfV97Mn0gPSBcaW50XHJob197cHF9KFxtYXRo
YmZ7cn1fezF9KVxmcmFjezF9e3JfezEyfX1ccmhvX3tyc30oXG1hdGhiZntyfV97Mn0pZFxtYXRo
YmZ7cn1fezF9ZFxtYXRoYmZ7cn1fezJ9LgpcZW5ke2FsaWdufQpUaGUgYXBwcm94aW1hdGVkIGRl
bnNpdHkgY2FuIGJlIGV4cHJlc3NlZCBhcwpcYmVnaW57YWxpZ259ClxiYXJ7XHJob31fe3BxfShc
bWF0aGJme3J9KSA9IFxzdW1fe1B9XntOX3tmaXR9fWRfe1B9XntwcX1cY2hpX3tQfShcbWF0aGJm
e3J9KQpcZW5ke2FsaWdufQp3aGVyZSAkXGNoaV97UH0oXG1hdGhiZntyfSkkIGlzIGFuIGF1eGls
aWFyeSBiYXNpcyBzZXQgd2l0aCAkZF97UH1ee3BxfSQgZml0dGluZyBjb2VmZmljaWVudHMuIEJ5
IG1pbmltaXppbmcgdGhlIGZvbGxvd2luZyBleHByZXNzaW9uClxiZWdpbnthbGlnbn0KXERlbHRh
X3twcX0gPSBcaW50W1xyaG9fe3BxfShcbWF0aGJme3J9X3sxfSkgLSBcYmFye1xyaG99X3twcX0o
XG1hdGhiZntyfV97MX0pXVxmcmFjezF9e3JfezEyfX1bXHJob197cnN9KFxtYXRoYmZ7cn1fezJ9
KSAtIFxiYXJ7XHJob31fe3JzfShcbWF0aGJme3J9X3syfSldZFxtYXRoYmZ7cn1fezF9ZFxtYXRo
YmZ7cn1fezJ9XGxhYmVse2VxOkRGbWlufQpcZW5ke2FsaWdufQp3ZSBmaW5kIGZpdHRpbmcgY29l
ZmZpY2llbnRzIGFzClxiZWdpbnthbGlnbn0KZF97UH1ee3BxfSA9IFxzdW1fe1B9KHBxfFApW1xt
YXRoYmZ7Sn1eey0xfV1fe1BRfQpcZW5ke2FsaWdufSAKd2hlcmUgClxiZWdpbnthbGlnbn0KKHBx
fFApID0gXGludFxwaGlfe3B9KFxtYXRoYmZ7cn1fezF9KVxwaGlfe3F9KFxtYXRoYmZ7cn1fezF9
KVxmcmFjezF9e3JfezEyfX1cY2hpX3tQfShcbWF0aGJme3J9X3syfSlkXG1hdGhiZntyfV97MX1k
XG1hdGhiZntyfV97Mn1cXApKX3tQUX0gPSBcaW50XGNoaV97UH0oXG1hdGhiZntyfV97MX0pXGZy
YWN7MX17cl97MTJ9fVxjaGlfe1F9KFxtYXRoYmZ7cn1fezJ9KWRcbWF0aGJme3J9X3sxfWRcbWF0
aGJme3J9X3syfQpcZW5ke2FsaWdufQp0aGVyZWZvcmUsIG91ciBmb3VyLWluZGV4IGludGVncmFs
cyBhcmUgClxiZWdpbnthbGlnbn0KKHBxfHJzKSA9IFxpbnRccmhvX3twcX0oXG1hdGhiZntyfV97
MX0pXGZyYWN7MX17cl97MTJ9fVxyaG9fe3JzfShcbWF0aGJme3J9X3syfSlkXG1hdGhiZntyfV97
MX1kXG1hdGhiZntyfV97Mn0gPSBcc3VtX3tRfWRfe1F9XntwcX0oUXxycykgPSBcc3VtX3tQUX0o
cHF8UClbXG1hdGhiZntKfV57LTF9XV97UFF9KFF8cnMpLlxsYWJlbHtlcTpERn0KXGVuZHthbGln
bn0KTWF0cml4ICRcbWF0aGJme0p9XnstMX0kIGNhbiBiZSB3cml0dGVuIGFzIHRoZSBwcm9kdWN0
ICRcbWF0aGJme0p9XnstMS8yfVxtYXRoYmZ7Sn1eey0xLzJ9JCwgdGh1cyBccmVme2VxOkRGfSBj
YW4gYmUgZmFjdG9yaXplZCwgd2hpY2ggbGVhZHMgdG8gYmV0dGVyIGNvbXB1dGF0aW9uYWwgcGVy
Zm9ybWFuY2UuIFdlIGhhdmUgbWluaW1pemVkIFxyZWZ7ZXE6REZtaW59IG92ZXIgdGhlIENvdWxv
bWIgb3BlcmF0b3IgJGcocl97MX0sIHJfezJ9KSA9IFxmcmFjezF9e3JfezEyfX0kLiBGaXR0aW5n
IGNvZWZmaWNpZW50cyBkZWNheSBzbG93bHkgaW4gdGhlIENvdWxvbWIgbWV0cmljOyB0aGVyZWZv
cmUsIGRpZmZlcmVudCBtZXRyaWNzIGhhdmUgYmVlbiBwcm9wb3NlZC5cY2l0ZXtKb2huc29uOjE5
OTJ1dH0gRGVuc2l0eSBmaXR0aW5nIGhhcyBiZWVuIHN1Y2Nlc3NmdWxseSBhcHBsaWVkIGluIGFw
cHJveGltYXRpbmcgaW50ZWdyYWxzIGluIGV4cGxpY2l0bHkgY29ycmVsYXRlZCB0aGVvcnkuXGNp
dGV7TWFuYnk6MjAwM3ZtfQogICAKXHN1YnNlY3Rpb257TGFwbGFjZSBUcmFuc2Zvcm1hdGlvbn0K
VGhlIGJvdHRsZW5lY2sgb2YgQ29ycmVsYXRpb24gbWV0aG9kcyBpcyB0cmFuc2Zvcm1hdGlvbiBv
ZiB0d28tZWxlY3Ryb24gaW50ZWdyYWxzIGZvcm0gJEFPJCB0byAkTU8kIGJhc2lzIHdpdGggdGhl
IGNvbXB1dGF0aW9uYWwgY29tcGxleGl0eSBcT3tuXjV9LiBUaGlzIHN0ZXAgY2FuIGJlIGF2b2lk
ZWQgYnkgdXNpbmcgdGhlIExhcGxhY2UgdHJhbnNmb3JtYXRpb24uXGNpdGV7QWxtbG9mOjE5OTF3
cX0gVGhlIGRlbm9taW5hdG9yIGluIHRoZSBlbmVyZ3kgZXhwcmVzc2lvbiBpbiBccmVme2VxOm1w
MmVuZXJneX0gY2FuIGJlIHJld3JpdHRlbiB1c2luZyB0aGUgTGFwbGFjZSB0cmFuc2Zvcm1hdGlv
biAKXGJlZ2lue2FsaWdufQpcZnJhY3sxfXtcZXBzaWxvbl97aX0gKyBcZXBzaWxvbl97an0gLSBc
ZXBzaWxvbl97YX0gLSBcZXBzaWxvbl97Yn19ID0gXGludF97MH1ee1xpbmZ0eX1leHBbLShcZXBz
aWxvbl97aX0gKyBcZXBzaWxvbl97an0gLSBcZXBzaWxvbl97YX0gLSBcZXBzaWxvbl97Yn0pXWR0
ClxlbmR7YWxpZ259ClRoZW4sIHRoZSBzZWNvbmQgb3JkZXIgZW5lcmd5IGNvcnJlY3Rpb24gaXMK
XGJlZ2lue2FsaWdufQpFXnsoMil9ID0gXGZyYWN7MX17NH1caW50X3swfV57XGluZnR5fWR0XHN1
bV97aWphYn1cYnJhe2lqfVxrZXR7YWJ9XnsyfWV4cFstKFxlcHNpbG9uX3tpfSArIFxlcHNpbG9u
X3tqfSAtIFxlcHNpbG9uX3thfSAtIFxlcHNpbG9uX3tifSldClxlbmR7YWxpZ259ClRoaXMgY2Fu
IHRha2UgYSBmaW5hbCBmb3JtIHdoZXJlIG9yYml0YWxzIGJlY29tZSAkdCQtZGVwZW5kZW50IHdo
aWNoIGxlYWRzIHRvClxiZWdpbnthbGlnbn0KRV57KDIpfSA9IFxmcmFjezF9ezR9XGludF97MH1e
e1xpbmZ0eX1kdFxzdW1fe2lqYWJ9XGJyYXtpKHQpaih0KX1ca2V0e2EodCliKHQpfV57Mn1cbGFi
ZWx7ZXE6QU9NUDJlbmVyZ3l9ClxlbmR7YWxpZ259ClRoZSBpbnRlZ3JhbCBpbiBccmVme2VxOkFP
TVAyZW5lcmd5fSBoYXMgdG8gYmUgZXZhbHVhdGVkIG51bWVyaWNhbGx5IGFuZCAkXG11JEhhcnRy
ZWUgYWNjdXJhY3kgY2FuIGJlIG9idGFpbmVkIHdpdGggbm8gbW9yZSB0aGFuIDEwIHF1YWRyYXR1
cmUgcG9pbnRzLlxjaXRle0hhc2VyOjE5OTJ0dH0gU2N1c2VyaWEgYW5kIEF5YWxhXGNpdGV7QXlh
bGE6MTk5OWZrfSByZXBvcnRlZCB0aGF0IHRoaXMgbWV0aG9kIHNjYWxlcyBsaW5lYXJseSBhcyBh
IGZ1bmN0aW9uIG9mIHN5c3RlbSBzaXplIGZvciBsYXJnZSBtb2xlY3VsZXMuIFRoZSBzYW1lIGFw
cHJvYWNoIGhhcyBiZWVuIGFwcGxpZWQgYnkgdGhlIHNhbWUgYXV0aG9ycyBmb3IgQ0NTRCwgd2hp
Y2ggbGVhZHMgdG8gbGluZWFyIHNjYWxpbmcgZm9yIGxhcmdlIG1vbGVjdWxlcy5cY2l0ZXtTY3Vz
ZXJpYToxOTk5YnB9IE1vcmVvdmVyLCBMYXBsYWNlIHRyYW5zZm9ybSBmaW5kcyBpdHMgdXNlZnVs
bmVzcyB3aGVuIGl0IGlzIGFwcGxpZWQgdG8gcGVydHVyYmF0aXZlIHRyaXBsZXMgY29ycmVjdGlv
biBpbiB0aGUgQ0NTRChUKSBtZXRob2Qgd2hlcmUgdGhlIGNvbXB1dGF0aW9uYWwgc2NhbGluZyBm
b3IgdGhlIGNhbGN1bGF0aW9uIG9mIChUKSBpcyByZWR1Y2VkIGZyb20gXE97bl43fSB0byBjbG9z
ZSB0byBcT3tuXjV9LlxjaXRle0NvbnN0YW5zOjIwMDB0d30gIAoKXHN1YnNlY3Rpb257TG9jYWxp
emF0aW9uIG9mIG1vbGVjdWxhciBvcmJpdGFsc30KVGhlIGNvbnZlbnRpb25hbCBhcHByb2FjaCBp
biBjb21wdXRpbmcgY29ycmVsYXRpb24gZW5lcmd5IGlzIHRvIHVzZSBjYW5vbmljYWwgb3JiaXRh
bHMgb2J0YWluZWQgZnJvbSB0aGUgSGFydHJlZS1Gb2NrIGVxdWF0aW9ucy4gQ2Fub25pY2FsIG9y
Yml0YWxzIGFyZSBkZWxvY2FsaXplZCBvdmVyIHRoZSBtb2xlY3VsZSwgYW5kIHRoZSBwcm9kdWN0
IGJldHdlZW4gdGhlbSBkZWNheXMgc2xvd2x5IHdpdGggZGlzdGFuY2U7IHRoZXJlZm9yZSwgdHdv
LWVsZWN0cm9uIGludGVncmFscyBoYXZlIHNpZ25pZmljYW50IHZhbHVlIGFuZCBjYW5ub3QgYmUg
ZGlzY2FyZGVkIHVzaW5nIHByZS1zY3JlZW5pbmcgdGVjaG5pcXVlcy4gRGVsb2NhbGl6ZWQgb3Ji
aXRhbHMgY2FuIGJlIHdyaXR0ZW4gYXMgYSBsaW5lYXIgY29tYmluYXRpb24gb2YgdGhlIGxvY2Fs
aXplZCBvcmJpdGFscyB0aGF0IGFyZSBjb25uZWN0ZWQgd2l0aCB0aGUgdW5pdGFyeSB0cmFuc2Zv
cm1hdGlvbi4gVGhlIGdvYWwgaXMgdG8gZmluZCB0aGVzZSBsb2NhbGl6ZWQgb3JiaXRhbHMuIExv
Y2FsaXplZCBvcmJpdGFscyBjYW4gZGVjcmVhc2UgY29tcHV0YXRpb24gdGltZSBmb3IgY29ycmVs
YXRlZCBtZXRob2RzLiBUaGUgcmVhc29uIGZvciB0aGlzIGlzIHRoYXQgaW4gYSBsYXJnZSBtb2xl
Y3VsZSwgdHdvIGVsZWN0cm9ucyB0aGF0IGFyZSBmYXIgYXBhcnQgZG8gbm90IGludGVyYWN0IHdp
dGggZWFjaCBvdGhlci4gSGVyZSB3ZSBwcmVzZW50IHR3byBwcm9jZWR1cmVzIHRoYXQgYXJlIHdp
ZGVseSB1c2VkIGZvciBvcmJpdGFsIGxvY2FsaXphdGlvbi5cY2l0ZXtQaXBlazoxOTg5d3R9CiAg
ICAgClxzdWJzdWJzZWN0aW9ue0JveXMtRm9zdGVyfQpNb3N0IGxvY2FsaXphdGlvbiBwcm9jZWR1
cmVzIGhhdmUgc2ltaWxhciBmb3JtdWxhdGlvbi4gVGhleSBtaW5pbWl6ZSB0aGUgZm9sbG93aW5n
IGV4cHJlc3Npb24gClxiZWdpbnthbGlnbn0KXGJyYXtpan1cT21lZ2Fca2V0e2tsfSA9IFxpbnRc
cGhpX3tpfV57Kn0oXG1hdGhiZntyfV97MX0pXHBoaV97an1eeyp9KFxtYXRoYmZ7cn1fezJ9KVxP
bWVnYShcbWF0aGJme3J9X3sxfSxcbWF0aGJme3J9X3syfSlccGhpX3trfShcbWF0aGJme3J9X3sx
fSlccGhpX3tsfShcbWF0aGJme3J9X3syfSlkXG1hdGhiZntyfV97MX1kXG1hdGhiZntyfV97Mn1c
bGFiZWx7ZXE6bG9jYWxpenRpb259ClxlbmR7YWxpZ259CndoZXJlICRcT21lZ2EoXG1hdGhiZnty
fV97MX0sXG1hdGhiZntyfV97Mn0pJCBpcyB0aGUgdHdvLWVsZWN0cm9uIG9wZXJhdG9yLiBCeSBj
aGFuZ2luZyB0aGUgdHdvLWVsZWN0cm9uIG9wZXJhdG9yIGluIFxyZWZ7ZXE6bG9jYWxpenRpb259
IGFuZCBtaW5pbWl6aW5nIGl0LCB3ZSBjYW4gZGVmaW5lIGRpZmZlcmVudCBsb2NhbGl6YXRpb24g
cHJvY2VkdXJlcy4gT25lIHN1Y2ggcHJvY2VkdXJlIGlzIHRoZSBCb3lzLUZvc3RlciBtZXRob2Rc
Y2l0ZXtGb3N0ZXI6MTk2MHRhLEJveXM6MTk2MHR2LFBpcGVrOjE5ODl3dH0gd2hlcmUgdGhlIHR3
byBlbGVjdHJvbiBvcGVyYXRvciBpcyBkZWZpbmVkIGFzICRcT21lZ2EoXG1hdGhiZntyfV97MX0s
XG1hdGhiZntyfV97Mn0pID0gKFxtYXRoYmZ7cn1fMSAtIFxtYXRoYmZ7cn1fMileezJ9JCwgYW5k
IG1pbmltaXppbmcgClxiZWdpbnthbGlnbn0KQihccGhpX3tpfSkgPSBcc3VtX3tpID0gMX1ee059
XGJyYXtpaX1cT21lZ2EoXG1hdGhiZntyfV97MX0sXG1hdGhiZntyfV97Mn0pXGtldHtpaX0KXGVu
ZHthbGlnbn0Kc2ltcGxpZmllcyB0byAKXGJlZ2lue2FsaWdufQpCKFxwaGlfe2l9KSA9IC1cZnJh
Y3syfXtOfVxzdW1fe2kgPmp9XntOfVtcYnJhe2l9XG1hdGhiZntyfVxrZXR7aX0gLSBcYnJhe2p9
XG1hdGhiZntyfVxrZXR7an1dXnsyfSArIDJUcihcbWF0aGJme3J9XnsyfSkgLSBcZnJhY3syfXtO
fVtUcihcbWF0aGJme3J9KV1eezJ9ClxlbmR7YWxpZ259CkluIG90aGVyIHdvcmRzLCB3ZSBhcmUg
bWF4aW1pemluZyB0aGUgZGlzdGFuY2UgYmV0d2VlbiB0d28gb3JiaXRhbHMuIEJ5IGRlZmluaW5n
IHRoZSB0d28tZWxlY3Ryb24gb3BlcmF0b3IgYXMgJFxPbWVnYShyX3sxfSxyX3syfSkgPSBcZnJh
Y3sxfXt8cl97MX0gLSByX3syfXx9JCB3ZSBnZXQgRWRtaXN0b24tUnVlZGVuYmVyZyBwcm9jZWR1
cmUsXGNpdGV7RWRtaXN0b246MTk2M3dsLEVkbWlzdG9uOjE5NjV2dCxQaXBlazoxOTg5d3R9IG9y
IE5pZXNzZW5cY2l0ZXtWb25OaWVzc2VuOjE5NzJmaixQaXBlazoxOTg5d3R9IGFzICRcT21lZ2Eo
XG1hdGhiZntyfV97MX0sXG1hdGhiZntyfV97Mn0pID0gXGRlbHRhKFxtYXRoYmZ7cn1fezF9IC0g
XG1hdGhiZntyfV97Mn0pJC4gVGhlIEJveXMtRm9zdGVyIG1ldGhvZCBpcyBzdGlsbCBpbiB1c2Us
IHVubGlrZSB0aGUgRWRtaXN0b24tUnVlZGVuYmVyZyBtZXRob2QsIGJlY2F1c2Ugb2YgbW9yZSBh
cHBlYWxpbmcgY29tcHV0YXRpb25hbCBjb3N0LCBcT3tuXjN9IHJhdGhlciB0aGFuIFxPe25eNX0u
ClxzdWJzdWJzZWN0aW9ue1BpcGVrLU1lemV5fQpUaGUgUGlwZWstTWV6ZXkgbG9jYWxpemF0aW9u
IHByb2NlZHVyZSBpcyBiYXNlZCBvbiB0aGUgbWF4aW1pemF0aW9uIG9mIHRoZSBNdWxsaWtlbiBw
b3B1bGF0aW9uIG51bWJlci5cY2l0ZXtQaXBlazoxOTg5d3R9ICJQb3B1bGF0aW9uIGxvY2FsaXph
dGlvbiIgY2FuIGJlIG9idGFpbmVkIGJ5IG1heGltaXppbmcgClxiZWdpbnthbGlnbn0KRCA9IFxm
cmFjeyhcc3VtX3tBID0gMX1ee259XG1hdGhiZntRfV97QX0pXnsyfX17XHN1bV97QSA9IDF9Xntu
fVxtYXRoYmZ7UX1fe0F9XnsyfX1cbGFiZWx7ZXE6bG9jYWxpemF0aW9uUE19ClxlbmR7YWxpZ259
CndoZXJlICRRX3tBfV57aX0kIGlzIHRoZSBNdWxsaWtlbiBwb3B1bGF0aW9uIG51bWJlciBvZiB0
aGUgb3JiaXRhbCAkaSQuIFRoZSBuZXcgb3BlcmF0b3IgY2FuIGJlIGludHJvZHVjZWQgYXMKXGJl
Z2lue2FsaWdufQpcaGF0e1B9X3tcbXV9ID0gXGhhdHtQfV97XG11fV57K30gPSBcZnJhY3sxfXsy
fVtca2V0e1x0aWxkZXtcbXV9fVxicmF7XG11fSArIFxrZXR7XG11fVxicmF7XHRpbGRle1xtdX19
XVxcClx0aWxkZXtcbXV9ID0gXHN1bV97XG51fVtcbWF0aGJme1N9XnstMX1dX3tcbXVcbnV9XGtl
dHtcbnV9ClxlbmR7YWxpZ259CkFmdGVyIG1heGltaXppbmcgXHJlZntlcTpsb2NhbGl6YXRpb25Q
TX0sIHdlIG9idGFpbiB0aGUgb3B0aW1hbCBwb3B1bGF0aW9uIGxvY2FsaXphdGlvbiAKXGJlZ2lu
e2FsaWdufQpQKFxwaGlfe2l9KSA9IFxzdW1fe2kgQX1ee04gbn1bXGJyYXtpfVxzdW1fe1xtdX1c
aGF0e1B9X3tcbXV9XGtldHtpfV1eezJ9ClxlbmR7YWxpZ259ClJlY2VudGx5LCBKe1xvfXJnZW5z
ZW4gYW5kIGNvd29ya2VycyBleHRlbmRlZCB0aGUgUGlwZWstTWV6ZXkgbG9jYWxpemF0aW9uIHBy
b2NlZHVyZSBub3Qgb25seSB0byBvY2N1cGllZCBvcmJpdGFscywgYnV0IGFsc28gdG8gdW5vY2N1
cGllZCBvcmJpdGFscyBmb3IgbGFyZ2UgbW9sZWN1bGVzLiBUaGlzIHByb2NlZHVyZSB3YXMgZXh0
ZW5kZWQgdXNpbmcgdGhlIExcIm93ZGluIHBvcHVsYXRpb24gYW5hbHlzaXMuXGNpdGV7SG95dmlr
OjIwMTN1Yn0KClxzdWJzZWN0aW9ue1RyYW5zZm9ybWF0aW9uIG9mIHRoZSB2aXJ0dWFsIG9yYml0
YWxzfQpJbiBvcmRlciB0byBhY2hpZXZlIGhpZ2ggYWNjdXJhY3kgd2l0aCBtZXRob2RzIGxpa2Ug
Q0NTRCBvciBDRVBBIHR5cGUsIG9uZSBuZWVkcyB0byB1c2UgbGFyZ2UgYmFzaXMgc2V0cy4gU2lu
Y2UgdGhlIHZpcnR1YWwgKHVub2NjdXBpZWQpIHNwYWNlIGlzIG11Y2ggbGFyZ2VyIHRoYW4gb2Nj
dXBpZWQgc3BhY2UgZm9yIGEgaGlnaC1xdWFsaXR5IGJhc2lzIHNldCwgbW9zdCBvZiB0aGUgY29t
cHV0YXRpb25hbCB0aW1lIGlzIHNwZW50IGNvbnRyYWN0aW5nIG92ZXIgdmlydHVhbCBpbmRleGVz
LiBSZWR1Y3Rpb24gb2YgdGhlIGNvbXB1dGF0aW9uIHRpbWUgY2FuIGJlIGFjaGlldmVkIGJ5IHJl
ZHVjaW5nIHRoZSBudW1iZXIgb2YgdmlydHVhbCBvcmJpdGFscy4gVmFyaW91cyBzY2hlbWVzIHdl
cmUgcHJvcG9zZWQgYW5kIGhlcmUgd2Ugd2lsbCBkaXNjdXNzIHByb2plY3RlZCBhdG9taWMgb3Ji
aXRhbHMgKFBBT3MpLCBwYWlyIG5hdHVyYWwgb3JiaXRhbHMgKFBOT3MpLCBhbmQgb3JiaXRhbC1z
cGVjaWZpYyB2aXJ0dWFscyAoT1NWcykgcHJvY2VkdXJlcy4gQWxsIG9mIHRoZW0gaGF2ZSBhIHNp
bWlsYXIgc3RydWN0dXJlLlxjaXRle1lhbmc6MjAxMmh5fSBBIG5ldyBwYWlyLXNwZWNpZmljIG9y
Yml0YWwsICRca2V0e3Jee2lqfX0kLCBjYW4gYmUgb2J0YWluZWQgYXMKXGJlZ2lue2FsaWdufQpc
a2V0e3Jee2lqfX0gPSBcc3VtX3thfVxrZXR7YX1RX3thcn1ee2lqfQpcZW5ke2FsaWdufQp3aGVy
ZSAkXGtldHthfSQgaXMgdGhlIHZpcnR1YWwgb3JiaXRhbCBhbmQgJFFfe2FyfV57aWp9JCBpcyB0
aGUgdHJhbnNmb3JtYXRpb24gbWF0cml4LiBUaGUgdHJhbnNmb3JtYXRpb24gbWF0cml4IGNhbiBi
ZSBhcHBsaWVkIHRvIHRyYW5zZm9ybSBzaW5nbGUgYW5kIGRvdWJsZSBhbXBsaXR1ZGVzIGFzClxi
ZWdpbnthbGlnbn0KdF97YX1ee2l9ICY9IFxzdW1fe3J9UV97YXJ9XntpaX10X3tyfV57aX1cXApU
X3thYn1ee2lqfSAmPSBcc3VtX3tyc31RX3thcn1ee2lqfVRfe3JzfV57aWp9UV97YnN9Xntpan0K
XGVuZHthbGlnbn0KVGhpcyBjYW4gYmUgYXBwbGllZCB0byB0cmFuc2Zvcm0gdGhlIHJlc2lkdWFs
IG9mIENFUEEgKFxyZWZ7Q0lTRHNpbmdsZXN9IGFuZCBccmVme0NJU0Rkb3VibGV9KSBvciBDQ1NE
IGVxdWF0aW9ucyAoXHJlZntDQ1NEc2luZ2xlc30gYW5kIFxyZWZ7Q0NTRGRvdWJsZX0pIHRvIGEg
bmV3IGJhc2lzLiBUaGlzIHN0aWxsIGRvZXMgbm90IGhhdmUgYW4gYWR2YW50YWdlIG92ZXIgY2Fu
b25pY2FsIGZvcm0gb2YgcHJldmlvdXMgZXF1YXRpb25zLCBidXQgd2l0aCB0aGUgc21hcnQgY2hv
aWNlIG9mIHZpcnR1YWwgb3JiaXRhbHMsIHRoZSBudW1iZXIgb2YgYW1wbGl0dWRlcyBhbmQgcmVz
aWR1YWxzIGluIHRoZSBuZXcgYmFzaXMgY2FuIGJlIHNpZ25pZmljYW50bHkgcmVkdWNlZC4gICAK
ClxzdWJzdWJzZWN0aW9ue1Byb2plY3RlZCBBdG9taWMgb3JiaXRhbHN9ClByb2plY3RlZCBhdG9t
aWMgb3JiaXRhbHMgKFBBT3MpIGlzIGEgbWV0aG9kIGZvciByZWR1Y3Rpb24gb2YgYSB2aXJ0dWFs
IHNwYWNlIHByb3Bvc2VkIGJ5IFB1bGF5LlxjaXRle1B1bGF5OjE5ODN0ZH0gSGlzIGFwcHJvYWNo
IGlzIGJhc2VkIG9uIHRoZSB0cmFuc2Zvcm1hdGlvbiBvZiB2aXJ0dWFsIG9yYml0YWxzIHdpdGgg
dGhlIHByb2plY3RlZCBhdG9taWMgb3JiaXRhbHMgYXMKXGJlZ2lue2FsaWdufQpca2V0e3J9ICY9
IFxzdW1fe2F9XGtldHthfVFfe2FyfVxcClFfe2FyfSAmPSBcYnJha2V0e2F8XGNoaV97cn1ee0FP
fX1cbGFiZWx7ZXE6UEFPc30KXGVuZHthbGlnbn0KSW4gXHJlZntlcTpQQU9zfSwgJFxjaGlfe3J9
XntBT30kIGFyZSBhdG9taWMgb3JiaXRhbHMuIFBBT3MgYXJlIG5vdCBwYWlyLXNwZWNpZmljLCBh
bmQgdGhleSBhcmUgbm90IG9ydGhvZ29uYWwgdG8gZWFjaCBvdGhlci4gVGhlIHRyYW5zZm9ybWVk
IG9yYml0YWwgaXMgcmVqZWN0ZWQgaWYgdGhlIG5vcm0gb2YgdGhlIG9yYml0YWwgYWZ0ZXIgcHJv
amVjdGlvbiBpcyBzbWFsbGVyIHRoYW4gdGhlIGRlZmluZWQgdGhyZXNob2xkLiBUbyByZWNvdmVy
IDk5LjhcJSBvZiB0aGUgY2Fub25pY2FsIGNvcnJlbGF0aW9uIGVuZXJneSwgb24gYXZlcmFnZSAz
MDAgUEFPcyBwZXIgcGFpciBoYXZlIHRvIGJlIGluY2x1ZGVkIGZvciBhbiBhdWctY2MtcFZUWiBi
YXNpcyBzZXQuXGNpdGV7WWFuZzoyMDEyaHl9IFBBTyBmb3JtYWxpc20gaGFzIGJlZW4gYXBwbGll
ZCB0byBjb3JyZWxhdGlvbiBtZXRob2RzXGNpdGV7V2VybmVyOjIwMTF1ZX0gYXMgd2VsbCBhcyBm
b3IgcHJlZGljdGlvbiBvZiB0aGUgbW9sZWN1bGFyIHByb3BlcnRpZXMgbGlrZSBkaXBvbGUgbW9t
ZW50IGFuZCBwb2xhcml6aWJpbGl0aWVzLlxjaXRle3J1c3MyMDA0bG9jYWx9Cgpcc3Vic3Vic2Vj
dGlvbntQYWlyLW5hdHVyYWwgb3JiaXRhbHN9CkFub3RoZXIgd2F5IG9mIHJlZHVjaW5nIHRoZSB2
aXJ0dWFsIHNwYWNlIGlzIGJ5IHV0aWxpemluZyB0aGUgcGFpciBuYXR1cmFsIG9yYml0YWwgZm9y
bWFsaXNtIChQTk8pLlxjaXRle01leWVyOjE5NzF3ZH0gUE5PIGRlbnNpdGllcyBmb3IgcGFpciAk
aWokIGZvciBjbG9zZWQtc2hlbGwgc3lzdGVtcyBhcmUgY29uc3RydWN0ZWQgYXMKXGJlZ2lue2Fs
aWdufQpcbWF0aGJme0R9Xntpan0gPSBcZnJhY3sxICsgXGRlbHRhX3tpan19e05fe2lqfX0oXHRp
bGRle1xtYXRoYmZ7VH19Xntpait9XG1hdGhiZntUfV57aWp9ICsgXHRpbGRle1xtYXRoYmZ7VH19
Xntpan1cbWF0aGJme1R9Xntpait9KQpcZW5ke2FsaWdufQp3aGVyZSAkVF97YWJ9Xntpan0kIGFy
ZSBNUDIgYW1wbGl0dWRlcwpcYmVnaW57YWxpZ259ClRfe2FifV57aWp9ID0gXGZyYWN7XGJyYWtl
dHtpanxhYn19e1xlcHNpbG9uX3tpfSArIFxlcHNpbG9uX3tqfSAtIFxlcHNpbG9uX3thfSAtIFxl
cHNpbG9uX3tifX0KXGVuZHthbGlnbn0KQnkgZGlhZ29uYWxpemluZyB0aGUgcGFpciBkZW5zaXR5
IHdlIG9idGFpbiBhIFBOTyBleHBhbnNpb24gb2YgdmlydHVhbCBvcmJpdGFscwpcYmVnaW57YWxp
Z259ClxtYXRoYmZ7RH1ee2lqfVxtYXRoYmZ7ZH1fe1xiYXJ7YX19Xntpan0gJj0gXGJhcntcbWF0
aGJme259fV57aWp9X3tcYmFye2F9fVxtYXRoYmZ7ZH1fe1xiYXJ7YX19Xntpan1cXApca2V0e1xi
YXJ7YX1ee2lqfX0gJj0gXHN1bV97YX1kX3thXGJhcnthfX1ee2lqfVxrZXR7YX0KXGVuZHthbGln
bn0Kd2hlcmUgJG5ee2lqfSQgaXMgdGhlIG5hdHVyYWwgb2NjdXBhdGlvbiBudW1iZXIuIEFsc28s
IGFueSB2aXJ0dWFsIG9yYml0YWwgY2FuIGJlIGV4cGFuZGVkIHdpdGggUE5PIGFzClxiZWdpbnth
bGlnbn0KXGtldHthfSAmPSBcc3VtX3tcYmFye2F9fVxiYXJ7ZH1fe1xiYXJ7YX1hfV57aWp9XGtl
dHtcYmFye2F9Xntpan19LgpcZW5ke2FsaWdufQpJbXByb3ZlZCBmb3JtdWxhdGlvbiBoYXMgYmVl
biBwcm9wb3NlZCBieSB0aGUgc2FtZSBhdXRob3IuXGNpdGV7TWV5ZXI6MTk3M2ZifSBQTk9zIGZv
ciBhIGdpdmVuIHBhaXIgJGlqJCBhcmUgb3J0aG9ub3JtYWwsIGJ1dCB0aGV5IGFyZSBub3Qgb3J0
aG9nb25hbCBiZXR3ZWVuIGRpZmZlcmVudCBwYWlycy4gQnkgZW1wbG95aW5nIHRoZSBsYXN0IGVx
dWF0aW9uLCB3ZSBjYW4gdHJhbnNmb3JtIHRoZSBDSVNEIG9yIENvdXBsZWQgUGFpciAoXHJlZntD
SVNEc2luZ2xlc30gYW5kIFxyZWZ7Q0lTRGRvdWJsZX0pIGFuZCBDb3VwbGVkIENsdXN0ZXIgcmVz
aWR1YWwgZXF1YXRpb25zIChccmVme0NDU0RzaW5nbGVzfSBhbmQgXHJlZntDQ1NEZG91YmxlfSkg
dG8gUE5PIGJhc2lzLlxjaXRle05lZXNlOjIwMDlrcH0gVGhlIHNhbWUgdHJhbnNmb3JtYXRpb24g
Y2FuIGJlIHBlcmZvcm1lZCBvbiB0aGUgZXhwbGljaXRseSBjb3JyZWxhdGVkIGZvcm11bGF0aW9u
IG9mIHRoZSBDRVBBIGFuZCBDQ1NEIChDRVBBLUYxMiBhbmQgQ0NTRC1GMTIpIGVxdWF0aW9ucywg
d2hpY2ggbGVhZHMgdG8gdGhlIExQTk8tQ0VQQS1GMTIgYW5kIExQTk8tQ0NTRC1GMTIgbWV0aG9k
cy4gSW4gb3JkZXIgZm9yIHRoZXNlIG1ldGhvZHMgdG8gc2NhbGUgYmV0dGVyIHRoYW4gdGhlIHNh
bWUgbWV0aG9kcyBpbiBjYW5vbmljYWwgZm9ybSwgdGhlbiB3ZSBuZWVkIHRvIGludHJvZHVjZSBh
cHByb3hpbWF0aW9uczogKGEpIFRydW5jYXRpb24gb2YgdGhlIFBOTyBmb3IgZWFjaCAkaWokIHBh
aXIuIFRoaXMgYXBwcm94aW1hdGlvbiBpcyBiYXNlZCBvbiB0aGUgbmF0dXJhbCBvY2N1cGF0aW9u
IG51bWJlciB2YWx1ZXMuIElmIHRoZSB2YWx1ZXMgYXJlIGxlc3MgdGhhbiBhIGRlZmluZWQgdGhy
ZXNob2xkIHZhbHVlLCB3ZSBkaXNjYXJkIHRoZXNlIFBOTyBmb3IgYSBnaXZlbiBwYWlyLiBGb3Ig
YSBpbmZpbml0ZWx5IHNtYWxsIHZhbHVlIG9mIFBOTyB0aHJlc2hvbGQsIHRoZSBlbmVyZ3kgb2J0
YWluZWQgaXMgdGhlIHNhbWUgYXMgdGhhdCBvYnRhaW5lZCBieSBjYW5vbmljYWwgQ0VQQSBvciBD
Q1NELiBPbiBhdmVyYWdlLCAzMC00MCBQTk9zIG5lZWQgdG8gYmUgaW5jbHVkZWQgdG8gcmVjb3Zl
ciA5OS44XCUgb2YgY29ycmVsYXRpb24gZW5lcmd5IGNhbGN1bGF0ZWQgd2l0aCB0aGUgY2Fub25p
Y2FsIENDU0Qgd2l0aCBhdWctY2MtcFZUWiBiYXNpcyBzZXQuXGNpdGV7WWFuZzoyMDEyaHl9IChi
KSBUcnVuY2F0aW9uIG9mICRpaiQgcGFpcnMgYmFzZWQgb24gdGhlaXIgTVAyIHBhaXIgZW5lcmd5
LiBJZiBhIGdpdmVuIHBhaXIgZW5lcmd5IGlzIGxlc3MgdGhhbiBhIGRlZmluZWQgdmFsdWUsIHRo
ZW4gdGhlIHBhaXIgaXMgbGVmdCBvdXQgb2YgdGhlIENFUEEgb3IgQ0NTRCBlcXVhdGlvbnMuIFN1
Y2ggYSBkZWZpbmVkIG1ldGhvZCBzY2FsZXMgYWxtb3N0IGxpbmVhcmx5IHdpdGggdGhlIHN5c3Rl
bSBzaXplO1xjaXRle05lZXNlOjIwMDlkYixOZWVzZToyMDA5a3AsUmlwbGluZ2VyOjIwMTNqa30g
aG93ZXZlciwgdGhlIGZvcm1hbCBjb21wdXRhdGlvbmFsIGNvc3Qgb2YgUE5PIGZvcm1hdGlvbiBp
cyBcT3tuXjV9LiBUaGlzIGNhbiBiZSByZWR1Y2VkIGZ1cnRoZXIuIFJlY2VudGx5LCB0aGUgUE5P
IG1ldGhvZG9sb2d5IGhhcyBiZWVuIGFwcGxpZWQgdG8gZXhwbGljaXRseSBjb3JyZWxhdGVkIE1Q
MiBhbmQgTVAzIG1ldGhvZHMuXGNpdGV7VGV3OjIwMTF0eixIYXR0aWc6MjAxMnVzLFRldzoyMDEz
d2p9IAoKXHN1YnN1YnNlY3Rpb257T3JiaXRhbC1zcGVjaWZpYyB2aXJ0dWFsc30KT3JiaXRhbC1z
cGVjaWZpYyB2aXJ0dWFscyAoT1NWcykgaGFzIGJlZW4gcmVjZW50bHkgcHJvcG9zZWQgYnkgWWFu
ZyBldCBhbC5cY2l0ZXtZYW5nOjIwMTF2Z30gT1NWcyBhcmUgZ2VuZXJhdGVkIGJ5IHNpbmd1bGFy
IHZhbHVlIGRlY29tcG9zaXRpb24gKFNWRCkgb2YgTVAyIGFtcGxpdHVkZXMgb2YgdGhlIGRpYWdv
bmFsIHBhaXIgYXMKXGJlZ2lue2FsaWdufQpbXG1hdGhiZntRfV57aSt9XG1hdGhiZntUfV57aWl9
XG1hdGhiZntRfV57aX1dX3tyc30gPSBcZGVsdGFfe3JzfXRfe3J9XntpaX1cXApca2V0e3Jee2l9
fSA9IFxzdW1fe2F9XGtldHthfVFfe2FyfV5pClxlbmR7YWxpZ259CkhlcmUsIHRoZSBuZXdseSBn
ZW5lcmF0ZWQgb3JiaXRhbCAkXGtldHtyXntpfX0kIGlzIHNwZWNpZmljIHRvIG9ubHkgb25lIG9j
Y3VwaWVkIG9yYml0YWwgJGkkLiBGb3IgYSBnaXZlbiBvY2N1cGllZCBvcmJpdGFsICRNTyQgJGkk
LCBPU1ZzIGFyZSBvcnRob2dvbmFsLCBidXQgYmV0d2VlbiBkaWZmZXJlbnQgb2NjdXBpZWQgb3Ji
aXRhbHMsIHRoZXkgYXJlIG5vbi1vcnRob2dvbmFsLiBUbyByZWNvdmVyIDk5LjhcJSBvZiBjYW5v
bmljYWwgQ0NTRCBjb3JyZWxhdGlvbiBlbmVyZ3kgd2l0aCBhdWctY2MtcFZUWiB3ZSBuZWVkIHRv
IGluY2x1ZGUgb24gYXZlcmFnZSAxMDAgT1NWcyBmb3IgZWFjaCBwYWlyLCB3aGljaCBpcyBpbiBi
ZXR3ZWVuIHRoZSBhdmVyYWdlIG51bWJlciBvZiBQQU9zIGFuZCBQTk9zLlxjaXRle1lhbmc6MjAx
Mmh5fSBUaGlzIGFwcHJvYWNoIGhhcyBiZWVuIGFwcGxpZWQgdG8gdGhlIE1QMiBhbmQgQ0NTRCBt
ZXRob2RzIGJ5IFlhbmcgZXQgYWwuXGNpdGV7WWFuZzoyMDEyaHksIEt1cmFzaGlnZToyMDEydnl9
ICAKClxzZWN0aW9ue0Z1dHVyZSByZXNlYXJjaCBwbGFufQpUaGUgdWx0aW1hdGUgZ29hbCBhbmQg
bG9uZy10ZXJtIHBsYW4gZm9yIHRoaXMgcmVzZWFyY2ggaXMgdGhlIGZvcm11bGF0aW9uIGFuZCBp
bXBsZW1lbnRhdGlvbiBvZiB0aGUgcmVkdWNlZCBzY2FsaW5nIGluIGV4cGxpY2l0bHkgY29ycmVs
YXRlZCBtZXRob2RzIHRoYXQgYXJlIGJhc2VkIG9uIGNvdXBsZWQgcGFpciBhbmQgY291cGxlZCBj
bHVzdGVyIG1ldGhvZHMuIEEgdGVzdCB2ZXJzaW9uIG9mIHRoZSBsb2NhbCBleHBsaWNpdGx5IGNv
cnJlbGF0ZWQgQ0VQQSBhbmQgQ0MgbWV0aG9kcyBoYXMgYmVlbiBpbXBsZW1lbnRlZCBieSBWYWxl
ZXYgaW4gT3JjYVxjaXRle05lZXNlOjIwMDl1dH0gKHVucHVibGlzaGVkIHJlc3VsdHMpLiBUaGlz
IG1ldGhvZCBpcyBiYXNlZCBvbiB0aGUgUE5PIGZvcm1hbGlzbTsgdGhlcmVmb3JlLCB0aGUgbmV3
IG1ldGhvZHMgYXJlIExQTk8tQ0VQQS8xLUYxMiBhbmQgTFBOTy1DQ1NELUYxMi4gVGhlc2UgbWV0
aG9kcyBjYWxjdWxhdGUgdGhlIGxvY2FsIGNvcnJlbGF0aW9uIGVuZXJneSBiYXNlZCBvbiBOZWVz
ZSdzIHdvcmtcY2l0ZXtOZWVzZToyMDA5ZGIsTmVlc2U6MjAwOWtwfSBhbmQgYWRkIGxvY2FsIEYx
MiAoZXhwbGljaXQgY29ycmVsYXRpb24pIGNvcnJlY3Rpb24gdG8gdGhlIHRvdGFsIGNvcnJlbGF0
aW9uIGVuZXJneS4gUHJlbGltaW5hcnkgcmVzZWFyY2ggc2hvd3MgcG9vciBjb252ZXJnZW5jZSBv
ZiB0aGUgZXhwbGljaXQgY29ycmVsYXRpb24gY29udHJpYnV0aW9uIChGMTIgYmFzZWQgb24gUE5P
IGFwcHJvYWNoKSB3aXRoIHJlc3BlY3QgdG8gdGhlIHRydW5jYXRpb24gcGFyYW1ldGVyLiBPbiB0
aGUgb3RoZXIgaGFuZCwgdGhlIGNvbnZlcmdlbmNlIG9mIHRoZSBMUE5PLUNDU0Qgd2l0aCByZXNw
ZWN0IHRvIHRoZSB0cnVuY2F0aW9uIHBhcmFtZXRlciBmb3IgUE5PcyBpcyBtdWNoIHF1aWNrZXIu
IEJvdGggdHJlbmRzIGFyZSBzaG93biBvbiBccmVme2ZpZzpQTk9jb252ZXJnZW5jZX0uIFRoZSBw
bG90IHNob3dzIHRoZSBkaWZmZXJlbmNlIGluIGVuZXJneSBiZXR3ZWVuIHRoZSB0cnVuY2F0ZWQg
bWV0aG9kIGFuZCB0aGUgbWV0aG9kIHdpdGhvdXQgdHJ1bmNhdGlvbiBmb3IgYSB3YXRlciBkaW1l
ciBhcyBhIGZ1bmN0aW9uIG9mIHRydW5jYXRpb24gcGFyYW1ldGVyLiAgClxiZWdpbntmaWd1cmV9
W2h0Yl0KCVxiZWdpbntjZW50ZXJ9CgkJXGluY2x1ZGVncmFwaGljc1t3aWR0aD0wLjdcdGV4dHdp
ZHRoXXtQTk9jb252ZXJnZW5jZS5wbmd9CglcY2FwdGlvbntSZWxhdGl2ZSBlbmVyZ3kgY29udmVy
Z2VuY2V9CglcbGFiZWx7ZmlnOlBOT2NvbnZlcmdlbmNlfQoJXGVuZHtjZW50ZXJ9ClxlbmR7Zmln
dXJlfQpXZSBjYW4gc2VlIHRoYXQgY29udmVyZ2VuY2UgaXMgbXVjaCBmYXN0ZXIgZm9yIExQTk8t
Q0NTRC4gVGhpcyBtZWFucyB0aGF0IGluIG9yZGVyIHRvIGNhbGN1bGF0ZSB0aGUgc2FtZSBwZXJj
ZW50YWdlIG9mIHRoZSBjb3JyZWxhdGlvbiBlbmVyZ3kgY29tcGFyZWQgdG8gdGhlIHN0YW5kYXJk
IENDU0QgYW5kIENDU0QtRjEyLCB3ZSBuZWVkIHRvIGluY2x1ZGUgbWFueSBtb3JlIFBOT3MgcGVy
IHBhaXIgb24gYXZlcmFnZSBmb3IgTFBOTy1DQ1NELUYxMiB0aGFuIGZvciB0aGUgTFBOTy1DQ1NE
LCB3aGljaCBhdXRvbWF0aWNhbGx5IGltcGxpZXMgc2lnbmlmaWNhbnRseSBsb25nZXIgY2FsY3Vs
YXRpb24gdGltZS4gVGhlIHJlYXNvbiBmb3IgdGhhdCBpcyBpbiB0aGUgY2hvaWNlIG9mIFBOT3Mu
IEluIG90aGVyIHdvcmRzLCBQTk9zIG1pZ2h0IG5vdCBiZSBzdWl0YWJsZSB0byByZXByZXNlbnQg
aW50ZWdyYWxzIHByb3Blcmx5IGluIEYxMiB0aGVvcnkuIE1vc3QgbGlrZWx5LCBhbXBsaXR1ZGVz
IHRoYXQgYXJlIHRydW5jYXRlZCBieSBQTk9zIGFyZSBuZWVkZWQgdG8gcmVwcmVzZW50IHRoZSB2
aXJ0dWFsIHNwYWNlIGluIHRoZSBzdHJvbmctb3J0aG9nb25hbGl0eSBwcm9qZWN0b3IgKFZhbGVl
diwgdW5wdWJsaXNoZWQgcmVzdWx0cykuIEJ5ICB0YWtpbmcgdGhpcyBpbnRvIGNvbnNpZGVyYXRp
b24sIHRoZSBuZXcgYXBwcm9hY2ggaGFzIHRvIGJlIGZvcm11bGF0ZWQgdG8gcmVwcmVzZW50IGxv
Y2FsIEYxMiBwcm9wZXJseS4gIApcXEluIHRoaXMgcmVzZWFyY2gsIEkgYW0gcGxhbm5pbmcgdG8g
ZGV2ZWxvcCBuZXcgYXBwcm9hY2hlcyBmb3IgY29uc3RydWN0aW5nIHZpcnR1YWxzIHNpbWlsYXIg
dG8gUE5PcyB0aGF0IHdpbGwgYmUgbW9yZSBzdWl0YWJsZSBmb3IgRjEyIG1ldGhvZHMuIEFsc28s
IGl0IGlzIGltcG9ydGFudCB0aGF0IHN1Y2ggbWV0aG9kcyBoYXZlIGEgbG93IGNvbXB1dGF0aW9u
YWwgY29zdC4gTmV3bHkgZGVmaW5lZCBQTk9zIHdpbGwgYmUgdXNlZCB0byBjYWxjdWxhdGUgdGhl
IGxvY2FsIEYxMiBjb250cmlidXRpb24gdG8gdGhlIGNvcnJlbGF0aW9uIGVuZXJneS4gRnVydGhl
cm1vcmUsIHdlIHdhbnQgdG8gZXN0YWJsaXNoIGEgbG93LWNvc3QgbWV0aG9kIHRoYXQgZ2l2ZXMg
aGlnaGx5IGFjY3VyYXRlIHJlc3VsdHMgZm9yIGxhcmdlIG1vbGVjdWxhciBzeXN0ZW1zLiBJbiBh
ZGRpdGlvbiwgdGhpcyBtZXRob2Qgd2lsbCBiZSBnZW5lcmFsaXplZCB0byBvcGVuIHNoZWxsIHN5
c3RlbXMuIFRoZSBuZXh0IHN0ZXAgd2lsbCBiZSBmb3JtdWxhdGlvbiBvZiB0aGUgYW5hbHl0aWMg
Z3JhZGllbnRzIG9mIHN1Y2ggYSBtZXRob2QsIHdoaWNoIHdpbGwgZW5hYmxlIHRoZSBjYWxjdWxh
dGlvbiBvZiBzcGVjdHJvc2NvcGljIHByb3BlcnRpZXMgYW5kIGdlb21ldHJ5IG9wdGltaXphdGlv
biBmb3IgbGFyZ2UgbW9sZWN1bGVzIHdpdGggaGlnaCBhY2N1cmFjeS4gSW1wbGVtZW50YXRpb24g
d2lsbCBiZSBwZXJmb3JtZWQgaW4gdGhlIE9yY2EgcXVhbnR1bSBjaGVtaXN0cnkgcGFja2FnZSxc
Y2l0ZXtOZWVzZToyMDA5dXR9IGFuZCBoaWdobHkgZWZmaWNpZW50IHBhcmFsbGVsIGltcGxlbWVu
dGF0aW9uIGluIHRoZSBNUFFDIHN1aXRlIG9mIHByb2dyYW1zXGNpdGV7TVBRQ30gd2l0aCB0aGUg
VGlsZWRBcnJheSBsaWJyYXJ5LlxjaXRle0p1c3R1czEzfSAgICAgIAoKClxiaWJsaW9ncmFwaHl7
cmVmcy5iaWJ9CgpcZW5ke2RvY3VtZW50fQo=
--089e014942a01361b905049f0ead--
